{"version":3,"sources":["flyui.mobile.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","parseBindings","bind","idx","token","colonIndex","key","value","tokens","result","match","regKeyValue","indexOf","substring","charAt","createBindings","bindings","source","type","binding","rolesFromNamespaces","namespaces","roles","fly","ui","$","extend","apply","concat","reverse","bindElement","element","parents","target","role","getAttribute","children","childrenCopy","deep","options","unbindElement","bindingTargetForRole","replace","regWhiteSpace","utils","parseEleOptions","textField","valueField","template","valueUpdate","valuePrimitive","itemChange","autoBind","BindingTarget","Binding","TemplateBinding","click","events","destroy","attr","style","EventBinding","css","flyBindingTarget","bindingTarget","deleteExpando","removeAttribute","unbindElementTree","unbindElementChildren","unbind","dom","object","node","slice","arguments","each","this","nodeType","notify","widget","retrievePrimitiveValues","item","values","ObservableArray","get","ObservableObject","initWidget","WidgetBindingTarget","dataSourceBinding","bindingName","fieldName","setter","Binder","ctor","that","_super","_dataBinding","proxy","dataBinding","_dataBound","dataBound","_itemChange","data","_ns","ns","_parents","items","removedItems","view","addedItems","dataSource","addedDataItems","refresh","action","DataSource","_dataSource","Select","tmpl","isArray","Class","Observable","support","widgetBinders","binders","FUNCTION","NUMBER","CHANGE","VALUE","SOURCE","EVENTS","CHECKED","CSS","DISABLED","READONLY","toString","fmt","culture","getTime","formatDate","formatNumber","undefined","path","dependencies","observable","_access","field","_change","change","parent","inArray","dependency","ch","trigger","start","stop","index","lastIndexOf","currentSource","set","getter","handler","render","html","toJSON","toDestroy","hasValue","hasSource","hasEvents","hasChecked","hasCss","widgetBinding","specificBinders","applyBinding","nodeName","toLowerCase","name","attribute","binder","push","TypedBinder","dataType","parsedValue","_parseValue","parseDate","parseFloat","NaN","Boolean","setAttribute","classes","className","hasClass","addClass","removeClass","enabled","readonly","disabled","handlers","off","on","text","dataFormat","visible","display","invisible","innerHTML","eventName","_initChange","fetch","add","remove","container","tBodies","appendChild","document","createElement","renderFile","compile","child","clone","cloneNode","reference","insertBefore","removeChild","input","checked","Date","splice","toDateString","check","wrapper","enable","first","_valueIsObservableObject","_valueIsObservableArray","valueIndex","valueLength","sourceItem","sourceValue","isObservableObject","listView","isBound","_preselect","./fly.core","./fly.data","./fly.template","./fly.ui","./fly.utils",2,"calculate","math","Math","digits","num","split","integer","Number","arg1","arg2","max","m","pow","floor","sub","mul","div","calc",3,"CTOR","EXTEND","prop","prototype","fn","tmp","ret","hasOwnProperty","statics","constructor","extendPrototype","callee",4,"prepareAnimationOptions","duration","complete","isFunction","BOOLEAN","effects","init","noop","teardown","hide","completeCallback","animate","instance","queue","promise","window","$win","$doc","$html","keys","INSERT","DELETE","BACKSPACE","TAB","ENTER","ESC","LEFT","UP","RIGHT","DOWN","END","HOME","SPACEBAR","PAGEUP","PAGEDOWN","F10","F12","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_DOT","NS","_scrollbar","OLDDISPLAY","mutationobserver","MutationObserver","WebKitMutationObserver","html5","scrollbar","isNaN","cssText","body","offsetWidth","scrollWidth","test","browser","userAgent","navigator","opera","firefox","chrome","safari","ActiveXObject","RegExp","ie","parseInt","$1","guid","c","random","v","toUpperCase","identity","Element","is","dequeue","disable","promiseShim","animatedPromise","animated","expr","focusable","isTabIndexNotNaN","href","addBack","filter","filters","hidden",5,"dataMethod","_data","_attachBubbleHandlers","normalizeSort","dir","descriptor","STRING","descriptors","grep","d","normalizeOperator","expression","operator","operatorMap","normalizeFilter","isEmptyObject","logic","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","originalName","convertRecords","_parse","wrapDataAccess","originalFunction","model","converter","ARR","replaceInRanges","ranges","replaceInRange","replaceWithObservable","viewIndex","at","removeModel","dataItem","uid","indexOfPristineModel","idField","id","indexOfModel","comparer","inferSelect","select","fields","option","firstField","secondField","attributes","specified","Model","LazyObservableArray","map","isPlainObject","isNumber","isNumeric","Deferred","ajax","CREATE","READ","UPDATE","DESTROY","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","EMPTY","PUSH","CRUD","==","!=","<","<=",">",">=","notsubstringof","dateRegExp","newLineRegExp","quoteRegExp","read","url","server","pageMode","_map","_prefetch","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","sort","_filter","_total","total","_shouldDetachObservableParents","transport","Transport","create","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","reader","DataReader","modelBase","childrenField","_detachObservableParents","_observe","_online","interface","serverPage","getByUid","_storeData","_addRange","_process","_index","skip","_observeView","_createNewModel","insert","pushed","autoSync","pristine","accept","_updatePristineForModel","_removeItems","_push","operation","_readData","destroyed","found","_eachItem","_removePristineForModel","pop","_removeModelFromRanges","_updateRangesLength","created","isNew","updated","dirty","cancelChanges","_cancelModel","hasChanges","_executeOnPristineForModel","callback","_eachPristineItem","_pristineForModel","__state__","params","_params","deferred","_queueRequest","isPrevented","_dequeueRequest","resolve","cache","success","error","args","reject","response","parse","_handleCustomErrors","state","updatePristine","_skip","end","x","y","xhr","status","errorThrown","_pageParam","currentPageNo","take","pageParam","thatOptions","_requestInProgress","_pending","errors","wrap","wrapAll","arrayType","_changeHandler","_take","_queryProcess","Query","process","_mergeState","query","remote","_query","then","next","totalPages","prev","val","min","round","ceil","range","pageSkip","size","_skipRequestsInProgress","_findRange","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","count","_prefetchSuccessHandler","force","temp","clearTimeout","_timeout","setTimeout","rangeLength","startOffset","NodeDataSource","Node","define","parentNode","_initChildren","hasChildren","_find","method","childrenOptions","Array","_childrenOptions","_loaded","parameterMap","collection","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","array","shouldSerialize","Cache","_store","stringify","find","clear","store","inmemory","dataModel","serializeFunction","serialize","dataFunction","serializeGetters","_dataAccessFunction","fromName","from","rows","filterExpr","expressions","fieldFunctions","operatorFunctions","and","or","operators","quote","ignoreCase","join","filterCallback","toArray","selector","order","compare","Comparer","orderBy","orderByDescending","comparers","combine","current","compiled","predicate","Function","currentTransport","RemoteTransport","LocalTransport","update","setup","parameters","op","b","ignore","date","exec","eq","neq","gt","gte","lt","lte","startswith","endswith","contains","doesnotcontain","localeCompare","nodeDataSource","./fly.format","./fly.model","./fly.observable",6,"isTouch","touch","documentElement","isLosecapture","isSetCapture","types","over","getEvent","event","touches","originalEvent","DragEvent","onstart","onover","onend","startFix","overFix","endFix","selectstart","setCapture","releaseCapture","elem","minX","minY","maxX","maxY","$elem","dragEvent","startType","api","isFixed","dl","scrollLeft","dt","scrollTop","w","width","h","height","offset","left","startLeft","top","startTop","clientX","clientY","position",7,"objectToString","numberRegExp","escapeableRegExp","_meta","\b","\t","\n","\f","\r","\"","\\","format","regExps","M+","getMonth","d+","getDate","H+","getHours","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","getFullYear","substr","reg","real","regExp","stand","now","formats","y+","newData","newFormat","search","JSON","json","quoteString","pairs","k","evalJSON","src","eval","secureEvalJSON","filtered","SyntaxError","string","charCodeAt","makeArray","unshift",8,"colRegExp","colLength","row","sum","col","cols","td","cls","ready","rowie","resize","throttle",9,"mobile","docEle","version","fontSize","clientWidth",10,"os","agent","sendRequest","android","prompt","ios","iframe","request","async","timeout","done","_done","fail","_fail","message",11,"getFieldByName","obj","equal","xtype","ytype","parsers","number","boolean","default","defaultValues","initializers","_initializers","defaults","_defaultId","_notifyChange","editable","initiator","_set","base","proto","functionFields","nullable","defaultValue",12,"wrapExpression","members","paramName","member","eventHandler","context","prefix","getterCache","setterCache","GET","OBJ","safe","preventDefault","_events","idt","original","handlersIsFunction","eventNames","sender","_defaultPrevented","isDefaultPrevented","forEach","composite","paths","shift","isObservableArray","isDataSource","howMany","len","every","some","empty","_parent","./fly.class",13,14,"getVariable","REMOVE_RE","SPLIT_RE","KEYWORDS_RE","NUMBER_RE","BOUNDARY_RE","SPLIT2_RE","compiler","line","compress","replaces","thisLine","parser","debug","escapeSyntax","escape","uniq","print","include","helpers","headerCode","openTag","closeTag","$data","$filename","$utils","$helpers","$out","$line","isNewEngine","trim","mainCode","footerCode","$0","Render","escapeMap","'","&","KEYWORDS","escapeFn","escapeHTML","content","filename","config","cacheStore","showDebugInfo","getElementById","$include","$string","$escape","$each","helper","onerror","console","js","parts","as","param",15,"ROLE","HANDLER","Widget","_hasBindingTarget","_tabindex","TABINDEX","tabindex","removeAttr","setOptions","_setEvents","getSize","currentSize","_size","_resize","setSize","removeData","angular","DataBoundWidget","dataItems","_angularItems","cmd","elements","register","widgetKeyRegExp","widgetKey","parseOption",16,"dashRegExp","jsonRegExp","jsonFormatRegExp","getQueryString","location","unescape","func","wait","previous","later","leading","remaining","trailing","debounce","immediate","timestamp","last","callNow","isInView","$element","windowLeft","windowTop","windowWidth","windowHeight","CONTEXTPATH","getByteLen","str","selectRange","ele","createTextRange","collapse","moveEnd","moveStart","focus","setSelectionRange","post","doc","getElementsByTagName","getComputedStyles","properties","computedStyle","defaultView","styles","getComputedStyle","getPropertyValue","currentStyle","strMatch","g1","isScrollable","overflow","activeElement","caret","rangeElement","isPosition","selectionStart","selectionEnd","selection","rangeDuplicated","duplicate","moveToBookmark","createRange","getBookmark","setEndPoint",17,"REGEXP","EMAIL","URL","TEL","ZIPCODE","PROMPT","radio","checkbox","email","tel","pattern","multiple","UNDEFINED","showTooltip","isRegExp","valid","regex","typeSplit","matchRegex","isMultiple","newRegExp","isAllPass","partValue","tooltip","validateTip","closest","flyTooltip","isEmpty","trimValue","isOverflow","step","abs","customValid","remind","tag","control","title","finalText","customTxt","validate","hasTooltip","tagName","required","isPass","eles","pass","toggleClass","./fly.calculate",18,"./fly.binder","./fly.drag","./fly.legacy","./fly.mobile.core","./fly.mobile.request","./fly.router","./fly.validate"],"mappings":"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","file":"flyui.mobile.min.js","sourceRoot":"/source/","sourcesContent":["/*! flyui v1.0.3 | by huanzhang & ueteam | (c) 2016 iFlytek, Inc. | Licensed under MIT | 2016-07-03 21:07:44 CST */\n(function e(t, n, r) {\n    function s(o, u) {\n        if (!n[o]) {\n            if (!t[o]) {\n                var a = typeof require == \"function\" && require;\n                if (!u && a) return a(o, !0);\n                if (i) return i(o, !0);\n                var f = new Error(\"Cannot find module '\" + o + \"'\");\n                throw f.code = \"MODULE_NOT_FOUND\", f\n            }\n            var l = n[o] = {\n                exports: {}\n            };\n            t[o][0].call(l.exports, function(e) {\n                var n = t[o][1][e];\n                return s(n ? n : e)\n            }, l, l.exports, e, t, n, r)\n        }\n        return n[o].exports\n    }\n    var i = typeof require == \"function\" && require;\n    for (var o = 0; o < r.length; o++) s(r[o]);\n    return s\n})({\n    1: [\n        function(require, module, exports) {\n            /**\n             * 绑定器\n             * 参考Knockout/kendo/VUE\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-06-30\n             */\n\n            'use strict';\n\n            // 依赖\n            var fly = require('./fly.core'),\n                utils = require('./fly.utils'),\n                data = require('./fly.data'),\n                tmpl = require('./fly.template'),\n                ui = require('./fly.ui'),\n                $ = fly.$,\n                proxy = $.proxy,\n                isArray = $.isArray,\n                Class = fly.Class,\n                DataSource = data.DataSource,\n                Observable = fly.Observable,\n                ObservableObject = fly.ObservableObject,\n                ObservableArray = fly.ObservableArray,\n                deleteExpando = fly.support.deleteExpando;\n\n            // 绑定器\n            var widgetBinders = {},\n                binders = {\n                    widget: widgetBinders\n                };\n\n            // 静态变量\n            var FUNCTION = 'function',\n                NUMBER = 'number',\n                CHANGE = 'change',\n                VALUE = 'value',\n                SOURCE = 'source',\n                EVENTS = 'events',\n                CHECKED = 'checked',\n                CSS = 'css',\n                DISABLED = 'disabled',\n                READONLY = 'readonly';\n\n            // 正则表达式\n            var regKeyValue = /[A-Za-z0-9_\\-]+:(\\{([^}]*)\\}|[^,}]+)/g,\n                regWhiteSpace = /\\s/g,\n                regTemplate = /template$/i,\n                regDate = /^\\/Date\\((.*?)\\)\\/$/,\n                regNewLine = /(\\r+|\\n+)/g,\n                regQuote = /(?=['\\\\])/g;\n\n            //格式化字符串\n            var toString = function(value, fmt, culture) {\n                if (value && fmt) {\n                    if (value.getTime()) {\n                        return formatDate(value, fmt, culture);\n                    } else if (typeof value === NUMBER) {\n                        return formatNumber(value, fmt, culture);\n                    }\n                }\n\n                return value !== undefined ? value : '';\n            };\n\n            var Binding = Observable.extend({\n\n                ctor: function(parents, path) {\n                    var that = this;\n                    that._super();\n                    that.source = parents && parents[0];\n                    that.parents = parents;\n                    that.path = path;\n                    that.dependencies = {};\n                    that.dependencies[path] = true;\n                    that.observable = that.source instanceof Observable;\n\n                    that._access = function(e) {\n                        that.dependencies[e.field] = true;\n                    };\n\n                    if (that.observable) {\n                        that._change = function(e) {\n                            that.change(e);\n                        };\n\n                        that.source.bind(CHANGE, that._change);\n                    }\n                },\n\n                _parents: function() {\n                    var parents = this.parents;\n                    var value = this.get();\n\n                    if (value && typeof value.parent == FUNCTION) {\n                        var parent = value.parent();\n\n                        if ($.inArray(parent, parents) < 0) {\n                            parents = [parent].concat(parents);\n                        }\n                    }\n\n                    return parents;\n                },\n\n                change: function(e) {\n                    var dependency,\n                        ch,\n                        field = e.field,\n                        that = this;\n\n                    if (that.path === 'this') {\n                        that.trigger(CHANGE, e);\n                    } else {\n                        for (dependency in that.dependencies) {\n                            if (dependency.indexOf(field) === 0) {\n                                ch = dependency.charAt(field.length);\n\n                                if (!ch || ch === '.' || ch === '[') {\n                                    that.trigger(CHANGE, e);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                },\n\n                start: function(source) {\n                    source.bind('get', this._access);\n                },\n\n                stop: function(source) {\n                    source.unbind('get', this._access);\n                },\n\n                get: function() {\n\n                    var that = this,\n                        source = that.source,\n                        index = 0,\n                        path = that.path,\n                        result = source;\n\n                    if (!that.observable) {\n                        return result;\n                    }\n\n                    that.start(that.source);\n\n                    result = source.get(path);\n\n                    // Traverse the observable hierarchy if the binding is not resolved at the current level.\n                    while (result === undefined && source) {\n\n                        source = that.parents[++index];\n\n                        if (source instanceof ObservableObject) {\n                            result = source.get(path);\n                        }\n                    }\n\n                    // second pass try to get the parent from the object hierarchy\n                    if (result === undefined) {\n                        source = that.source; //get the initial source\n\n                        while (result === undefined && source) {\n                            source = source.parent();\n\n                            if (source instanceof ObservableObject) {\n                                result = source.get(path);\n                            }\n                        }\n                    }\n\n                    // If the result is a function - invoke it\n                    if (typeof result === FUNCTION) {\n                        index = path.lastIndexOf('.');\n\n                        // If the function is a member of a nested observable object make that nested observable the context (this) of the function\n                        if (index > 0) {\n                            source = source.get(path.substring(0, index));\n                        }\n\n                        // Invoke the function\n                        that.start(source);\n\n                        if (source !== that.source) {\n                            result = result.call(source, that.source);\n                        } else {\n                            result = result.call(source);\n                        }\n\n                        that.stop(source);\n                    }\n\n                    // If the binding is resolved by a parent object\n                    if (source && source !== that.source) {\n\n                        that.currentSource = source; // save parent object\n\n                        // Listen for changes in the parent object\n                        source.unbind(CHANGE, that._change)\n                            .bind(CHANGE, that._change);\n                    }\n\n                    that.stop(that.source);\n\n                    return result;\n                },\n\n                set: function(value) {\n                    var source = this.currentSource || this.source;\n\n                    var field = fly.getter(this.path)(source);\n\n                    if (typeof field === FUNCTION) {\n                        if (source !== this.source) {\n                            field.call(source, this.source, value);\n                        } else {\n                            field.call(source, value);\n                        }\n                    } else {\n                        source.set(this.path, value);\n                    }\n                },\n\n                destroy: function() {\n                    if (this.observable) {\n                        this.source.unbind(CHANGE, this._change);\n                        if (this.currentSource) {\n                            this.currentSource.unbind(CHANGE, this._change);\n                        }\n                    }\n\n                    this.unbind();\n                }\n            });\n\n            var EventBinding = Binding.extend({\n                get: function() {\n                    var source = this.source,\n                        path = this.path,\n                        index = 0,\n                        handler;\n\n                    handler = source.get(path);\n\n                    while (!handler && source) {\n                        source = this.parents[++index];\n\n                        if (source instanceof ObservableObject) {\n                            handler = source.get(path);\n                        }\n                    }\n\n                    return proxy(handler, source);\n                }\n            });\n\n            var TemplateBinding = Binding.extend({\n                ctor: function(source, path, template) {\n                    this._super(source, path);\n                    this.template = template;\n                },\n\n                render: function(value) {\n                    var html;\n\n                    this.start(this.source);\n\n                    html = tmpl(this.template, value.toJSON && value.toJSON() || value);\n\n                    this.stop(this.source);\n\n                    return html;\n                }\n            });\n\n            var BindingTarget = Class.extend({\n\n                ctor: function(target, options) {\n                    this.target = target;\n                    this.options = options;\n                    this.toDestroy = [];\n                },\n\n                bind: function(bindings) {\n                    var key,\n                        hasValue,\n                        hasSource,\n                        hasEvents,\n                        hasChecked,\n                        hasCss,\n                        widgetBinding = this instanceof WidgetBindingTarget,\n                        specificBinders = this.binders();\n\n                    for (key in bindings) {\n                        if (key == VALUE) {\n                            hasValue = true;\n                        } else if (key == SOURCE) {\n                            hasSource = true;\n                        } else if (key == EVENTS) {\n                            hasEvents = true;\n                        } else if (key == CHECKED) {\n                            hasChecked = true;\n                        } else if (key == CSS && !widgetBinding) {\n                            hasCss = true;\n                        } else {\n                            this.applyBinding(key, bindings, specificBinders);\n                        }\n                    }\n                    if (hasSource) {\n                        this.applyBinding(SOURCE, bindings, specificBinders);\n                    }\n\n                    if (hasValue) {\n                        this.applyBinding(VALUE, bindings, specificBinders);\n                    }\n\n                    if (hasChecked) {\n                        this.applyBinding(CHECKED, bindings, specificBinders);\n                    }\n\n                    if (hasEvents) {\n                        this.applyBinding(EVENTS, bindings, specificBinders);\n                    }\n\n                    if (hasCss && !widgetBinding) {\n                        this.applyBinding(CSS, bindings, specificBinders);\n                    }\n                },\n\n                binders: function() {\n                    return binders[this.target.nodeName.toLowerCase()] || {};\n                },\n\n                applyBinding: function(name, bindings, specificBinders) {\n                    var binder = specificBinders[name] || binders[name],\n                        toDestroy = this.toDestroy,\n                        attribute,\n                        binding = bindings[name];\n\n                    if (binder) {\n                        binder = new binder(this.target, bindings, this.options);\n\n                        toDestroy.push(binder);\n\n                        if (binding instanceof Binding) {\n                            binder.bind(binding);\n                            toDestroy.push(binding);\n                        } else {\n                            for (attribute in binding) {\n                                binder.bind(binding, attribute);\n                                toDestroy.push(binding[attribute]);\n                            }\n                        }\n                    } else if (name !== 'template') {\n                        throw new Error('The ' + name +\n                            ' binding is not supported by the ' + this.target\n                            .nodeName.toLowerCase() + ' element');\n                    }\n                },\n\n                destroy: function() {\n                    var idx,\n                        length,\n                        toDestroy = this.toDestroy;\n\n                    for (idx = 0, length = toDestroy.length; idx < length; idx++) {\n                        toDestroy[idx].destroy();\n                    }\n                }\n            });\n\n            var WidgetBindingTarget = BindingTarget.extend({\n\n                binders: function() {\n                    return widgetBinders[this.target.name.toLowerCase()] || {};\n                },\n\n                applyBinding: function(name, bindings, specificBinders) {\n                    var binder = specificBinders[name] || widgetBinders[name],\n                        toDestroy = this.toDestroy,\n                        attribute,\n                        binding = bindings[name];\n\n                    if (binder) {\n                        binder = new binder(this.target, bindings, this.target.options);\n\n                        toDestroy.push(binder);\n\n                        if (binding instanceof Binding) {\n                            binder.bind(binding);\n                            toDestroy.push(binding);\n                        } else {\n                            for (attribute in binding) {\n                                binder.bind(binding, attribute);\n                                toDestroy.push(binding[attribute]);\n                            }\n                        }\n                    } else {\n                        throw new Error('The ' + name +\n                            ' binding is not supported by the ' + this.target\n                            .name + ' widget');\n                    }\n                }\n            });\n\n            var Binder = Class.extend({\n\n                ctor: function(element, bindings, options) {\n                    this.element = element;\n                    this.bindings = bindings;\n                    this.options = options;\n                },\n\n                bind: function(binding, attribute) {\n                    var that = this;\n\n                    binding = attribute ? binding[attribute] : binding;\n\n                    binding.bind(CHANGE, function(e) {\n                        that.refresh(attribute || e);\n                    });\n\n                    that.refresh(attribute);\n                },\n\n                destroy: function() {}\n            });\n\n            var TypedBinder = Binder.extend({\n\n                dataType: function() {\n                    var dataType = this.element.getAttribute('data-type') ||\n                        this.element.type || 'text';\n                    return dataType.toLowerCase();\n                },\n\n                parsedValue: function() {\n                    return this._parseValue(this.element.value, this.dataType());\n                },\n\n                _parseValue: function(value, dataType) {\n                    if (dataType == 'date') {\n                        value = fly.parseDate(value, 'yyyy-MM-dd');\n                    } else if (dataType == 'datetime') {\n                        value = fly.parseDate(value, 'yyyy-MM-dd HH:mm:ss');\n                    } else if (dataType == 'number') {\n                        value = parseFloat(value);\n                    } else if (dataType == 'boolean') {\n                        value = value.toLowerCase();\n                        if (parseFloat(value) !== NaN) {\n                            value = Boolean(parseFloat(value));\n                        } else {\n                            value = (value === 'true');\n                        }\n                    }\n                    return value;\n                }\n            });\n\n            binders.attr = Binder.extend({\n                refresh: function(key) {\n                    this.element.setAttribute(key, this.bindings.attr[key].get());\n                }\n            });\n\n            binders.css = Binder.extend({\n                ctor: function(element, bindings, options) {\n                    this._super(element, bindings, options);\n                    this.classes = {};\n                },\n                refresh: function(className) {\n                    var element = $(this.element),\n                        binding = this.bindings.css[className],\n                        hasClass = this.classes[className] = binding.get();\n                    if (hasClass) {\n                        element.addClass(className);\n                    } else {\n                        element.removeClass(className);\n                    }\n                }\n            });\n\n            binders.style = Binder.extend({\n                refresh: function(key) {\n                    this.element.style[key] = this.bindings.style[key].get() ||\n                        \"\";\n                }\n            });\n\n            binders.enabled = Binder.extend({\n                refresh: function() {\n                    if (this.bindings.enabled.get()) {\n                        this.element.removeAttribute(DISABLED);\n                    } else {\n                        this.element.setAttribute(DISABLED, DISABLED);\n                    }\n                }\n            });\n\n            binders.readonly = Binder.extend({\n                refresh: function() {\n                    if (this.bindings.readonly.get()) {\n                        this.element.setAttribute(READONLY, READONLY);\n                    } else {\n                        this.element.removeAttribute(READONLY);\n                    }\n                }\n            });\n\n            binders.disabled = Binder.extend({\n                refresh: function() {\n                    if (this.bindings.disabled.get()) {\n                        this.element.setAttribute(DISABLED, DISABLED);\n                    } else {\n                        this.element.removeAttribute(DISABLED);\n                    }\n                }\n            });\n\n            binders.events = Binder.extend({\n                ctor: function(element, bindings, options) {\n                    this._super(element, bindings, options);\n                    this.handlers = {};\n                },\n\n                refresh: function(key) {\n                    var element = $(this.element),\n                        binding = this.bindings.events[key],\n                        handler = this.handlers[key];\n\n                    if (handler) {\n                        element.off(key, handler);\n                    }\n\n                    handler = this.handlers[key] = binding.get();\n\n                    element.on(key, binding.source, handler);\n                },\n\n                destroy: function() {\n                    var element = $(this.element),\n                        handler;\n\n                    for (handler in this.handlers) {\n                        element.off(handler, this.handlers[handler]);\n                    }\n                }\n            });\n\n            binders.text = Binder.extend({\n                refresh: function() {\n                    var text = this.bindings.text.get();\n                    var dataFormat = this.element.getAttribute(\"data-format\") ||\n                        \"\";\n                    if (text == null) {\n                        text = \"\";\n                    }\n\n                    $(this.element).text(toString(text, dataFormat));\n                }\n            });\n\n            binders.visible = Binder.extend({\n                refresh: function() {\n                    if (this.bindings.visible.get()) {\n                        this.element.style.display = \"\";\n                    } else {\n                        this.element.style.display = \"none\";\n                    }\n                }\n            });\n\n            binders.invisible = Binder.extend({\n                refresh: function() {\n                    if (!this.bindings.invisible.get()) {\n                        this.element.style.display = \"\";\n                    } else {\n                        this.element.style.display = \"none\";\n                    }\n                }\n            });\n\n            binders.html = Binder.extend({\n                refresh: function() {\n                    this.element.innerHTML = this.bindings.html.get();\n                }\n            });\n\n            binders.value = TypedBinder.extend({\n                ctor: function(element, bindings, options) {\n                    this._super(element, bindings, options);\n                    this._change = proxy(this.change, this);\n                    this.eventName = options.valueUpdate || CHANGE;\n\n                    $(this.element).on(this.eventName, this._change);\n\n                    this._initChange = false;\n                },\n\n                change: function() {\n                    this._initChange = this.eventName != CHANGE;\n\n                    this.bindings[VALUE].set(this.parsedValue());\n\n                    this._initChange = false;\n                },\n\n                refresh: function() {\n                    if (!this._initChange) {\n                        var value = this.bindings[VALUE].get();\n\n                        if (value == null) {\n                            value = '';\n                        }\n\n                        var type = this.dataType();\n\n                        if (type == \"date\") {\n                            value = toString(value, \"yyyy-MM-dd\");\n                        } else if (type == \"datetime-local\") {\n                            value = toString(value, \"yyyy-MM-ddTHH:mm:ss\");\n                        }\n\n                        this.element.value = value;\n                    }\n\n                    this._initChange = false;\n                },\n\n                destroy: function() {\n                    $(this.element).off(this.eventName, this._change);\n                }\n            });\n\n            binders.source = Binder.extend({\n\n                ctor: function(element, bindings, options) {\n\n                    this._super(element, bindings, options);\n\n                    var source = this.bindings.source.get();\n                    if (source instanceof DataSource && options.autoBind !== false) {\n                        source.fetch();\n                    }\n                },\n\n                refresh: function(e) {\n                    var that = this,\n                        itemChange = that.options.itemChange,\n                        source = that.bindings.source.get();\n\n                    //if (source instanceof ObservableArray) {\n                    e = e || {};\n\n                    if (e.action == \"add\") {\n                        that.add(e.index, e.items);\n                    } else if (e.action == \"remove\") {\n                        that.remove(e.index, e.items);\n                    } else if (e.action == undefined) {\n                        that.render();\n                    } else if (e.action == \"itemchange\" && itemChange) {\n                        that.render();\n                    }\n                    //} else {\n                    //    that.render();\n                    //}\n                },\n\n                container: function() {\n                    var element = this.element;\n\n                    if (element.nodeName.toLowerCase() == \"table\") {\n                        if (!element.tBodies[0]) {\n                            element.appendChild(document.createElement(\"tbody\"));\n                        }\n                        element = element.tBodies[0];\n                    }\n\n                    return element;\n                },\n\n                template: function() {\n                    var options = this.options,\n                        template = options.template,\n                        nodeName = this.container().nodeName.toLowerCase();\n\n                    if (!template) {\n                        if (nodeName == \"select\") {\n                            if (options.valueField || options.textField) {\n                                template = '<option value=\"{{' + options.valueField ||\n                                    options.textField + '}}\">' + options.textField ||\n                                    options.valueField + '</option>';\n                            } else {\n                                template = \"<option>{{data}}</option>\";\n                            }\n                        } else if (nodeName == \"tbody\") {\n                            template = \"<tr><td>{{data}}</td></tr>\";\n                        } else if (nodeName == \"ul\" || nodeName == \"ol\") {\n                            template = \"<li>{{data}}</li>\";\n                        } else {\n                            template = \"{{data}}\";\n                        }\n                        template = tmpl.compile(template);\n                    } else {\n                        template = tmpl.renderFile(template);\n                    }\n\n                    return template;\n                },\n\n                add: function(index, items) {\n                    var element = this.container(),\n                        parents,\n                        idx,\n                        length,\n                        child,\n                        clone = element.cloneNode(false),\n                        reference = element.children[index];\n\n                    $(clone).html(this.template()(items));\n\n                    if (clone.children.length) {\n                        parents = this.bindings.source._parents();\n\n                        for (idx = 0, length = items.length; idx < length; idx++) {\n                            child = clone.children[0];\n                            element.insertBefore(child, reference || null);\n                            bindElement(child, items[idx], this.options.roles, [\n                                items[idx]\n                            ].concat(parents));\n                        }\n                    }\n                },\n\n                remove: function(index, items) {\n                    var idx, element = this.container();\n\n                    for (idx = 0; idx < items.length; idx++) {\n                        var child = element.children[index];\n                        unbindElementTree(child);\n                        element.removeChild(child);\n                    }\n                },\n\n                render: function() {\n                    var source = this.bindings.source.get(),\n                        parents,\n                        idx,\n                        length,\n                        element = this.container(),\n                        template = this.template();\n\n                    if (source instanceof DataSource) {\n                        source = source.view();\n                    }\n\n                    if (!(source instanceof ObservableArray) && !isArray(source)) {\n                        source = [source];\n                    }\n\n                    if (this.bindings.template) {\n                        unbindElementChildren(element);\n\n                        $(element).html(this.bindings.template.render(source));\n\n                        if (element.children.length) {\n                            parents = this.bindings.source._parents();\n\n                            for (idx = 0, length = source.length; idx < length; idx++) {\n                                bindElement(element.children[idx], source[idx],\n                                    this.options.roles, [source[idx]].concat(\n                                        parents));\n                            }\n                        }\n                    } else {\n                        $(element).html(template(source));\n                    }\n                }\n            });\n\n            binders.input = {\n                checked: TypedBinder.extend({\n                    ctor: function(element, bindings, options) {\n                        this._super(element, bindings, options);\n                        this._change = proxy(this.change, this);\n                        $(this.element).on(CHANGE, this._change);\n                    },\n\n                    change: function() {\n                        var element = this.element;\n                        var value = this.value();\n\n                        if (element.type == \"radio\") {\n                            value = this.parsedValue();\n                            this.bindings[CHECKED].set(value);\n                        } else if (element.type == \"checkbox\") {\n                            var source = this.bindings[CHECKED].get();\n                            var index;\n\n                            if (source instanceof ObservableArray) {\n                                value = this.parsedValue();\n                                if (value instanceof Date) {\n                                    for (var i = 0; i < source.length; i++) {\n                                        if (source[i] instanceof Date && +source[i] === +\n                                            value) {\n                                            index = i;\n                                            break;\n                                        }\n                                    }\n                                } else {\n                                    index = source.indexOf(value);\n                                }\n                                if (index > -1) {\n                                    source.splice(index, 1);\n                                } else {\n                                    source.push(value);\n                                }\n                            } else {\n                                this.bindings[CHECKED].set(value);\n                            }\n                        }\n                    },\n\n                    refresh: function() {\n                        var value = this.bindings[CHECKED].get(),\n                            source = value,\n                            type = this.dataType(),\n                            element = this.element;\n\n                        if (element.type == \"checkbox\") {\n                            if (source instanceof ObservableArray) {\n                                var index = -1;\n                                value = this.parsedValue();\n                                if (value instanceof Date) {\n                                    for (var i = 0; i < source.length; i++) {\n                                        if (source[i] instanceof Date && +source[i] === +\n                                            value) {\n                                            index = i;\n                                            break;\n                                        }\n                                    }\n                                } else {\n                                    index = source.indexOf(value);\n                                }\n                                element.checked = (index >= 0);\n                            } else {\n                                element.checked = source;\n                            }\n                        } else if (element.type == \"radio\" && value != null) {\n                            value = toDateString(value, type);\n                            if (element.value === value.toString()) {\n                                element.checked = true;\n                            }\n                        }\n                    },\n\n                    value: function() {\n                        var element = this.element,\n                            value = element.value;\n\n                        if (element.type == \"checkbox\") {\n                            value = element.checked;\n                        }\n\n                        return value;\n                    },\n                    destroy: function() {\n                        $(this.element).off(CHANGE, this._change);\n                    }\n                })\n            };\n\n            widgetBinders.events = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                    this.handlers = {};\n                },\n\n                refresh: function(key) {\n                    var binding = this.bindings.events[key],\n                        handler = this.handlers[key];\n\n                    if (handler) {\n                        this.widget.unbind(key, handler);\n                    }\n\n                    handler = binding.get();\n\n                    this.handlers[key] = function(e) {\n                        e.data = binding.source;\n\n                        handler(e);\n\n                        if (e.data === binding.source) {\n                            delete e.data;\n                        }\n                    };\n\n                    this.widget.bind(key, this.handlers[key]);\n                },\n\n                destroy: function() {\n                    var handler;\n\n                    for (handler in this.handlers) {\n                        this.widget.unbind(handler, this.handlers[handler]);\n                    }\n                }\n            });\n\n            widgetBinders.checked = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                    this._change = proxy(this.change, this);\n                    this.widget.bind(CHANGE, this._change);\n                },\n                change: function() {\n                    this.bindings[CHECKED].set(this.value());\n                },\n\n                refresh: function() {\n                    this.widget.check(this.bindings[CHECKED].get() === true);\n                },\n\n                value: function() {\n                    var element = this.element,\n                        value = element.value;\n\n                    if (value == \"on\" || value == \"off\") {\n                        value = element.checked;\n                    }\n\n                    return value;\n                },\n\n                destroy: function() {\n                    this.widget.unbind(CHANGE, this._change);\n                }\n            });\n\n            widgetBinders.visible = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                },\n\n                refresh: function() {\n                    var visible = this.bindings.visible.get();\n                    this.widget.wrapper[0].style.display = visible ? \"\" : \"none\";\n                }\n            });\n\n            widgetBinders.invisible = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                },\n\n                refresh: function() {\n                    var invisible = this.bindings.invisible.get();\n                    this.widget.wrapper[0].style.display = invisible ? \"none\" : \"\";\n                }\n            });\n\n            widgetBinders.enabled = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                },\n\n                refresh: function() {\n                    if (this.widget.enable) {\n                        this.widget.enable(this.bindings.enabled.get());\n                    }\n                }\n            });\n\n            widgetBinders.disabled = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                },\n\n                refresh: function() {\n                    if (this.widget.enable) {\n                        this.widget.enable(!this.bindings.disabled.get());\n                    }\n                }\n            });\n\n            widgetBinders.source = dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\");\n\n            widgetBinders.value = Binder.extend({\n\n                ctor: function(widget, bindings, options) {\n                    this._super(widget.element[0], bindings, options);\n                    this.widget = widget;\n                    this._change = proxy(this.change, this);\n                    this.widget.first(CHANGE, this._change);\n\n                    var value = this.bindings.value.get();\n\n                    //value == null\n                    this._valueIsObservableObject = !options.valuePrimitive && value instanceof ObservableObject;\n                    this._valueIsObservableArray = value instanceof ObservableArray;\n                    this._initChange = false;\n                },\n\n                change: function() {\n                    var value = this.widget.value(),\n                        field = this.options.valueField || this.options.textField,\n                        isArray = toString.call(value) === \"[object Array]\",\n                        isObservableObject = this._valueIsObservableObject,\n                        valueIndex, valueLength, values = [],\n                        sourceItem, sourceValue,\n                        idx, length, source;\n\n                    this._initChange = true;\n\n                    if (field) {\n\n                        if (this.bindings.source) {\n                            source = this.bindings.source.get();\n                        }\n\n                        if (value === \"\" && (isObservableObject || this.options.valuePrimitive)) {\n                            value = null;\n                        } else {\n                            if (!source || source instanceof DataSource) {\n                                source = this.widget.dataSource.view();\n                            }\n\n                            if (isArray) {\n                                valueLength = value.length;\n                                values = value.slice(0);\n                            }\n\n                            for (idx = 0, length = source.length; idx < length; idx++) {\n                                sourceItem = source[idx];\n                                sourceValue = sourceItem.get(field);\n\n                                if (isArray) {\n                                    for (valueIndex = 0; valueIndex < valueLength; valueIndex++) {\n                                        if (sourceValue == values[valueIndex]) {\n                                            values[valueIndex] = sourceItem;\n                                            break;\n                                        }\n                                    }\n                                } else if (sourceValue == value) {\n                                    value = isObservableObject ? sourceItem : sourceValue;\n                                    break;\n                                }\n                            }\n\n                            if (values[0]) {\n                                if (this._valueIsObservableArray) {\n                                    value = values;\n                                } else if (isObservableObject || !field) {\n                                    value = values[0];\n                                } else {\n                                    value = values[0].get(field);\n                                }\n                            }\n                        }\n                    }\n\n                    this.bindings.value.set(value);\n                    this._initChange = false;\n                },\n\n                refresh: function() {\n                    if (!this._initChange) {\n                        var widget = this.widget;\n                        var textField = this.options.textField;\n                        var valueField = this.options.valueField || textField;\n                        var value = this.bindings.value.get();\n                        var text = this.options.text || \"\";\n                        var idx = 0,\n                            length;\n                        var values = [];\n\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        if (valueField) {\n                            if (value instanceof ObservableArray) {\n                                for (length = value.length; idx < length; idx++) {\n                                    values[idx] = value[idx].get(valueField);\n                                }\n                                value = values;\n                            } else if (value instanceof ObservableObject) {\n                                text = value.get(textField);\n                                value = value.get(valueField);\n                            }\n                        }\n\n                        if (widget.options.autoBind === false && widget.listView && !widget\n                            .listView.isBound()) {\n                            if (textField === valueField && !text) {\n                                text = value;\n                            }\n\n                            widget._preselect(value, text);\n                        } else {\n                            widget.value(value);\n                        }\n                    }\n\n                    this._initChange = false;\n                },\n\n                destroy: function() {\n                    this.widget.unbind(CHANGE, this._change);\n                }\n            });\n\n            function parseBindings(bind) {\n                var result = {},\n                    idx,\n                    length,\n                    token,\n                    colonIndex,\n                    key,\n                    value,\n                    tokens;\n\n                tokens = bind.match(regKeyValue);\n\n                for (idx = 0, length = tokens.length; idx < length; idx++) {\n                    token = tokens[idx];\n                    colonIndex = token.indexOf(\":\");\n\n                    key = token.substring(0, colonIndex);\n                    value = token.substring(colonIndex + 1);\n\n                    if (value.charAt(0) == \"{\") {\n                        value = parseBindings(value);\n                    }\n\n                    result[key] = value;\n                }\n\n                return result;\n            }\n\n            function createBindings(bindings, source, type) {\n                var binding,\n                    result = {};\n\n                for (binding in bindings) {\n                    result[binding] = new type(source, bindings[binding]);\n                }\n\n                return result;\n            }\n\n            function rolesFromNamespaces(namespaces) {\n                var roles = [],\n                    idx,\n                    length;\n\n                if (!namespaces[0]) {\n                    namespaces = [fly.ui];\n                }\n\n                for (idx = 0, length = namespaces.length; idx < length; idx++) {\n                    roles[idx] = namespaces[idx].roles;\n                }\n\n                return $.extend.apply(null, [{}].concat(roles.reverse()));\n            };\n\n            function bindElement(element, source, roles, parents) {\n                var role = element.getAttribute(\"data-role\"),\n                    bind = element.getAttribute(\"data-bind\"),\n                    children = element.children,\n                    childrenCopy = [],\n                    deep = true,\n                    bindings,\n                    options = {},\n                    idx,\n                    target;\n\n                parents = parents || [source];\n\n                if (role || bind) {\n                    unbindElement(element);\n                }\n\n                if (role) {\n                    target = bindingTargetForRole(element, roles);\n                }\n\n                if (bind) {\n                    bind = parseBindings(bind.replace(regWhiteSpace, \"\"));\n\n                    if (!target) {\n                        options = utils.parseEleOptions(element, {\n                            textField: \"\",\n                            valueField: \"\",\n                            template: \"\",\n                            valueUpdate: \"change\",\n                            valuePrimitive: false,\n                            itemChange: true,\n                            autoBind: true\n                        });\n                        options.roles = roles;\n                        target = new BindingTarget(element, options);\n                    }\n\n                    target.source = source;\n\n                    bindings = createBindings(bind, parents, Binding);\n\n                    if (options.template) {\n                        bindings.template = new TemplateBinding(parents, '', options.template);\n                    }\n\n                    if (bindings.click) {\n                        bind.events = bind.events || {};\n                        bind.events.click = bind.click;\n                        bindings.click.destroy();\n                        delete bindings.click;\n                    }\n\n                    if (bindings.source) {\n                        deep = false;\n                    }\n\n                    if (bind.attr) {\n                        bindings.attr = createBindings(bind.attr, parents, Binding);\n                    }\n\n                    if (bind.style) {\n                        bindings.style = createBindings(bind.style, parents, Binding);\n                    }\n\n                    if (bind.events) {\n                        bindings.events = createBindings(bind.events, parents,\n                            EventBinding);\n                    }\n\n                    if (bind.css) {\n                        bindings.css = createBindings(bind.css, parents, Binding);\n                    }\n\n                    target.bind(bindings);\n                }\n\n                if (target) {\n                    element.flyBindingTarget = target;\n                }\n\n                if (deep && children) {\n                    for (idx = 0; idx < children.length; idx++) {\n                        childrenCopy[idx] = children[idx];\n                    }\n\n                    for (idx = 0; idx < childrenCopy.length; idx++) {\n                        bindElement(childrenCopy[idx], source, roles, parents);\n                    }\n                }\n            }\n\n            function unbindElement(element) {\n                var bindingTarget = element.flyBindingTarget;\n\n                if (bindingTarget) {\n                    bindingTarget.destroy();\n\n                    if (deleteExpando) {\n                        delete element.flyBindingTarget;\n                    } else if (element.removeAttribute) {\n                        element.removeAttribute(\"flyBindingTarget\");\n                    } else {\n                        element.flyBindingTarget = null;\n                    }\n                }\n            }\n\n            function unbindElementTree(element) {\n                unbindElement(element);\n\n                unbindElementChildren(element);\n            }\n\n            function unbindElementChildren(element) {\n                var children = element.children;\n\n                if (children) {\n                    for (var idx = 0, length = children.length; idx < length; idx++) {\n                        unbindElementTree(children[idx]);\n                    }\n                }\n            }\n\n            function unbind(dom) {\n                var idx, length;\n\n                dom = $(dom);\n\n                for (idx = 0, length = dom.length; idx < length; idx++) {\n                    unbindElementTree(dom[idx]);\n                }\n            }\n\n            function bind(dom, object) {\n                var idx,\n                    length,\n                    node,\n                    roles = rolesFromNamespaces([].slice.call(arguments, 2));\n\n                $(dom).each(function() {\n                    node = $(this)[0];\n                    if (node.nodeType === 1) {\n                        bindElement(node, object, roles);\n                    }\n                });\n            }\n\n            function notify(widget) {\n                var element = widget.element,\n                    bindingTarget = element[0].flyBindingTarget;\n\n                if (bindingTarget) {\n                    bind(element, bindingTarget.source);\n                }\n            }\n\n            function retrievePrimitiveValues(value, valueField) {\n                var values = [];\n                var idx = 0;\n                var length;\n                var item;\n\n                if (!valueField) {\n                    return value;\n                }\n\n                if (value instanceof ObservableArray) {\n                    for (length = value.length; idx < length; idx++) {\n                        item = value[idx];\n                        values[idx] = item.get ? item.get(valueField) : item[valueField];\n                    }\n                    value = values;\n                } else if (value instanceof ObservableObject) {\n                    value = value.get(valueField);\n                }\n\n                return value;\n            }\n\n            function bindingTargetForRole(element, roles) {\n                var widget = fly.ui.initWidget(element, {}, roles);\n\n                if (widget) {\n                    return new WidgetBindingTarget(widget);\n                }\n            }\n\n            function dataSourceBinding(bindingName, fieldName, setter) {\n                return Binder.extend({\n\n                    ctor: function(widget, bindings, options) {\n                        var that = this;\n\n                        that._super(widget.element[0], bindings, options);\n\n                        that.widget = widget;\n                        that._dataBinding = proxy(that.dataBinding, that);\n                        that._dataBound = proxy(that.dataBound, that);\n                        that._itemChange = proxy(that.itemChange, that);\n                    },\n\n                    itemChange: function(e) {\n                        bindElement(e.item[0], e.data, this._ns(e.ns), [e.data].concat(\n                            this.bindings[bindingName]._parents()));\n                    },\n\n                    dataBinding: function(e) {\n                        var idx,\n                            length,\n                            widget = this.widget,\n                            items = e.removedItems || widget.items();\n\n                        for (idx = 0, length = items.length; idx < length; idx++) {\n                            unbindElementTree(items[idx]);\n                        }\n                    },\n\n                    _ns: function(ns) {\n                        ns = ns || fly.ui;\n                        return rolesFromNamespaces([ns]);\n                    },\n\n                    dataBound: function(e) {\n                        var idx,\n                            length,\n                            widget = this.widget,\n                            items = e.addedItems || widget.items(),\n                            dataSource = widget[fieldName],\n                            view,\n                            parents;\n\n                        if (items.length) {\n                            view = e.addedDataItems || dataSource.view();\n                            parents = this.bindings[bindingName]._parents();\n\n                            for (idx = 0, length = view.length; idx < length; idx++) {\n                                bindElement(items[idx], view[idx], this._ns(e.ns), [\n                                    view[idx]\n                                ].concat(parents));\n                            }\n                        }\n                    },\n\n                    refresh: function(e) {\n                        var that = this,\n                            source,\n                            widget = that.widget;\n\n                        e = e || {};\n\n                        if (!e.action) {\n                            that.destroy();\n\n                            widget.bind(\"dataBinding\", that._dataBinding);\n                            widget.bind(\"dataBound\", that._dataBound);\n                            widget.bind(\"itemChange\", that._itemChange);\n\n                            source = that.bindings[bindingName].get();\n\n                            if (widget[fieldName] instanceof DataSource && widget[\n                                fieldName] != source) {\n                                if (source instanceof DataSource) {\n                                    widget[setter](source);\n                                } else if (source && source._dataSource) {\n                                    widget[setter](source._dataSource);\n                                } else {\n                                    widget[fieldName].data(source);\n                                    // widget instanceof ui.MultiSelect\n                                    if (that.bindings.value && (widget instanceof ui.Select)) {\n                                        widget.value(retrievePrimitiveValues(that.bindings\n                                            .value.get(), widget.options.valueField\n                                        ));\n                                    }\n                                }\n                            }\n                        }\n                    },\n\n                    destroy: function() {\n                        var widget = this.widget;\n\n                        widget.unbind(\"dataBinding\", this._dataBinding);\n                        widget.unbind(\"dataBound\", this._dataBound);\n                        widget.unbind(\"itemChange\", this._itemChange);\n                    }\n                });\n            }\n\n            fly.bind = bind;\n            fly.unbind = unbind;\n            fly.notify = notify;\n\n            module.exports = bind;\n\n        }, {\n            \"./fly.core\": 4,\n            \"./fly.data\": 5,\n            \"./fly.template\": 14,\n            \"./fly.ui\": 15,\n            \"./fly.utils\": 16\n        }\n    ],\n    2: [\n        function(require, module, exports) {\n            /**\n             * 精确计算\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-07-27\n             */\n\n            'use strict';\n\n            // 依赖core\n            var fly = require(\"./fly.core\");\n\n            var calculate = {},\n                math = Math;\n\n            /**\n             * 获取小数位数\n             * @param {Number} num 小数部分位数\n             */\n            var digits = function(num) {\n                var length;\n                try {\n                    length = num.toString().split('.')[1].length;\n                } catch (e) {\n                    length = 0;\n                }\n                return length;\n            };\n\n            /**\n             * 将小数化为整数\n             * @param {Number} num 化整后的整数\n             */\n            var integer = function(num) {\n                return Number(num.toString().replace('.', ''));\n            }\n\n            /**\n             * 加法运算\n             * @param   {Number} arg1 被加数\n             * @param   {Number} arg2 加数\n             * @returns {Number} 和\n             */\n            calculate.add = function(arg1, arg2) {\n                var n = math.max(digits(arg1), digits(arg2)),\n                    m = math.pow(10, n);\n                return math.floor(arg1 * m + arg2 * m) / m;\n            };\n\n            /**\n             * 减法运算\n             * @param   {Number} arg1 被减数\n             * @param   {Number} arg2 减数\n             * @returns {Number} 差\n             */\n            calculate.sub = function(arg1, arg2) {\n                var n = math.max(digits(arg1), digits(arg2)),\n                    m = math.pow(10, n);\n                return math.floor(arg1 * m - arg2 * m) / m;\n            };\n\n            /**\n             * 乘法运算\n             * @param   {Number} arg1 被乘数\n             * @param   {Number} arg2 乘数\n             * @returns {Number} 积\n             */\n            calculate.mul = function(arg1, arg2) {\n                var n = digits(arg1) + digits(arg2),\n                    m = math.pow(10, n);\n                return integer(arg1) * integer(arg2) / m;\n            };\n\n            /**\n             * 除法运算\n             * @param   {Number} arg1 被除数\n             * @param   {Number} arg2 除数\n             * @returns {Number} 商\n             */\n            calculate.div = function(arg1, arg2) {\n                var n = digits(arg2) - digits(arg1),\n                    m = math.pow(10, n);\n                return (integer(arg1) / integer(arg2)) * m;\n            };\n\n            fly.calc = calculate;\n            module.exports = calculate;\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    3: [\n        function(require, module, exports) {\n            /**\n             * class基类\n             * John Resig Class.js\n             * 因为callee，这里不能使用严格模式\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-07-01\n             */\n\n            var fly = require('./fly.core');\n\n            var Class = function() {};\n\n            var CTOR = 'ctor', //构造函数名\n                EXTEND = 'extend',\n                FUNCTION = 'function';\n\n            /**\n             * 给基类增加一个extend方法\n             * @param   {Object}   prop 扩展的属性\n             * @returns {[[Type]]} [[Description]]\n             */\n            Class.extend = function(prop) {\n\n                var _super = this.prototype;\n\n                // 父类的实例赋给变量prototype\n                var prototype = new this();\n\n                // 把要扩展的属性复制到prototype变量上\n                for (var name in prop) {\n                    // this._super访问父类的实例\n                    prototype[name] = name == CTOR && typeof prop[name] == FUNCTION &&\n                        typeof _super[name] == FUNCTION ?\n                        (function(name, fn) {\n                        return function() {\n                            // 备份this._super\n                            var tmp = this._super;\n                            // 替换成父类的同名ctor方法\n                            this._super = _super[name];\n                            // 此时fn中的this里面的this._super已经换成了_super[name],即父类的同名方法\n                            var ret = fn.apply(this, arguments);\n                            // 把备份的还原回去\n                            this._super = tmp;\n                            return ret;\n                        };\n                    })(name, prop[name]) :\n                        prop[name];\n                }\n\n                // 假的构造函数\n                function Class() {\n                    // 执行真正的ctor构造函数\n                    this.ctor.apply(this, arguments);\n                }\n\n                // 继承父类的静态属性\n                for (var key in this) {\n                    if (this.hasOwnProperty(key) && key != EXTEND)\n                        Class[key] = this[key];\n                }\n\n                // 子类的原型指向父类的实例\n                Class.prototype = prototype;\n\n                // 父类的实例\n                Class.prototype._super = new this();\n\n                // 覆盖父类的静态属性\n                if (prop.statics) {\n                    for (var name in prop.statics) {\n                        if (prop.statics.hasOwnProperty(name)) {\n                            Class[name] = prop.statics[name];\n                            if (name == CTOR) {\n                                Class[name]();\n                            }\n                        }\n                    }\n                }\n\n                Class.prototype.constructor = Class;\n\n                // 原型可扩展\n                Class.extendPrototype = function(prop) {\n                    for (var name in prop) {\n                        prototype[name] = prop[name];\n                    }\n                };\n\n                Class.fn = Class.prototype;\n                // 任何Class.extend的返回对象都将具备extend方法\n                Class.extend = arguments.callee;\n\n                return Class;\n            };\n\n            fly.Class = Class;\n            module.exports = Class;\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    4: [\n        function(require, module, exports) {\n            /**\n             * 基础代码\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-06-01 15:20\n             */\n\n            'use strict';\n\n            // 依赖jQuery\n            //var $ = require(\"jquery\");\n\n            // 命名空间\n            var fly = window.fly = window.fly || {};\n\n            // 路径\n            var URLFLAG = 'js/flyui';\n\n            // 缓存jquery\n            fly.$ = $;\n\n            // 缓存window对象\n            fly.$win = $(window);\n\n            // 缓存document对象\n            fly.$doc = $(document);\n\n            // 缓存html\n            fly.$html = $('html');\n\n            // 常用键值\n            fly.keys = {\n                INSERT: 45,\n                DELETE: 46,\n                BACKSPACE: 8,\n                TAB: 9,\n                ENTER: 13,\n                ESC: 27,\n                LEFT: 37,\n                UP: 38,\n                RIGHT: 39,\n                DOWN: 40,\n                END: 35,\n                HOME: 36,\n                SPACEBAR: 32,\n                PAGEUP: 33,\n                PAGEDOWN: 34,\n                F10: 121,\n                F12: 123,\n                NUMPAD_PLUS: 107,\n                NUMPAD_MINUS: 109,\n                NUMPAD_DOT: 110\n            };\n\n            // 命名空间\n            fly.NS = 'fly';\n\n            var extend = $.extend,\n                _scrollbar, // 滚动条宽度\n                effects = {}, // 效果库\n                support = {}, // 特性支持\n                OLDDISPLAY = 'olddisplay';\n\n            // 监视DOM改变\n            support.mutationobserver = window.MutationObserver ||\n                window.WebKitMutationObserver || null;\n\n            // 是否支持html5\n            support.html5 = (function() {\n                var i = document.createElement('input'),\n                    result;\n                i.setAttribute('type', 'range');\n                result = i.type != 'text';\n                i = null;\n                return result;\n            })();\n\n            // 是否支持触屏\n            /*support.touch = (\n    ('ontouchstart' in document) ||\n    (global.DocumentTouch && document instanceof global.DocumentTouch) || //非IE\n    (global.navigator.msPointerEnabled && global.navigator.msMaxTouchPoints > 0) || //IE 10\n    (global.navigator.pointerEnabled && global.navigator.maxTouchPoints > 0) || //IE >=11\n    false\n);*/\n\n            // 获取滚动条宽度\n            support.scrollbar = function(refresh) {\n                var div, result;\n\n                if (!isNaN(_scrollbar) && !refresh) {\n                    return _scrollbar;\n                }\n\n                div = document.createElement('div');\n                div.style.cssText =\n                    'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n                div.innerHTML = '&nbsp;';\n                document.body.appendChild(div);\n\n                result = div.offsetWidth - div.scrollWidth;\n                document.body.removeChild(div);\n                div = null;\n                return result;\n            };\n\n            // 是否可以直接删除扩展\n            support.deleteExpando = (function() {\n                var a = document.createElement('a');\n                try {\n                    delete a.test;\n                } catch (e) {\n                    return false;\n                }\n                return true;\n            })();\n\n            // 识别浏览器\n            fly.browser = (function() {\n                var browser = {},\n                    userAgent = navigator.userAgent;\n                if (userAgent.indexOf(\"Opera\") > -1) {\n                    browser.opera = 1;\n                } else if (userAgent.indexOf(\"Firefox\") > -1) {\n                    browser.firefox = 1;\n                } else if (userAgent.indexOf(\"Chrome\") > -1) {\n                    browser.chrome = 1;\n                } else if (userAgent.indexOf(\"Safari\") > -1) {\n                    browser.safari = 1;\n                } else if (!!window.ActiveXObject || \"ActiveXObject\" in window) {\n                    new RegExp(\"MSIE (\\\\d+\\\\.\\\\d+);\").test(userAgent);\n                    browser.ie = parseInt(RegExp.$1 || 11);\n                }\n                return browser;\n            })();\n\n            // 获取当前路径\n            // 不论是以何种方式加载，都不能改变flyui的名称\n            /*fly.path = (function(script, key, i, me, thisScript) {\n    for (i in script) {\n        if (script[i].src && script[i].src.indexOf(key) !== -1) {\n            me = script[i];\n        }\n    };\n    thisScript = me || script[script.length - 1];\n    me = thisScript.src.replace(/\\\\/g, '/');\n    return me.lastIndexOf('/') < 0 ? '.' :\n        me.substring(0, me.lastIndexOf(key));\n}(document.getElementsByTagName('script'), URLFLAG));*/\n\n            /**\n             * 生成标准GUID\n             * @return {String} 32位GUID字符串\n             */\n            fly.guid = function() {\n                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(\n                    c) {\n                    var r = Math.random() * 16 | 0,\n                        v = c == 'x' ? r : (r & 0x3 | 0x8);\n                    return v.toString(16);\n                }).toUpperCase();\n            };\n\n            /**\n             * 恒等\n             * 在某些没有默认值的时候使用\n             * @param   {Any} o 任何输入\n             * @returns {Any} 输出\n             */\n            fly.identity = function(o) {\n                return o;\n            }\n\n            /**\n             * 处理动画需要的参数\n             * @param   {object}   options  效果参数\n             * @param   {number}   duration 持续时间\n             * @param   {boolean}  reverse  是否反转\n             * @param   {function} complete 完成回调\n             * @returns {object}   完整的动画参数\n             */\n            function prepareAnimationOptions(options, duration, reverse, complete) {\n                if (typeof options === 'string') {\n\n                    if (isFunction(duration)) {\n                        complete = duration;\n                        duration = 400;\n                        reverse = false;\n                    }\n\n                    if (isFunction(reverse)) {\n                        complete = reverse;\n                        reverse = false;\n                    }\n\n                    if (typeof duration === BOOLEAN) {\n                        reverse = duration;\n                        duration = 400;\n                    }\n\n                    options = {\n                        effects: options,\n                        duration: duration,\n                        reverse: reverse,\n                        complete: complete\n                    };\n                }\n\n                return extend({\n                    effects: {},\n                    duration: 400,\n                    reverse: false,\n                    init: $.noop,\n                    teardown: $.noop,\n                    hide: false\n                }, options, {\n                    completeCallback: options.complete,\n                    complete: $.noop\n                });\n            }\n\n            /**\n             * 执行动画效果\n             * @param   {object}   element  承载动画效果的Element\n             * @param   {object}   options  效果参数\n             * @param   {number}   duration 持续时间\n             * @param   {boolean}  reverse  是否反转\n             * @param   {function} complete 回调\n             * @returns {object}   承载动画效果的Element\n             */\n            function animate(options, duration, reverse, complete) {\n                var idx = 0,\n                    element = this,\n                    length = element.length,\n                    instance;\n\n                for (; idx < length; idx++) {\n                    instance = $(element[idx]);\n                    instance.queue(function() {\n                        effects.promise(instance, prepareAnimationOptions(options, duration,\n                            reverse,\n                            complete));\n                    });\n                }\n\n                return element;\n            }\n\n            extend(effects, {\n                enabled: true,\n\n                Element: function(element) {\n                    this.element = $(element);\n                },\n\n                promise: function(element, options) {\n                    if (!element.is(\":visible\")) {\n                        element.css(\"display\", element.data(OLDDISPLAY) || \"block\");\n                    }\n\n                    options.hide && element.data(OLDDISPLAY, element.css(\"display\")).hide();\n                    options.init && options.init();\n                    options.completeCallback && options.completeCallback(element);\n\n                    element.dequeue();\n                },\n\n                disable: function() {\n                    this.enabled = false;\n                    this.promise = this.promiseShim;\n                },\n\n                enable: function() {\n                    this.enabled = true;\n                    this.promise = this.animatedPromise;\n                }\n            });\n\n            effects.promiseShim = effects.promise;\n\n            extend($.fn, {\n                animated: function() {\n                    return animate.apply(this, arguments);\n                }\n            });\n\n            extend($.expr[':'], {\n                focusable: function(element) {\n                    var idx = $.attr(element, \"tabindex\"),\n                        nodeName = element.nodeName.toLowerCase(),\n                        isTabIndexNotNaN = !isNaN(idx) && idx > -1;\n\n                    if (/input|select|textarea|button|object/.test(nodeName) ?\n                        !element.disabled :\n                        \"a\" === nodeName ?\n                        element.href || isTabIndexNotNaN :\n                        isTabIndexNotNaN\n                    ) {\n                        return !$(element).parents().addBack().filter(function() {\n                            return $.css(this, \"visibility\") === \"hidden\" || $.expr.filters\n                                .hidden(this);\n                        }).length;\n                    }\n                }\n            });\n\n            fly.support = support;\n\n            module.exports = fly;\n\n        }, {}\n    ],\n    5: [\n        function(require, module, exports) {\n            /**\n             * 数据对象\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-09-06\n             */\n\n            'use strict';\n\n            // 依赖\n            var fly = require('./fly.core'),\n                ob = require('./fly.observable'),\n                Model = require('./fly.model'),\n                format = require('./fly.format'),\n                utils = require('./fly.utils'),\n                Class = fly.Class,\n                Observable = fly.Observable,\n                ObservableObject = fly.ObservableObject,\n                ObservableArray = fly.ObservableArray,\n                LazyObservableArray = fly.LazyObservableArray,\n                identity = fly.identity,\n                getter = fly.getter,\n                $ = fly.$,\n                each = $.each,\n                map = $.map,\n                proxy = $.proxy,\n                extend = $.extend,\n                isEmptyObject = $.isEmptyObject,\n                isPlainObject = $.isPlainObject,\n                isFunction = $.isFunction,\n                isNumber = $.isNumeric,\n                isArray = $.isArray,\n                grep = $.grep,\n                noop = $.noop,\n                Deferred = $.Deferred,\n                ajax = $.ajax,\n                slice = [].slice,\n                math = Math;\n\n            // 数据对象\n            var data = {};\n\n            // 静态变量\n            var FUNCTION = 'function',\n                STRING = 'string',\n                CHANGE = 'change',\n                CREATE = 'create',\n                READ = 'read',\n                UPDATE = 'update',\n                DESTROY = 'destroy',\n                ERROR = 'error',\n                REQUESTSTART = 'requestStart',\n                PROGRESS = 'progress',\n                REQUESTEND = 'requestEnd',\n                EMPTY = 'empty',\n                PUSH = 'push',\n                CRUD = [CREATE, READ, UPDATE, DESTROY],\n                ARR = '[object Array]';\n\n            // 操作符转换\n            var operatorMap = {\n                '==': 'eq',\n                '!=': 'neq',\n                '<': 'lt',\n                '<=': 'lte',\n                '>': 'gt',\n                '>=': 'gte',\n                notsubstringof: 'doesnotcontain'\n            };\n\n            // 正则\n            var dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n                newLineRegExp = /(\\r+|\\n+)/g,\n                quoteRegExp = /(?=['\\\\])/g;\n\n\n            var DataSource = Observable.extend({\n\n                ctor: function(options) {\n                    if (!options) return;\n\n                    var that = this,\n                        options = options || {},\n                        data = options.data,\n                        read = options.read,\n                        model;\n\n                    // 兼容老版本的写法\n                    if (data && data.url) {\n                        read = data;\n                    } else if (typeof data == STRING) {\n                        read = {\n                            url: data\n                        };\n                    } else if (isArray(data)) {\n                        options.server = false;\n                        options.pageMode = 0;\n                    }\n\n                    // 如果存在read接口，则需要设置server属性为true\n                    // 同时对url进行处理\n                    if (read) {\n                        options.read = $.extend(read, {\n                            url: utils.url(read.url)\n                        });\n                    }\n\n                    // 继承options\n                    options = that.options = extend({}, that.options, options);\n\n                    that._map = {};\n                    that._prefetch = {}; // 预拉取\n                    that._data = []; // 初始数据\n                    that._pristineData = []; // 关键数据\n                    that._ranges = [];\n                    that._view = [];\n                    that._pristineTotal = 0;\n                    that._destroyed = []; // 已销毁\n                    that._pageSize = options.pageSize;\n                    that._page = options.page || (options.pageSize ? 1 : undefined); // 当前页码\n                    that._sort = normalizeSort(options.sort);\n                    that._filter = normalizeFilter(options.filter);\n                    that._total = options.total;\n\n                    that._shouldDetachObservableParents = true;\n\n                    that._super();\n\n                    that.transport = Transport.create(options, that);\n\n                    if (isFunction(that.transport.push)) {\n                        that.transport.push({\n                            pushCreate: proxy(that._pushCreate, that),\n                            pushUpdate: proxy(that._pushUpdate, that),\n                            pushDestroy: proxy(that._pushDestroy, that)\n                        });\n                    }\n\n                    that.reader = new DataReader(options.model, options.modelBase, read ||\n                        options.childrenField);\n\n                    model = that.reader.model || {};\n\n                    that._detachObservableParents();\n\n                    that._data = that._observe(that._data);\n                    that._online = true;\n\n                    that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, REQUESTEND,\n                        PROGRESS\n                    ], options);\n                },\n\n                options: {\n                    data: null,\n                    interface: {},\n                    server: true,\n                    serverPage: true,\n                    pageMode: 1 // 翻页方式 1.使用currentPageNo直接请求当前页码  0.使用skip和take控制\n                },\n\n                parent: noop,\n\n                /**\n                 * 获取item\n                 * @param   {String} id          值\n                 * @param   {String} [key='id',] 字段名\n                 * @returns {Object} 符合条件的data\n                 */\n                get: function(id, key) {\n                    var data = this._data,\n                        key = key || 'id',\n                        idx,\n                        length;\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        if (data[idx][key] == id) {\n                            return data[idx];\n                        }\n                    }\n                },\n\n                /**\n                 * 获取指定uid的item\n                 * @param   {string} id UID\n                 * @returns {object} 符合条件的data\n                 */\n                getByUid: function(id) {\n                    var data = this._data,\n                        idx,\n                        length;\n\n                    if (!data) {\n                        return null;\n                    }\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        if (data[idx].uid == id) {\n                            return data[idx];\n                        }\n                    }\n                },\n\n                indexOf: function(model) {\n                    return indexOfModel(this._data, model);\n                },\n\n                at: function(index) {\n                    return this._data.at(index);\n                },\n\n                data: function(value) {\n                    var that = this;\n                    if (value !== undefined) {\n                        that._detachObservableParents();\n                        that._data = this._observe(value);\n\n                        that._pristineData = value.slice(0);\n\n                        that._storeData();\n\n                        that._ranges = [];\n                        that.trigger('reset');\n                        that._addRange(that._data);\n\n                        that._total = that._data.length;\n                        that._pristineTotal = that._total;\n\n                        that._process(that._data);\n                    } else {\n                        if (that._data) {\n                            for (var idx = 0; idx < that._data.length; idx++) {\n                                that._data.at(idx);\n                            }\n                        }\n\n                        return that._data;\n                    }\n                },\n\n                _index: function(data) {\n                    var skip = this.skip() || 0;\n                    each(data, function(i, item) {\n                        if (item != undefined && item != null) {\n                            item['_index'] = skip + i + 1;\n                        }\n                    });\n                    return data;\n                },\n\n                view: function(value) {\n                    if (value === undefined) {\n                        return this._view;\n                    } else {\n                        this._view = this._observeView(value);\n                    }\n                },\n\n                _observeView: function(data) {\n                    var that = this;\n                    replaceWithObservable(data, that._data, that._ranges, that.reader.model ||\n                        ObservableObject, false);\n\n                    var view = new LazyObservableArray(data, that.reader.model);\n                    view.parent = function() {\n                        return that.parent();\n                    };\n                    return view;\n                },\n\n                _createNewModel: function(model) {\n                    if (this.reader.model) {\n                        return new this.reader.model(model);\n                    }\n\n                    if (model instanceof ObservableObject) {\n                        return model;\n                    }\n\n                    return new ObservableObject(model);\n                },\n\n                insert: function(index, model) {\n                    if (!model) {\n                        model = index;\n                        index = 0;\n                    }\n\n                    if (!(model instanceof Model)) {\n                        model = this._createNewModel(model);\n                    }\n\n                    this._data.splice(index, 0, model);\n\n                    return model;\n                },\n\n                add: function(model) {\n                    return this.insert(this._data.length, model);\n                },\n\n                pushCreate: function(items) {\n                    if (!isArray(items)) {\n                        items = [items];\n                    }\n\n                    var pushed = [];\n                    var autoSync = this.options.autoSync;\n                    this.options.autoSync = false;\n\n                    try {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items[idx],\n                                result = this.add(item),\n                                pristine = result.toJSON();\n\n                            pushed.push(result);\n                            this._pristineData.push(pristine);\n                        }\n                    } finally {\n                        this.options.autoSync = autoSync;\n                    }\n\n                    if (pushed.length) {\n                        this.trigger(PUSH, {\n                            type: CREATE,\n                            items: pushed\n                        });\n                    }\n                },\n\n                pushUpdate: function(items) {\n                    if (!isArray(items)) {\n                        items = [items];\n                    }\n\n                    var pushed = [];\n\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx],\n                            model = this._createNewModel(item),\n                            target = this.get(model.id);\n\n                        if (target) {\n                            pushed.push(target);\n                            target.accept(item);\n                            target.trigger(CHANGE);\n                            this._updatePristineForModel(target, item);\n                        } else {\n                            this.pushCreate(item);\n                        }\n                    }\n\n                    if (pushed.length) {\n                        this.trigger(PUSH, {\n                            type: UPDATE,\n                            items: pushed\n                        });\n                    }\n                },\n\n                pushDestroy: function(items) {\n                    var pushed = this._removeItems(items);\n\n                    if (pushed.length) {\n                        this.trigger(PUSH, {\n                            type: DESTROY,\n                            items: pushed\n                        });\n                    }\n                },\n\n                _pushCreate: function(result) {\n                    this._push(result, \"pushCreate\");\n                },\n\n                _pushUpdate: function(result) {\n                    this._push(result, \"pushUpdate\");\n                },\n\n                _pushDestroy: function(result) {\n                    this._push(result, \"pushDestroy\");\n                },\n\n                _push: function(result, operation) {\n                    var data = this._readData(result);\n\n                    if (!data) {\n                        data = result;\n                    }\n\n                    this[operation](data);\n                },\n\n                _removeItems: function(items) {\n                    if (!isArray(items)) {\n                        items = [items];\n                    }\n\n                    var destroyed = [],\n                        autoSync = this.options.autoSync;\n                    this.options.autoSync = false;\n\n                    try {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items[idx],\n                                model = this._createNewModel(item),\n                                found = false;\n\n                            this._eachItem(this._data, function(items) {\n                                for (var idx = 0; idx < items.length; idx++) {\n                                    var item = items.at(idx);\n                                    if (item.id === model.id) {\n                                        destroyed.push(item);\n                                        items.splice(idx, 1);\n                                        found = true;\n                                        break;\n                                    }\n                                }\n                            });\n\n                            if (found) {\n                                this._removePristineForModel(model);\n                                this._destroyed.pop();\n                            }\n                        }\n                    } finally {\n                        this.options.autoSync = autoSync;\n                    }\n\n                    return destroyed;\n                },\n\n                remove: function(model) {\n                    var result,\n                        that = this;\n\n                    this._eachItem(that._data, function(items) {\n                        removeModel(items, model);\n                    });\n\n                    this._removeModelFromRanges(model);\n\n                    this._updateRangesLength();\n\n                    return model;\n                },\n\n                /**\n                 * 返回已销毁的数据\n                 * @returns {Array} 已销毁的数据\n                 */\n                destroyed: function() {\n                    return this._destroyed;\n                },\n\n                created: function() {\n                    var idx,\n                        length,\n                        result = [],\n                        data = this._data;\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        if (data[idx].isNew && data[idx].isNew()) {\n                            result.push(data[idx]);\n                        }\n                    }\n                    return result;\n                },\n\n                updated: function() {\n                    var idx,\n                        length,\n                        result = [],\n                        data = this._data;\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                            result.push(data[idx]);\n                        }\n                    }\n                    return result;\n                },\n\n                cancelChanges: function(model) {\n                    var that = this;\n\n                    if (model instanceof Model) {\n                        that._cancelModel(model);\n                    } else {\n                        that._destroyed = [];\n                        that._detachObservableParents();\n                        that._data = that._observe(that._pristineData);\n                        if (that.options.server) {\n                            that._total = that._pristineTotal;\n                        }\n\n                        that._ranges = [];\n                        that._addRange(that._data);\n\n                        that._change();\n                    }\n                },\n\n                hasChanges: function() {\n                    var data = this._data,\n                        idx,\n                        length;\n\n                    if (this._destroyed.length) {\n                        return true;\n                    }\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                },\n\n                _updatePristineForModel: function(model, values) {\n                    this._executeOnPristineForModel(model, function(index, items) {\n                        extend(true, items[index], values);\n                    });\n                },\n\n                _executeOnPristineForModel: function(model, callback) {\n                    this._eachPristineItem(\n                        function(items) {\n                            var index = indexOfPristineModel(items, model);\n                            if (index > -1) {\n                                callback(index, items);\n                                return true;\n                            }\n                        });\n                },\n\n                _removePristineForModel: function(model) {\n                    this._executeOnPristineForModel(model, function(index, items) {\n                        items.splice(index, 1);\n                    });\n                },\n\n                _readData: function(data) {\n                    var read = this.reader.data;\n                    return read.call(this.reader, data);\n                },\n\n                _eachPristineItem: function(callback) {\n                    this._eachItem(this._pristineData, callback);\n                },\n\n                _eachItem: function(data, callback) {\n                    if (data && data.length) {\n                        callback(data);\n                    }\n                },\n\n                _pristineForModel: function(model) {\n                    var pristine,\n                        idx,\n                        callback = function(items) {\n                            idx = indexOfPristineModel(items, model);\n                            if (idx > -1) {\n                                pristine = items[idx];\n                                return true;\n                            }\n                        };\n\n                    this._eachPristineItem(callback);\n\n                    return pristine;\n                },\n\n                _cancelModel: function(model) {\n                    var pristine = this._pristineForModel(model);\n\n                    this._eachItem(this._data, function(items) {\n                        var idx = indexOfModel(items, model);\n                        if (idx >= 0) {\n                            if (pristine && (!model.isNew() || pristine.__state__)) {\n                                items[idx].accept(pristine);\n                            } else {\n                                items.splice(idx, 1);\n                            }\n                        }\n                    });\n                },\n\n                read: function(data) {\n                    var that = this,\n                        params = that._params(data);\n                    var deferred = Deferred();\n\n                    that._queueRequest(params, function() {\n                        var isPrevented = that.trigger(REQUESTSTART, {\n                            type: READ\n                        });\n                        if (!isPrevented) {\n                            that.trigger(PROGRESS);\n\n                            that._ranges = [];\n                            that.trigger(\"reset\");\n                            if (that._online) {\n                                that.transport.read({\n                                    data: params,\n                                    cache: false,\n                                    success: function(data) {\n                                        that.success(data);\n                                        deferred.resolve();\n                                    },\n                                    error: function() {\n                                        var args = slice.call(arguments);\n                                        that.error.apply(that, args);\n                                        deferred.reject.apply(deferred, args);\n                                    }\n                                });\n                            }\n                        } else {\n                            that._dequeueRequest();\n\n                            deferred.resolve(isPrevented);\n                        }\n                    });\n\n                    return deferred.promise();\n                },\n\n                success: function(data) {\n                    var that = this,\n                        options = that.options;\n\n                    that.trigger(REQUESTEND, {\n                        response: data,\n                        type: READ\n                    });\n\n                    if (that._online) {\n                        data = that.reader.parse(data);\n\n                        if (that._handleCustomErrors(data)) {\n                            that._dequeueRequest();\n                            return;\n                        }\n\n                        that._total = that.reader.total(data);\n\n                        data = that._readData(data);\n                    } else {\n                        data = that._readData(data);\n\n                        var items = [];\n\n                        for (var idx = 0; idx < data.length; idx++) {\n                            var item = data[idx];\n                            var state = item.__state__;\n\n                            if (state == \"destroy\") {\n                                this._destroyed.push(this._createNewModel(item));\n                            } else {\n                                items.push(item);\n                            }\n                        }\n\n                        data = items;\n\n                        that._total = data.length;\n                    }\n\n                    that._pristineTotal = that._total;\n\n                    that._pristineData = data.slice(0);\n\n                    that._detachObservableParents();\n\n                    that._data = that._observe(data);\n\n                    that._storeData();\n\n                    that._addRange(that._data);\n\n                    that._process(that._data);\n\n                    that._dequeueRequest();\n                },\n\n                _detachObservableParents: function() {\n                    if (this._data && this._shouldDetachObservableParents) {\n                        for (var idx = 0; idx < this._data.length; idx++) {\n                            if (this._data[idx].parent) {\n                                this._data[idx].parent = noop;\n                            }\n                        }\n                    }\n                },\n\n                _storeData: function(updatePristine) {\n                    var server = this.options.server;\n                    var model = this.reader.model;\n\n                    function items(data) {\n                        var state = [];\n\n                        for (var idx = 0; idx < data.length; idx++) {\n                            var dataItem = data.at(idx);\n                            var item = dataItem.toJSON();\n\n                            if (server && dataItem.items) {\n                                item.items = items(dataItem.items);\n                            } else {\n                                item.uid = dataItem.uid;\n\n                                if (model) {\n                                    if (dataItem.isNew()) {\n                                        item.__state__ = \"create\";\n                                    } else if (dataItem.dirty) {\n                                        item.__state__ = \"update\";\n                                    }\n                                }\n                            }\n                            state.push(item);\n                        }\n\n                        return state;\n                    }\n                },\n\n                _addRange: function(data) {\n                    var that = this,\n                        start = that._skip || 0,\n                        end = start + data.length;\n\n                    that._ranges.push({\n                        start: start,\n                        end: end,\n                        data: data\n                    });\n                    that._ranges.sort(function(x, y) {\n                        return x.start - y.start;\n                    });\n                },\n\n                error: function(xhr, status, errorThrown) {\n                    this._dequeueRequest();\n                    this.trigger(REQUESTEND, {});\n                    this.trigger(ERROR, {\n                        xhr: xhr,\n                        status: status,\n                        errorThrown: errorThrown\n                    });\n                },\n\n                _pageParam: function() {\n                    return !this.options.pageMode ? {\n                        take: this.take(),\n                        skip: this.skip(),\n                        page: this.page()\n                    } : {\n                        currentPageNo: this.page()\n                    };\n                },\n\n                _params: function(data) {\n                    var that = this,\n                        pageParam = that._pageParam(),\n                        thatOptions = that.options,\n                        options = extend(pageParam, {\n                            pageSize: that.pageSize(),\n                            sort: that._sort\n                        }, data);\n\n                    if (!thatOptions.server) {\n                        if (!thatOptions.pageSize) {\n                            delete options.take;\n                            delete options.skip;\n                        }\n                        delete options.page;\n                        delete options.pageSize;\n                        delete options.currentPageNo;\n                    }\n\n                    return options;\n                },\n\n                _queueRequest: function(options, callback) {\n                    var that = this;\n                    if (!that._requestInProgress) {\n                        that._requestInProgress = true;\n                        that._pending = undefined;\n                        callback();\n                    } else {\n                        that._pending = {\n                            callback: proxy(callback, that),\n                            options: options\n                        };\n                    }\n                },\n\n                _dequeueRequest: function() {\n                    var that = this;\n                    that._requestInProgress = false;\n                    if (that._pending) {\n                        that._queueRequest(that._pending.options, that._pending.callback);\n                    }\n                },\n\n                _handleCustomErrors: function(response) {\n                    var errors = this.reader.errors(response);\n                    if (!errors) {\n                        return false;\n                    }\n\n                    this.trigger(errors == EMPTY ? EMPTY : ERROR, {\n                        xhr: null,\n                        status: \"customerror\",\n                        errorThrown: \"custom error\",\n                        errors: errors\n                    });\n                    return true;\n                },\n\n                _observe: function(data) {\n                    var that = this,\n                        model = that.reader.model,\n                        wrap = false;\n\n                    that._shouldDetachObservableParents = true;\n\n                    if (model && data.length) {\n                        wrap = !(data[0] instanceof model);\n                    }\n\n                    if (data instanceof ObservableArray) {\n                        that._shouldDetachObservableParents = false;\n                        if (wrap) {\n                            data.type = that.reader.model;\n                            data.wrapAll(data, data);\n                        }\n                    } else {\n                        var arrayType = that.pageSize() && !that.options.server ?\n                            LazyObservableArray : ObservableArray;\n                        data = new arrayType(data, that.reader.model);\n                        data.parent = function() {\n                            return that.parent();\n                        };\n                    }\n\n                    if (that._changeHandler && that._data && that._data instanceof ObservableArray) {\n                        that._data.unbind(CHANGE, that._changeHandler);\n                    } else {\n                        that._changeHandler = proxy(that._change, that);\n                    }\n\n                    return data.bind(CHANGE, that._changeHandler);\n                },\n\n                _change: function(e) {\n                    var that = this,\n                        idx, length, action = e ? e.action : \"\";\n\n                    if (action === \"remove\") {\n                        for (idx = 0, length = e.items.length; idx < length; idx++) {\n                            if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                                that._destroyed.push(e.items[idx]);\n                            }\n                        }\n                    }\n\n                    var total = parseInt(that._total, 10);\n                    if (!isNumber(that._total)) {\n                        total = parseInt(that._pristineTotal, 10);\n                    }\n                    if (action === \"add\") {\n                        total += e.items.length;\n                    } else if (action === \"remove\") {\n                        total -= e.items.length;\n                    } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options\n                        .server) {\n                        total = that._pristineTotal;\n                    } else if (action === \"sync\") {\n                        total = that._pristineTotal = parseInt(that._total, 10);\n                    }\n\n                    that._total = total;\n\n                    that._process(that._data, e);\n                },\n\n                _process: function(data, e) {\n                    var that = this,\n                        options = {},\n                        result;\n\n                    if (that.options.server !== true) {\n                        options.skip = that._skip;\n                        options.take = that._take || that._pageSize;\n\n                        if (options.skip === undefined && that._page !== undefined &&\n                            that._pageSize !==\n                            undefined) {\n                            options.skip = (that._page - 1) * that._pageSize;\n                        }\n                    }\n\n                    if (that.options.server !== true) {\n                        options.sort = that._sort;\n                        options.filter = that._filter;\n                    }\n\n                    result = that._queryProcess(data, options);\n\n                    that.view(that._index(result.data));\n\n                    if (result.total !== undefined && !that.options.server) {\n                        that._total = result.total;\n                    }\n\n                    e = e || {};\n\n                    e.items = e.items || that._view;\n\n                    that.trigger(CHANGE, e);\n                },\n\n                _queryProcess: function(data, options) {\n                    return Query.process(data, options);\n                },\n\n                _mergeState: function(options) {\n                    var that = this,\n                        pageMode = that.options.pageMode;\n\n                    if (options !== undefined) {\n                        that._pageSize = options.pageSize;\n                        that._page = options.page;\n                        that._sort = options.sort;\n                        that._filter = options.filter;\n                        that._skip = options.skip;\n                        that._take = options.take;\n\n                        if (that._skip === undefined) {\n                            that._skip = that.skip();\n                            options.skip = that.skip();\n                        }\n\n                        if (!pageMode && that._take === undefined && that._pageSize !==\n                            undefined) {\n                            that._take = that._pageSize;\n                            options.take = that._take;\n                        }\n\n                        if (options.sort) {\n                            that._sort = options.sort = normalizeSort(options.sort);\n                        }\n\n                        if (options.filter) {\n                            if (!that.options.server) {\n                                that._filter = options.filter = normalizeFilter(options\n                                    .filter);\n                            } else {\n                                that._filter = normalizeFilter(options.filter);\n                                delete options.filter;\n\n                                if (that._filter) {\n                                    each(that._filter.filters, function(i, item) {\n                                        options[item.field] = item.value;\n                                    });\n                                }\n                            }\n                        }\n\n                        if (pageMode) {\n                            options.currentPageNo = that._page;\n                            delete options.page;\n                            delete options.take;\n                            delete options.skip;\n                        }\n\n                    }\n                    return options;\n                },\n\n                query: function(options) {\n                    var result;\n                    var remote = this.options.server;\n\n                    if (remote || ((this._data === undefined || this._data.length === 0) &&\n                        !this._destroyed\n                        .length)) {\n                        return this.read(this._mergeState(options));\n                    }\n\n                    var isPrevented = this.trigger(REQUESTSTART, {\n                        type: READ\n                    });\n                    if (!isPrevented) {\n                        this.trigger(PROGRESS);\n\n                        result = this._queryProcess(this._data, this._mergeState(\n                            options));\n\n                        if (!remote) {\n                            if (result.total !== undefined) {\n                                this._total = result.total;\n                            } else {\n                                this._total = this._data.length;\n                            }\n                        }\n\n                        this.view(this._index(result.data));\n                        this.trigger(REQUESTEND, {\n                            type: READ\n                        });\n                        this.trigger(CHANGE, {\n                            items: result.data\n                        });\n                    }\n\n                    return Deferred().resolve(isPrevented).promise();\n                },\n\n                fetch: function(callback) {\n                    var that = this;\n                    var fn = function(isPrevented) {\n                        if (isPrevented !== true && isFunction(callback)) {\n                            callback.call(that);\n                        }\n                    };\n\n                    return this._query().then(fn);\n                },\n\n                _query: function(options) {\n                    var that = this;\n\n                    return that.query(extend({}, {\n                        page: that.page(),\n                        pageSize: that.pageSize(),\n                        sort: that.sort(),\n                        filter: that.filter()\n                    }, options));\n                },\n\n                next: function(options) {\n                    var that = this,\n                        page = that.page(),\n                        total = that.total();\n\n                    options = options || {};\n\n                    if (!page || (total && page + 1 > that.totalPages())) {\n                        return;\n                    }\n\n                    that._skip = page * that.take();\n\n                    page += 1;\n                    options.page = page;\n\n                    that._query(options);\n\n                    return page;\n                },\n\n                prev: function(options) {\n                    var that = this,\n                        page = that.page();\n\n                    options = options || {};\n\n                    if (!page || page === 1) {\n                        return;\n                    }\n\n                    that._skip = that._skip - that.take();\n\n                    page -= 1;\n                    options.page = page;\n\n                    that._query(options);\n\n                    return page;\n                },\n\n                page: function(val) {\n                    var that = this,\n                        skip;\n\n                    if (val !== undefined) {\n                        if (this.options.total === false) {\n                            val = math.max(val, 1);\n                        } else {\n                            val = math.max(math.min(math.max(val, 1), that.totalPages()),\n                                1);\n                        }\n                        that._query({\n                            page: val\n                        });\n                        return;\n                    }\n                    skip = that.skip();\n\n                    return skip !== undefined ? math.round((skip || 0) / (that.take() ||\n                            1)) + 1 :\n                        undefined;\n                },\n\n                pageSize: function(val) {\n                    var that = this;\n\n                    if (val !== undefined) {\n                        that._query({\n                            pageSize: val,\n                            page: 1\n                        });\n                        return;\n                    }\n\n                    return that.take();\n                },\n\n                sort: function(val) {\n                    var that = this;\n\n                    if (val !== undefined) {\n                        that._query({\n                            sort: val\n                        });\n                        return;\n                    }\n\n                    return that._sort;\n                },\n\n                filter: function(val) {\n                    var that = this;\n\n                    if (val === undefined) {\n                        return that._filter;\n                    }\n\n                    if (isPlainObject(val) && val.field === undefined) {\n                        val = $.map(val, function(value, field) {\n                            return {\n                                field: field,\n                                value: value\n                            };\n                        });\n                    }\n\n                    that._query({\n                        filter: val,\n                        page: 1\n                    });\n                    that.trigger(\"reset\");\n                },\n\n                total: function() {\n                    return parseInt(this._total || 0, 10);\n                },\n\n                totalPages: function() {\n                    var that = this,\n                        pageSize = that.pageSize() || that.total();\n\n                    return math.ceil((that.total() || 0) / pageSize);\n                },\n\n                /*inRange: function(skip, take) {\n        var that = this,\n            end = math.min(skip + take, that.total());\n\n        if (!that.options.server && that._data.length > 0) {\n            return true;\n        }\n\n        return that._findRange(skip, end).length > 0;\n    },\n\n    lastRange: function() {\n        var ranges = this._ranges;\n        return ranges[ranges.length - 1] || {\n            start: 0,\n            end: 0,\n            data: []\n        };\n    },\n\n    enableRequestsInProgress: function() {\n        this._skipRequestsInProgress = false;\n    },*/\n\n                range: function(skip, take) {\n                    skip = math.min(skip || 0, this.total());\n\n                    var that = this,\n                        total = that.total(),\n                        pageSkip = math.max(math.floor(skip / take), 0) * take,\n                        size = math.min(pageSkip + take, total),\n                        data;\n\n                    that._skipRequestsInProgress = false;\n\n                    data = that._findRange(skip, math.min(skip + take, total));\n\n                    if (data.length) {\n                        that._skipRequestsInProgress = true;\n                        that._pending = undefined;\n\n                        that._skip = skip > that.skip() ? math.min(size, (that.totalPages() -\n                                1) *\n                            that.take()) : pageSkip;\n\n                        that._take = take;\n\n                        var server = that.options.server;\n\n                        try {\n                            that.options.server = true;\n\n                            if (server) {\n                                that._detachObservableParents();\n                                that._data = data = that._observe(data);\n                            }\n                            that._process(data);\n                        } finally {\n                            that.options.server = server;\n                        }\n\n                        return;\n                    }\n\n                    if (take !== undefined) {\n                        if (!that._rangeExists(pageSkip, size)) {\n                            that.prefetch(pageSkip, take, function() {\n                                if (skip > pageSkip && size < that.total() && !that\n                                    ._rangeExists(\n                                        size, math.min(size + take, that.total()))) {\n                                    that.prefetch(size, take, function() {\n                                        that.range(skip, take);\n                                    });\n                                } else {\n                                    that.range(skip, take);\n                                }\n                            });\n                        } else if (pageSkip < skip) {\n                            that.prefetch(size, take, function() {\n                                that.range(skip, take);\n                            });\n                        }\n                    }\n                },\n\n                _findRange: function(start, end) {\n                    var that = this,\n                        ranges = that._ranges,\n                        range,\n                        data = [],\n                        skipIdx,\n                        takeIdx,\n                        startIndex,\n                        endIndex,\n                        rangeData,\n                        rangeEnd,\n                        processed,\n                        options = that.options,\n                        remote = options.server,\n                        flatData,\n                        count,\n                        length;\n\n                    for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                        range = ranges[skipIdx];\n                        if (start >= range.start && start <= range.end) {\n                            count = 0;\n\n                            for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                                range = ranges[takeIdx];\n                                flatData = range.data;\n\n                                if (flatData.length && start + count >= range.start) {\n                                    rangeData = range.data;\n                                    rangeEnd = range.end;\n\n                                    if (!remote) {\n                                        var sort = normalizeSort(that.sort() || []);\n                                        processed = that._queryProcess(range.data, {\n                                            sort: sort,\n                                            filter: that.filter()\n                                        });\n                                        flatData = rangeData = processed.data;\n\n                                        if (processed.total !== undefined) {\n                                            rangeEnd = processed.total;\n                                        }\n                                    }\n\n                                    startIndex = 0;\n                                    if (start + count > range.start) {\n                                        startIndex = (start + count) - range.start;\n                                    }\n                                    endIndex = flatData.length;\n                                    if (rangeEnd > end) {\n                                        endIndex = endIndex - (rangeEnd - end);\n                                    }\n                                    count += endIndex - startIndex;\n                                    data = data.concat(rangeData.slice(startIndex,\n                                        endIndex))\n\n                                    if (end <= range.end && count == end - start) {\n                                        return data;\n                                    }\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    return [];\n                },\n\n                skip: function() {\n                    var that = this;\n\n                    if (that._skip === undefined) {\n                        return (that._page !== undefined ? (that._page - 1) * (that.take() ||\n                                1) :\n                            undefined);\n                    }\n                    return that._skip;\n                },\n\n                take: function() {\n                    return this._take || this._pageSize;\n                },\n\n                _prefetchSuccessHandler: function(skip, size, callback, force) {\n                    var that = this;\n\n                    return function(data) {\n                        var found = false,\n                            range = {\n                                start: skip,\n                                end: size,\n                                data: []\n                            },\n                            idx,\n                            length,\n                            temp;\n\n                        that._dequeueRequest();\n\n                        that.trigger(REQUESTEND, {\n                            response: data,\n                            type: READ\n                        });\n\n                        data = that.reader.parse(data);\n\n                        temp = that._readData(data);\n\n                        if (temp.length) {\n                            for (idx = 0, length = that._ranges.length; idx <\n                                length; idx++) {\n                                if (that._ranges[idx].start === skip) {\n                                    found = true;\n                                    range = that._ranges[idx];\n                                    break;\n                                }\n                            }\n                            if (!found) {\n                                that._ranges.push(range);\n                            }\n                        }\n\n                        range.data = that._observe(temp);\n                        range.end = range.start + range.data.length;\n                        that._ranges.sort(function(x, y) {\n                            return x.start - y.start;\n                        });\n                        that._total = that.reader.total(data);\n\n                        if (force || !that._skipRequestsInProgress) {\n                            if (callback && temp.length) {\n                                callback();\n                            } else {\n                                that.trigger(CHANGE, {});\n                            }\n                        }\n                    };\n                },\n\n                prefetch: function(skip, take, callback) {\n                    var that = this,\n                        size = math.min(skip + take, that.total()),\n                        options = extend(that._pageParam(), {\n                            pageSize: take,\n                            sort: that._sort,\n                            filter: that._filter\n                        });\n\n                    if (!that._rangeExists(skip, size)) {\n                        clearTimeout(that._timeout);\n\n                        that._timeout = setTimeout(function() {\n                            that._queueRequest(options, function() {\n                                if (!that.trigger(REQUESTSTART, {\n                                    type: READ\n                                })) {\n                                    that.transport.read({\n                                        data: that._params(options),\n                                        cache: false,\n                                        success: that._prefetchSuccessHandler(\n                                            skip, size, callback),\n                                        error: function() {\n                                            var args = slice.call(\n                                                arguments);\n                                            that.error.apply(that, args);\n                                        }\n                                    });\n                                } else {\n                                    that._dequeueRequest();\n                                }\n                            });\n                        }, 100);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n\n                _rangeExists: function(start, end) {\n                    var that = this,\n                        ranges = that._ranges,\n                        idx,\n                        length;\n\n                    for (idx = 0, length = ranges.length; idx < length; idx++) {\n                        if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                            return true;\n                        }\n                    }\n                    return false;\n                },\n\n                _removeModelFromRanges: function(model) {\n                    var result,\n                        found,\n                        range;\n\n                    for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                        range = this._ranges[idx];\n\n                        this._eachItem(range.data, function(items) {\n                            result = removeModel(items, model);\n                            if (result) {\n                                found = true;\n                            }\n                        });\n\n                        if (found) {\n                            break;\n                        }\n                    }\n                },\n\n                _updateRangesLength: function() {\n                    var startOffset = 0,\n                        range,\n                        rangeLength;\n\n                    for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                        range = this._ranges[idx];\n                        range.start = range.start - startOffset;\n\n                        rangeLength = range.data.length;\n                        startOffset = range.end - rangeLength;\n                        range.end = range.start + rangeLength;\n                    }\n                }\n            });\n\n\n            DataSource.create = function(options) {\n\n                if (isArray(options) || options instanceof ObservableArray) {\n                    options = {\n                        data: options\n                    };\n                }\n\n                var dataSource = options || {},\n                    data = dataSource.data,\n                    fields = dataSource.fields,\n                    select = dataSource.select,\n                    idx,\n                    length,\n                    model = {},\n                    field;\n\n                if (!data && fields && !dataSource.transport && select) {\n                    data = inferSelect(select, fields);\n                }\n\n                // 自动创建Model\n                if (Model && fields && !dataSource.model) {\n                    for (idx = 0, length = fields.length; idx < length; idx++) {\n                        field = fields[idx];\n                        if (field.type) {\n                            model[field.field] = field;\n                        }\n                    }\n\n                    if (!isEmptyObject(model)) {\n                        dataSource.model = extend(true, model, {\n                            fields: model\n                        });\n                    }\n                }\n\n                dataSource.data = data;\n\n                return dataSource instanceof DataSource ? dataSource : new DataSource(\n                    dataSource);\n            };\n\n\n            var NodeDataSource = DataSource.extend({\n\n                ctor: function(options) {\n                    if (!options) return;\n\n                    var node = Node.define({\n                        children: options\n                    });\n\n                    this._super(extend(true, {}, {\n                        modelBase: node,\n                        model: node\n                    }, options));\n\n                    this._attachBubbleHandlers();\n                },\n\n                _attachBubbleHandlers: function() {\n                    var that = this;\n\n                    that._data.bind(ERROR, function(e) {\n                        that.trigger(ERROR, e);\n                    });\n                },\n\n                remove: function(node) {\n                    var parentNode = node.parentNode(),\n                        dataSource = this,\n                        result;\n\n                    if (parentNode && parentNode._initChildren) {\n                        dataSource = parentNode.children;\n                    }\n\n                    result = dataSource._super.remove(node);\n\n                    if (parentNode && !dataSource.data().length) {\n                        parentNode.hasChildren = false;\n                    }\n\n                    return result;\n                },\n\n                success: dataMethod(\"success\"),\n\n                data: dataMethod(\"data\"),\n\n                insert: function(index, model) {\n                    var parentNode = this.parent();\n\n                    if (parentNode && parentNode._initChildren) {\n                        parentNode.hasChildren = true;\n                        parentNode._initChildren();\n                    }\n\n                    return this._super.insert.call(this, index, model);\n                },\n\n                _find: function(method, value, key) {\n                    var idx, length, node, data, children;\n\n                    node = this._super[method].call(this, value, key);\n\n                    if (node) {\n                        return node;\n                    }\n\n                    data = this._data;\n\n                    if (!data) {\n                        return;\n                    }\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        children = data[idx].children;\n\n                        if (!(children instanceof NodeDataSource)) {\n                            continue;\n                        }\n\n                        node = children[method](value);\n\n                        if (node) {\n                            return node;\n                        }\n                    }\n                },\n\n                get: function(id, key) {\n                    return this._find(\"get\", id, key);\n                },\n\n                getByUid: function(uid) {\n                    return this._find(\"getByUid\", uid);\n                }\n            });\n\n\n            var Node = Model.define({\n                idField: \"id\",\n\n                ctor: function(value) {\n                    if (!value) return;\n\n                    var that = this,\n                        hasChildren = that.hasChildren || value && value.hasChildren,\n                        childrenField = \"items\",\n                        childrenOptions = {};\n\n                    if (value.children instanceof Array) {\n                        value.items = value.children;\n                        delete value.children;\n                    }\n\n                    that._super(value);\n\n                    if (typeof that.children === STRING && that.children != 'children') {\n                        childrenField = that.children;\n                    }\n\n                    childrenOptions = {\n                        childrenField: childrenField,\n                        model: {\n                            hasChildren: hasChildren,\n                            id: that.idField,\n                            fields: that.fields\n                        }\n                    };\n\n                    if (typeof that.children !== STRING) {\n                        extend(childrenOptions, that.children);\n                    }\n\n                    childrenOptions.data = value;\n\n                    if (!hasChildren) {\n                        hasChildren = childrenOptions.childrenField;\n                    }\n\n                    if (typeof hasChildren === STRING) {\n                        hasChildren = fly.getter(hasChildren);\n                    }\n\n                    if (isFunction(hasChildren)) {\n                        that.hasChildren = !!hasChildren.call(that, that);\n                    }\n\n                    that._childrenOptions = childrenOptions;\n\n                    if (that.hasChildren) {\n                        that._initChildren();\n                    }\n\n                    that._loaded = !!(value && (value[childrenField] || value._loaded));\n                },\n\n                _initChildren: function() {\n                    var that = this;\n                    var children, transport, parameterMap;\n\n                    if (!(that.children instanceof NodeDataSource)) {\n                        children = that.children = new NodeDataSource(that._childrenOptions);\n\n                        transport = children.transport;\n                        parameterMap = transport.parameterMap;\n\n                        transport.parameterMap = function(data, type) {\n                            data[that.idField || \"id\"] = that.id;\n\n                            if (parameterMap) {\n                                data = parameterMap(data, type);\n                            }\n\n                            return data;\n                        };\n\n                        children.parent = function() {\n                            return that;\n                        };\n\n                        children.bind(CHANGE, function(e) {\n                            e.node = e.node || that;\n                            that.trigger(CHANGE, e);\n                        });\n\n                        children.bind(ERROR, function(e) {\n                            var collection = that.parent();\n\n                            if (collection) {\n                                e.node = e.node || that;\n                                collection.trigger(ERROR, e);\n                            }\n                        });\n\n                        that._updateChildrenField();\n                    }\n                },\n\n                append: function(model) {\n                    this._initChildren();\n                    this.loaded(true);\n                    this.children.add(model);\n                },\n\n                hasChildren: false,\n\n                level: function() {\n                    var parentNode = this.parentNode(),\n                        level = 0;\n\n                    while (parentNode && parentNode.parentNode) {\n                        level++;\n                        parentNode = parentNode.parentNode ? parentNode.parentNode() :\n                            null;\n                    }\n\n                    return level;\n                },\n\n                _updateChildrenField: function() {\n                    var fieldName = this._childrenOptions.childrenField;\n\n                    this[fieldName || \"items\"] = this.children.data();\n                },\n\n                _childrenLoaded: function() {\n                    this._loaded = true;\n\n                    this._updateChildrenField();\n                },\n\n                load: function() {\n                    var options = {};\n                    var method = \"_query\";\n                    var children, promise;\n\n                    if (this.hasChildren) {\n                        this._initChildren();\n\n                        children = this.children;\n\n                        options[this.idField || \"id\"] = this.id;\n\n                        if (!this._loaded) {\n                            children._data = undefined;\n                            method = \"read\";\n                        }\n\n                        children.one(CHANGE, proxy(this._childrenLoaded, this));\n\n                        promise = children[method](options);\n                    } else {\n                        this.loaded(true);\n                    }\n\n                    return promise || Deferred().resolve().promise();\n                },\n\n                parentNode: function() {\n                    var array = this.parent();\n\n                    return array.parent();\n                },\n\n                loaded: function(value) {\n                    if (value !== undefined) {\n                        this._loaded = value;\n                    } else {\n                        return this._loaded;\n                    }\n                },\n\n                shouldSerialize: function(field) {\n                    return this._super.shouldSerialize.call(this, field) &&\n                        field !== \"children\" &&\n                        field !== \"_loaded\" &&\n                        field !== \"hasChildren\" &&\n                        field !== \"_childrenOptions\";\n                }\n            });\n\n\n            var Cache = Class.extend({\n                ctor: function() {\n                    this._store = {};\n                },\n                add: function(key, data) {\n                    if (key !== undefined) {\n                        this._store[stringify(key)] = data;\n                    }\n                },\n                find: function(key) {\n                    return this._store[stringify(key)];\n                },\n                clear: function() {\n                    this._store = {};\n                },\n                remove: function(key) {\n                    delete this._store[stringify(key)];\n                }\n            });\n\n            Cache.create = function(options) {\n                var store = {\n                    \"inmemory\": function() {\n                        return new Cache();\n                    }\n                };\n\n                if (isPlainObject(options) && isFunction(options.find)) {\n                    return options;\n                }\n\n                if (options === true) {\n                    return new Cache();\n                }\n\n                return store[options]();\n            };\n\n\n            var DataReader = Class.extend({\n                ctor: function(model, modelBase, data) {\n                    var that = this,\n                        serializeFunction = proxy(that.serialize, that),\n                        dataFunction = proxy(typeof data === STRING ? getter(data) :\n                            that.data, that),\n                        originalFieldNames = {},\n                        getters = {},\n                        serializeGetters = {},\n                        fieldNames = {},\n                        shouldSerialize = false,\n                        dataModel,\n                        fieldName;\n\n                    that._dataAccessFunction = dataFunction;\n\n                    if (typeof data === STRING) {\n                        that[data] = getter(data);\n                    }\n\n                    if (isPlainObject(model)) {\n                        dataModel = modelBase ? modelBase.define(model) : Model.define(\n                            model);\n                    }\n\n                    if (!dataModel) {\n                        return;\n                    }\n\n                    that.model = model = dataModel;\n\n                    if (model.fields) {\n                        each(model.fields, function(field, value) {\n                            var fromName;\n\n                            fieldName = field;\n\n                            if (isPlainObject(value) && value.field) {\n                                fieldName = value.field;\n                            } else if (typeof value === STRING) {\n                                fieldName = value;\n                            }\n\n                            if (isPlainObject(value) && value.from) {\n                                fromName = value.from;\n                            }\n\n                            shouldSerialize = shouldSerialize || (fromName &&\n                                fromName !==\n                                field) || fieldName !== field;\n\n                            getters[field] = getter(fromName || fieldName);\n                            serializeGetters[field] = getter(field);\n                            originalFieldNames[fromName || fieldName] = field;\n                            fieldNames[field] = fromName || fieldName;\n                        });\n\n                        if (shouldSerialize) {\n                            that.serialize = wrapDataAccess(serializeFunction,\n                                dataModel,\n                                serializeRecords, serializeGetters, originalFieldNames,\n                                fieldNames);\n                        }\n                    }\n\n                    that.data = wrapDataAccess(dataFunction, dataModel, convertRecords,\n                        getters, originalFieldNames, fieldNames);\n                },\n                errors: function(data) {\n                    return data ? data.errors : null;\n                },\n                parse: function(data) {\n                    // 是否对无数据的情况进行过滤，这是一个大坑\n                    if (data && data.rows && data.rows.length == 0) {\n                        data.errors = EMPTY;\n                    }\n                    return data;\n                },\n                data: function(data) {\n                    if (data && data.rows != undefined) {\n                        return data.rows;\n                    }\n                    return data;\n                },\n                total: function(data) {\n                    if (data && data.total != undefined) {\n                        return data.total;\n                    }\n                    return data.length;\n                },\n                serialize: function(data) {\n                    return data;\n                }\n            });\n\n\n            var Query = Class.extend({\n\n                ctor: function(data) {\n                    this.data = data || [];\n                },\n\n                statics: {\n                    normalizeFilter: normalizeFilter,\n\n                    filterExpr: function(expression) {\n                        var expressions = [],\n                            fieldFunctions = [],\n                            operatorFunctions = [],\n                            logic = {\n                                and: ' && ',\n                                or: ' || '\n                            },\n                            idx,\n                            length,\n                            filter,\n                            expr,\n                            field,\n                            operator,\n                            filters = expression.filters;\n\n                        for (idx = 0, length = filters.length; idx < length; idx++) {\n                            filter = filters[idx];\n                            field = filter.field;\n                            operator = filter.operator;\n\n                            if (filter.filters) {\n                                expr = Query.filterExpr(filter);\n                                // __o[0] -> __o[1]\n                                filter = expr.expression\n                                    .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                                        index = +index;\n                                        return '__o[' + (operatorFunctions.length +\n                                            index) + ']';\n                                    })\n                                    .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                                        index = +index;\n                                        return '__f[' + (fieldFunctions.length +\n                                            index) + ']';\n                                    });\n\n                                operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                                fieldFunctions.push.apply(fieldFunctions, expr.fields);\n                            } else {\n                                if (typeof field === FUNCTION) {\n                                    expr = '__f[' + fieldFunctions.length + '](d)';\n                                    fieldFunctions.push(field);\n                                } else {\n                                    expr = fly.expr(field);\n                                }\n\n                                if (typeof operator === FUNCTION) {\n                                    filter = '__o[' + operatorFunctions.length + '](' +\n                                        expr + ', ' + operators.quote(\n                                            filter.value) + ')';\n                                    operatorFunctions.push(operator);\n                                } else {\n                                    filter = operators[(operator || 'eq').toLowerCase()]\n                                    (expr, filter.value, filter\n                                        .ignoreCase !== undefined ? filter.ignoreCase :\n                                        true);\n                                }\n                            }\n\n                            expressions.push(filter);\n                        }\n\n                        return {\n                            expression: '(' + expressions.join(logic[expression.logic]) +\n                                ')',\n                            fields: fieldFunctions,\n                            operators: operatorFunctions\n                        };\n                    },\n\n                    process: function(data, options) {\n                        options = options || {};\n\n                        var query = new Query(data),\n                            sort = normalizeSort(options.sort || []),\n                            total,\n                            filterCallback = options.filterCallback,\n                            filter = options.filter,\n                            skip = options.skip,\n                            take = options.take;\n\n                        if (filter) {\n                            query = query.filter(filter);\n\n                            if (filterCallback) {\n                                query = filterCallback(query);\n                            }\n\n                            total = query.toArray().length;\n                        }\n\n                        if (sort) {\n                            query = query.sort(sort);\n                        }\n\n                        if (skip !== undefined && take !== undefined) {\n                            query = query.range(skip, take);\n                        }\n\n                        return {\n                            total: total,\n                            data: query.toArray()\n                        };\n                    }\n                },\n\n                toArray: function() {\n                    return this.data;\n                },\n\n                range: function(index, count) {\n                    return new Query(this.data.slice(index, index + count));\n                },\n\n                skip: function(count) {\n                    return new Query(this.data.slice(count));\n                },\n\n                take: function(count) {\n                    return new Query(this.data.slice(0, count));\n                },\n\n                select: function(selector) {\n                    return new Query(map(this.data, selector));\n                },\n\n                order: function(selector, dir) {\n                    var sort = {\n                        dir: dir\n                    };\n\n                    if (selector) {\n                        if (selector.compare) {\n                            sort.compare = selector.compare;\n                        } else {\n                            sort.field = selector;\n                        }\n                    }\n\n                    return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n                },\n\n                orderBy: function(selector) {\n                    return this.order(selector, 'asc');\n                },\n\n                orderByDescending: function(selector) {\n                    return this.order(selector, 'desc');\n                },\n\n                sort: function(field, dir, comparer) {\n                    var descriptors = normalizeSort(field, dir),\n                        comparers = [],\n                        length = descriptors.length,\n                        idx = 0;\n\n                    comparer = comparer || Comparer;\n\n                    if (length) {\n                        for (; idx < length; idx++) {\n                            comparers.push(comparer.create(descriptors[idx]));\n                        }\n\n                        return this.orderBy({\n                            compare: comparer.combine(comparers)\n                        });\n                    }\n\n                    return this;\n                },\n\n                filter: function(expressions) {\n                    var idx,\n                        current,\n                        length,\n                        compiled,\n                        predicate,\n                        data = this.data,\n                        fields,\n                        operators,\n                        result = [],\n                        filter;\n\n                    expressions = normalizeFilter(expressions);\n\n                    if (!expressions || expressions.filters.length === 0) {\n                        return this;\n                    }\n\n                    compiled = Query.filterExpr(expressions);\n                    fields = compiled.fields;\n                    operators = compiled.operators;\n\n                    predicate = filter = new Function('d, __f, __o', 'return ' +\n                        compiled.expression);\n\n                    if (fields.length || operators.length) {\n                        filter = function(d) {\n                            return predicate(d, fields, operators);\n                        };\n                    }\n\n\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        current = data[idx];\n\n                        if (filter(current)) {\n                            result.push(current);\n                        }\n                    }\n\n                    return new Query(result);\n                }\n\n            });\n\n            var Transport = {\n                create: function(options, dataSource) {\n                    var transport,\n                        currentTransport = options.transport,\n                        read = options.read;\n\n                    if (read) {\n                        transport = isFunction(currentTransport) ? currentTransport : new RemoteTransport({\n                            read: read,\n                            dataSource: dataSource\n                        });\n                    } else {\n                        transport = new LocalTransport({\n                            data: options.data || []\n                        });\n                    }\n\n                    /*if (isArray(data) || !data) {\n            transport = new LocalTransport({\n                data: data || []\n            });\n        } else {\n            options.read = typeof data === STRING ? {\n                url: data\n            } : data;\n            options.read.url = utils.url(options.read.url);\n\n            if (dataSource) {\n                options.dataSource = dataSource;\n            }\n\n            transport = new RemoteTransport({\n                read: typeof data === STRING ? {\n                        url: data\n                    } : data,\n                dataSource: dataSource\n            });\n        }*/\n\n                    return transport;\n                }\n            };\n\n\n            var LocalTransport = Class.extend({\n                ctor: function(options) {\n                    this.data = options.data;\n                },\n                read: function(options) {\n                    var data = [];\n                    if (options.take && options.skip) {\n                        for (var i = 0; i < options.take; i++) {\n                            data.push(this.data[options.skip + i]);\n                        }\n                    } else {\n                        data = this.data;\n                    }\n                    options.success(data);\n                },\n                update: function(options) {\n                    options.success(options.data);\n                },\n                create: function(options) {\n                    options.success(options.data);\n                },\n                destroy: function(options) {\n                    options.success(options.data);\n                }\n            });\n\n            var RemoteTransport = Class.extend({\n\n                ctor: function(options) {\n                    var that = this,\n                        parameterMap;\n\n                    options = that.options = extend({}, that.options, options);\n\n                    each(CRUD, function(index, type) {\n                        if (typeof options[type] === STRING) {\n                            options[type] = {\n                                url: options[type]\n                            };\n                        }\n                    });\n\n                    that.cache = options.cache ? Cache.create(options.cache) : {\n                        find: noop,\n                        add: noop\n                    };\n\n                    parameterMap = options.parameterMap;\n\n                    if (isFunction(options.push)) {\n                        that.push = options.push;\n                    }\n\n                    if (!that.push) {\n                        that.push = identity;\n                    }\n\n                    that.parameterMap = isFunction(parameterMap) ? parameterMap :\n                        function(options) {\n                            var result = {};\n\n                            each(options, function(option, value) {\n                                if (option in parameterMap) {\n                                    option = parameterMap[option];\n                                    if (isPlainObject(option)) {\n                                        value = option.value(value);\n                                        option = option.key;\n                                    }\n                                }\n\n                                result[option] = value;\n                            });\n\n                            return result;\n                    };\n                },\n\n                options: {\n                    parameterMap: identity\n                },\n\n                create: function(options) {\n                    return ajax(this.setup(options, CREATE));\n                },\n\n                read: function(options) {\n                    var that = this,\n                        success,\n                        error,\n                        result,\n                        cache = that.cache;\n\n                    options = that.setup(options, READ);\n                    success = options.success || noop;\n                    error = options.error || noop;\n                    result = cache.find(options.data);\n\n                    if (result !== undefined) {\n                        success(result);\n                    } else {\n                        options.success = function(result) {\n                            cache.add(options.data, result);\n                            success(result);\n                        };\n\n                        ajax(options);\n                    }\n                },\n\n                update: function(options) {\n                    return ajax(this.setup(options, UPDATE));\n                },\n\n                destroy: function(options) {\n                    return ajax(this.setup(options, DESTROY));\n                },\n\n                setup: function(options, type) {\n                    options = options || {};\n\n                    var that = this,\n                        parameters,\n                        operation = that.options[type],\n                        data = isFunction(operation.data) ? operation.data(options.data) :\n                        operation.data;\n\n                    options = extend(true, {}, operation, options);\n                    parameters = extend(true, {}, data, options.data);\n\n                    options.data = that.parameterMap(parameters, type);\n\n                    if (isFunction(options.url)) {\n                        options.url = options.url(parameters);\n                    }\n\n                    return options;\n                }\n            });\n\n\n            /**\n             * 将数据转化为带有index的JSON Object\n             * @param   {Array}  array 需要格式化的数组\n             * @returns {Object} JSON\n             */\n            function toJSON(array) {\n                var idx, length = array.length,\n                    result = new Array(length);\n\n                for (idx = 0; idx < length; idx++) {\n                    result[idx] = format.toJSON(array[idx]);\n                }\n\n                return result;\n            }\n\n            /*function map(array, callback) {\n    var idx, length = array.length,\n        result = new Array(length);\n\n    for (idx = 0; idx < length; idx++) {\n        result[idx] = callback(array[idx], idx, array);\n    }\n\n    return result;\n};*/\n\n            function dataMethod(name) {\n                return function() {\n                    var data = this._data,\n                        result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n                    if (this._data != data) {\n                        this._attachBubbleHandlers();\n                    }\n\n                    return result;\n                };\n            }\n\n            function normalizeSort(field, dir) {\n                if (field) {\n                    var descriptor = typeof field === STRING ? {\n                            field: field,\n                            dir: dir\n                        } : field,\n                        descriptors = isArray(descriptor) ?\n                        descriptor :\n                        (descriptor !== undefined ? [descriptor] : []);\n\n                    return grep(descriptors, function(d) {\n                        return !!d.dir;\n                    });\n                }\n            }\n\n            function normalizeOperator(expression) {\n                var idx,\n                    length,\n                    filter,\n                    operator,\n                    filters = expression.filters;\n\n                if (filters) {\n                    for (idx = 0, length = filters.length; idx < length; idx++) {\n                        filter = filters[idx];\n                        operator = filter.operator;\n\n                        if (operator && typeof operator === STRING) {\n                            filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                        }\n\n                        normalizeOperator(filter);\n                    }\n                }\n            }\n\n            function normalizeFilter(expression) {\n                if (expression && !isEmptyObject(expression)) {\n                    if (isArray(expression) || !expression.filters) {\n                        expression = {\n                            logic: 'and',\n                            filters: isArray(expression) ? expression : [expression]\n                        };\n                    }\n\n                    normalizeOperator(expression);\n\n                    return expression;\n                }\n            }\n\n            var operators = (function() {\n\n                function quote(value) {\n                    return value.replace(quoteRegExp, '\\\\').replace(newLineRegExp, '');\n                }\n\n                function operator(op, a, b, ignore) {\n                    var date;\n\n                    if (b != null) {\n                        if (typeof b === STRING) {\n                            b = quote(b);\n                            date = dateRegExp.exec(b);\n                            if (date) {\n                                b = new Date(+date[1]);\n                            } else if (ignore) {\n                                b = \"'\" + b.toLowerCase() + \"'\";\n                                a = '(' + a + ' || \"\").toLowerCase()';\n                            } else {\n                                b = \"'\" + b + \"'\";\n                            }\n                        }\n\n                        if (b.getTime) {\n                            a = '(' + a + '?' + a + '.getTime():' + a + ')';\n                            b = b.getTime();\n                        }\n                    }\n\n                    return a + ' ' + op + ' ' + b;\n                }\n\n                return {\n                    quote: function(value) {\n                        if (value && value.getTime) {\n                            return \"new Date(\" + value.getTime() + \")\";\n                        }\n\n                        if (typeof value == \"string\") {\n                            return \"'\" + quote(value) + \"'\";\n                        }\n\n                        return \"\" + value;\n                    },\n                    eq: function(a, b, ignore) {\n                        return operator(\"==\", a, b, ignore);\n                    },\n                    neq: function(a, b, ignore) {\n                        return operator(\"!=\", a, b, ignore);\n                    },\n                    gt: function(a, b, ignore) {\n                        return operator(\">\", a, b, ignore);\n                    },\n                    gte: function(a, b, ignore) {\n                        return operator(\">=\", a, b, ignore);\n                    },\n                    lt: function(a, b, ignore) {\n                        return operator(\"<\", a, b, ignore);\n                    },\n                    lte: function(a, b, ignore) {\n                        return operator(\"<=\", a, b, ignore);\n                    },\n                    startswith: function(a, b, ignore) {\n                        if (ignore) {\n                            a = \"(\" + a + \" || '').toLowerCase()\";\n                            if (b) {\n                                b = b.toLowerCase();\n                            }\n                        }\n\n                        if (b) {\n                            b = quote(b);\n                        }\n\n                        return a + \".lastIndexOf('\" + b + \"', 0) == 0\";\n                    },\n                    endswith: function(a, b, ignore) {\n                        if (ignore) {\n                            a = \"(\" + a + \" || '').toLowerCase()\";\n                            if (b) {\n                                b = b.toLowerCase();\n                            }\n                        }\n\n                        if (b) {\n                            b = quote(b);\n                        }\n\n                        return a + \".indexOf('\" + b + \"', \" + a + \".length - \" + (b ||\n                                \"\").length +\n                            \") >= 0\";\n                    },\n                    contains: function(a, b, ignore) {\n                        if (ignore) {\n                            a = \"(\" + a + \" || '').toLowerCase()\";\n                            if (b) {\n                                b = b.toLowerCase();\n                            }\n                        }\n\n                        if (b) {\n                            b = quote(b);\n                        }\n\n                        return a + \".indexOf('\" + b + \"') >= 0\";\n                    },\n                    doesnotcontain: function(a, b, ignore) {\n                        if (ignore) {\n                            a = \"(\" + a + \" || '').toLowerCase()\";\n                            if (b) {\n                                b = b.toLowerCase();\n                            }\n                        }\n\n                        if (b) {\n                            b = quote(b);\n                        }\n\n                        return a + \".indexOf('\" + b + \"') == -1\";\n                    }\n                };\n            })();\n\n\n            function serializeRecords(data, getters, modelInstance, originalFieldNames,\n                fieldNames) {\n                var record,\n                    getter,\n                    originalName,\n                    idx,\n                    length;\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    record = data[idx];\n                    for (getter in getters) {\n                        originalName = fieldNames[getter];\n\n                        if (originalName && originalName !== getter) {\n                            record[originalName] = getters[getter](record);\n                            delete record[getter];\n                        }\n                    }\n                }\n            }\n\n            function convertRecords(data, getters, modelInstance, originalFieldNames,\n                fieldNames) {\n                var record,\n                    getter,\n                    originalName,\n                    idx,\n                    length;\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    record = data[idx];\n                    for (getter in getters) {\n                        record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                        originalName = fieldNames[getter];\n                        if (originalName && originalName !== getter) {\n                            delete record[originalName];\n                        }\n                    }\n                }\n            }\n\n            function wrapDataAccess(originalFunction, model, converter, getters,\n                originalFieldNames, fieldNames) {\n                return function(data) {\n                    data = originalFunction(data);\n\n                    if (data && !isEmptyObject(getters)) {\n                        if (toString.call(data) !== ARR && !(data instanceof ObservableArray)) {\n                            data = [data];\n                        }\n\n                        converter(data, getters, new model(), originalFieldNames,\n                            fieldNames);\n                    }\n\n                    return data || [];\n                };\n            }\n\n\n            function replaceInRanges(ranges, data, item, observable) {\n                for (var idx = 0; idx < ranges.length; idx++) {\n                    if (ranges[idx].data === data) {\n                        break;\n                    }\n                    if (replaceInRange(ranges[idx].data, item, observable)) {\n                        break;\n                    }\n                }\n            }\n\n            function replaceInRange(items, item, observable) {\n                for (var idx = 0, length = items.length; idx < length; idx++) {\n                    if (items[idx] === item || items[idx] === observable) {\n                        items[idx] = observable;\n                        return true;\n                    }\n                }\n            }\n\n            function replaceWithObservable(view, data, ranges, type) {\n                for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n                    var item = view[viewIndex];\n\n                    if (!item || item instanceof type) {\n                        continue;\n                    }\n\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (data[idx] === item) {\n                            view[viewIndex] = data.at(idx);\n                            replaceInRanges(ranges, data, item, view[viewIndex]);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            function removeModel(data, model) {\n                var idx, length;\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    var dataItem = data.at(idx);\n                    if (dataItem.uid == model.uid) {\n                        data.splice(idx, 1);\n                        return dataItem;\n                    }\n                }\n            }\n\n\n            function indexOfPristineModel(data, model) {\n                if (model) {\n                    return indexOf(data, function(item) {\n                        if (item.uid) {\n                            return item.uid == model.uid;\n                        }\n\n                        return item[model.idField] === model.id;\n                    });\n                }\n                return -1;\n            }\n\n            function indexOfModel(data, model) {\n                if (model) {\n                    return indexOf(data, function(item) {\n                        return item.uid == model.uid;\n                    });\n                }\n                return -1;\n            }\n\n            function indexOf(data, comparer) {\n                var idx, length;\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (comparer(data[idx])) {\n                        return idx;\n                    }\n                }\n\n                return -1;\n            }\n\n            function fieldNameFromModel(fields, name) {\n                if (fields && !isEmptyObject(fields)) {\n                    var descriptor = fields[name];\n                    var fieldName;\n                    if (isPlainObject(descriptor)) {\n                        fieldName = descriptor.from || descriptor.field || name;\n                    } else {\n                        fieldName = fields[name] || name;\n                    }\n\n                    if (isFunction(fieldName)) {\n                        return name;\n                    }\n\n                    return fieldName;\n                }\n                return name;\n            }\n\n            function convertFilterDescriptorsField(descriptor, model) {\n                var idx,\n                    length,\n                    target = {};\n\n                for (var field in descriptor) {\n                    if (field !== \"filters\") {\n                        target[field] = descriptor[field];\n                    }\n                }\n\n                if (descriptor.filters) {\n                    target.filters = [];\n                    for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                        target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[\n                            idx], model);\n                    }\n                } else {\n                    target.field = fieldNameFromModel(model.fields, target.field);\n                }\n                return target;\n            }\n\n            function convertDescriptorsField(descriptors, model) {\n                var idx,\n                    length,\n                    result = [],\n                    target,\n                    descriptor;\n\n                for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                    target = {};\n\n                    descriptor = descriptors[idx];\n\n                    for (var field in descriptor) {\n                        target[field] = descriptor[field];\n                    }\n\n                    target.field = fieldNameFromModel(model.fields, target.field);\n\n                    result.push(target);\n                }\n                return result;\n            }\n\n            function inferSelect(select, fields) {\n                var options = $(select)[0].children,\n                    idx,\n                    length,\n                    data = [],\n                    record,\n                    firstField = fields[0],\n                    secondField = fields[1],\n                    value,\n                    option;\n\n                for (idx = 0, length = options.length; idx < length; idx++) {\n                    record = {};\n                    option = options[idx];\n\n                    if (option.disabled) {\n                        continue;\n                    }\n\n                    record[firstField.field] = option.text;\n\n                    value = option.attributes.value;\n\n                    if (value && value.specified) {\n                        value = option.value;\n                    } else {\n                        value = option.text;\n                    }\n\n                    record[secondField.field] = value;\n\n                    data.push(record);\n                }\n\n                return data;\n            }\n\n            var Comparer = {\n\n                selector: function(field) {\n                    return isFunction(field) ? field : getter(field);\n                },\n\n                compare: function(field) {\n                    var selector = this.selector(field);\n                    return function(a, b) {\n                        a = selector(a);\n                        b = selector(b);\n\n                        if (a == null && b == null) {\n                            return 0;\n                        }\n\n                        if (a == null) {\n                            return -1;\n                        }\n\n                        if (b == null) {\n                            return 1;\n                        }\n\n                        if (a.localeCompare) {\n                            return a.localeCompare(b);\n                        }\n\n                        return a > b ? 1 : (a < b ? -1 : 0);\n                    };\n                },\n\n                create: function(sort) {\n                    var compare = sort.compare || this.compare(sort.field);\n\n                    if (sort.dir == \"desc\") {\n                        return function(a, b) {\n                            return compare(b, a, true);\n                        };\n                    }\n\n                    return compare;\n                },\n\n                combine: function(comparers) {\n                    return function(a, b) {\n                        var result = comparers[0](a, b),\n                            idx,\n                            length;\n\n                        for (idx = 1, length = comparers.length; idx < length; idx++) {\n                            result = result || comparers[idx](a, b);\n                        }\n\n                        return result;\n                    };\n                }\n            };\n\n\n            /** 数据对象 */\n            extend(data, {\n                Query: Query,\n                DataSource: DataSource,\n                NodeDataSource: NodeDataSource,\n                LocalTransport: LocalTransport,\n                RemoteTransport: RemoteTransport,\n                Cache: Cache,\n                DataReader: DataReader,\n                Model: Model\n            });\n\n\n            fly.dataSource = function(object) {\n                if (!(object instanceof DataSource)) {\n                    object = new DataSource(object);\n                }\n                return object;\n            };\n\n            fly.nodeDataSource = function(object) {\n                if (!(object instanceof NodeDataSource)) {\n                    object = new NodeDataSource(object);\n                }\n                return object;\n            };\n\n            fly.data = data;\n            module.exports = data;\n\n        }, {\n            \"./fly.core\": 4,\n            \"./fly.format\": 7,\n            \"./fly.model\": 11,\n            \"./fly.observable\": 12,\n            \"./fly.utils\": 16\n        }\n    ],\n    6: [\n        function(require, module, exports) {\n            /**\n             * 拖拽\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-09-22\n             */\n\n            'use strict';\n\n            // 依赖core\n            var fly = require(\"./fly.core\"),\n                $ = fly.$,\n                $win = fly.$win,\n                $doc = fly.$doc,\n                proxy = $.proxy,\n                isTouch = fly.support.touch;\n\n            var html = document.documentElement;\n\n            var isLosecapture = fly.browser.ie != 6 && 'onlosecapture' in html;\n\n            var isSetCapture = 'setCapture' in html;\n\n            var types = {\n                start: isTouch ? 'touchstart' : 'mousedown',\n                over: isTouch ? 'touchmove' : 'mousemove',\n                end: isTouch ? 'touchend' : 'mouseup'\n            };\n\n\n            var getEvent = isTouch ? function(event) {\n                if (!event.touches) {\n                    event = event.originalEvent.touches.item(0);\n                }\n                return event;\n            } : function(event) {\n                return event;\n            };\n\n\n            var DragEvent = function() {\n                this.start = proxy(this.start, this);\n                this.over = proxy(this.over, this);\n                this.end = proxy(this.end, this);\n                this.onstart = this.onover = this.onend = $.noop;\n            };\n\n            DragEvent.types = types;\n\n            DragEvent.prototype = {\n\n                start: function(event) {\n                    event = this.startFix(event);\n\n                    $doc.on(types.over, this.over).on(types.end, this.end);\n\n                    this.onstart(event);\n                    return false;\n                },\n\n                over: function(event) {\n                    event = this.overFix(event);\n                    this.onover(event);\n                    return false;\n                },\n\n                end: function(event) {\n                    event = this.endFix(event);\n\n                    $doc.off(types.over, this.over).off(types.end, this.end);\n\n                    this.onend(event);\n                    return false;\n                },\n\n                startFix: function(event) {\n                    event = getEvent(event);\n\n                    this.target = $(event.target);\n                    this.selectstart = function() {\n                        return false;\n                    };\n\n                    $doc.on('selectstart', this.selectstart).on('dblclick', this.end);\n\n                    if (isLosecapture) {\n                        this.target.on('losecapture', this.end);\n                    } else {\n                        $win.on('blur', this.end);\n                    }\n\n                    if (isSetCapture) {\n                        this.target[0].setCapture();\n                    }\n\n                    return event;\n                },\n\n                overFix: function(event) {\n                    event = getEvent(event);\n                    return event;\n                },\n\n                endFix: function(event) {\n                    event = getEvent(event);\n\n                    $doc.off('selectstart', this.selectstart).off('dblclick', this.end);\n\n                    if (isLosecapture) {\n                        this.target.off('losecapture', this.end);\n                    } else {\n                        $win.off('blur', this.end);\n                    }\n\n                    if (isSetCapture) {\n                        this.target[0].releaseCapture();\n                    }\n\n                    return event;\n                }\n\n            };\n\n\n            /**\n             * 启动拖拽\n             * @param   {HTMLElement}   被拖拽的元素\n             * @param   {Event} 触发拖拽的事件对象。可选，若无则监听 elem 的按下事件启动\n             */\n            DragEvent.create = function(elem, event) {\n                var $elem = $(elem);\n                var dragEvent = new DragEvent();\n                var startType = DragEvent.types.start;\n                var noop = function() {};\n                var className = elem.className\n                    .replace(/^\\s|\\s.*/g, '') + '-drag-start';\n\n                var minX;\n                var minY;\n                var maxX;\n                var maxY;\n\n                var api = {\n                    onstart: noop,\n                    onover: noop,\n                    onend: noop,\n                    off: function() {\n                        $elem.off(startType, dragEvent.start);\n                    }\n                };\n\n\n                dragEvent.onstart = function(event) {\n                    var isFixed = $elem.css('position') === 'fixed';\n                    var dl = $doc.scrollLeft();\n                    var dt = $doc.scrollTop();\n                    var w = $elem.width();\n                    var h = $elem.height();\n\n                    minX = 0;\n                    minY = 0;\n                    maxX = isFixed ? $win.width() - w + minX : $doc.width() - w;\n                    maxY = isFixed ? $win.height() - h + minY : $doc.height() - h;\n\n                    var offset = $elem.offset();\n                    var left = this.startLeft = isFixed ? offset.left - dl : offset.left;\n                    var top = this.startTop = isFixed ? offset.top - dt : offset.top;\n\n                    this.clientX = event.clientX;\n                    this.clientY = event.clientY;\n\n                    $elem.addClass(className);\n                    api.onstart.call(elem, event, left, top);\n                };\n\n\n                dragEvent.onover = function(event) {\n                    var left = event.clientX - this.clientX + this.startLeft;\n                    var top = event.clientY - this.clientY + this.startTop;\n                    var style = $elem[0].style;\n\n                    left = Math.max(minX, Math.min(maxX, left));\n                    top = Math.max(minY, Math.min(maxY, top));\n\n                    style.left = left + 'px';\n                    style.top = top + 'px';\n\n                    api.onover.call(elem, event, left, top);\n                };\n\n\n                dragEvent.onend = function(event) {\n                    var position = $elem.position();\n                    var left = position.left;\n                    var top = position.top;\n                    $elem.removeClass(className);\n                    api.onend.call(elem, event, left, top);\n                };\n\n\n                dragEvent.off = function() {\n                    $elem.off(startType, dragEvent.start);\n                };\n\n\n                if (event) {\n                    dragEvent.start(event);\n                } else {\n                    $elem.on(startType, dragEvent.start);\n                }\n\n                return api;\n            };\n\n            fly.DragEvent = DragEvent;\n            module.exports = DragEvent;\n\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    7: [\n        function(require, module, exports) {\n            /**\n             * 格式转换\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-06-06\n             */\n\n            'use strict';\n\n            // 依赖core\n            var fly = require(\"./fly.core\");\n\n            // 类型检测\n            var objectToString = {}.toString;\n\n            // 纯数字\n            var numberRegExp = /^\\d*$/;\n\n            // 特殊字符\n            var escapeableRegExp = /[\"\\\\\\x00-\\x1f\\x7f-\\x9f]/g;\n\n            var _meta = {\n                '\\b': '\\\\b',\n                '\\t': '\\\\t',\n                '\\n': '\\\\n',\n                '\\f': '\\\\f',\n                '\\r': '\\\\r',\n                '\"': '\\\\\"',\n                '\\\\': '\\\\\\\\'\n            };\n\n            var format = {};\n\n            /**\n             * 时间格式化\n             * @param   {Object} date   Date\n             * @param   {String} format 格式化参数\n             * @returns {String} 格式化Date\n             */\n            var formatDate = function(date, format) {\n                var regExps = {\n                    'M+': date.getMonth() + 1,\n                    'd+': date.getDate(),\n                    'H+': date.getHours(),\n                    'm+': date.getMinutes(),\n                    's+': date.getSeconds(),\n                    'q+': Math.floor((date.getMonth() + 3) / 3),\n                    'S': date.getMilliseconds()\n                };\n\n                if (/(y+)/.test(format)) {\n                    format = format.replace(RegExp.$1, (date.getFullYear() + '').substr(4 -\n                        RegExp.$1.length));\n                }\n\n                for (var reg in regExps) {\n                    var regExp = new RegExp('(' + reg + ')'),\n                        temp = regExps[reg] + '',\n                        real;\n                    if (regExp.test(format)) {\n                        real = RegExp.$1.length == 1 ? temp : ('00' + temp).substr(temp.length);\n                        format = format.replace(RegExp.$1, real);\n                    }\n                }\n\n                return format;\n            };\n\n            /**\n             * 将字符串转为日期\n             * @param   {String} value   需要格式化的时间字符串 或者 Date\n             * @param   {String} formats 格式\n             * @returns {String} 格式化后的时间\n             */\n            format.parseDate = function(value, format) {\n\n                // 标准转换格式\n                var stand = 'yyyy/MM/dd HH:mm:ss',\n                    now = new Date(),\n                    idx = 0,\n                    date,\n                    length,\n                    reg;\n\n                // 匹配格式库\n                var formats = [\n                    'yyyyMMddHHmmss',\n                    'yyyyMMddHHmm',\n                    'yyyyMMdd',\n                    'yyyy-MM-dd HH:mm:ss.t',\n                    'yyyy-MM-dd HH:mm:ss',\n                    'yyyy-MM-dd HH:mm',\n                    'yyyy-MM-dd',\n                    'HHmmss',\n                    'HH:mm:ss'\n                ];\n\n                var regExps = {\n                    'y+': now.getFullYear(),\n                    'M+': now.getMonth() + 1,\n                    'd+': now.getDate(),\n                    'H+': 0,\n                    'm+': 0,\n                    's+': 0\n                };\n\n                // 如果是日期，则直接返回\n                if (objectToString.call(value) === '[object Date]') {\n                    date = value;\n                } else if (value) {\n                    for (length = formats.length; idx < length; idx++) {\n                        var newData = stand,\n                            newFormat = formats[idx];\n\n                        if (newFormat.length != value.length) {\n                            continue;\n                        }\n\n                        for (reg in regExps) {\n                            var regExp = new RegExp('(' + reg + ')'),\n                                index = newFormat.search(regExp),\n                                temp = '';\n                            if (index >= 0) {\n                                temp = value.substr(index, RegExp.$1.length);\n                                if (!numberRegExp.test(temp)) {\n                                    break;\n                                }\n                            } else {\n                                temp = regExps[reg] + '';\n                            }\n                            temp = temp.length == 1 ? '0' + temp : temp;\n                            newData = newData.replace(regExp, temp);\n                        }\n\n                        try {\n                            date = new Date(newData);\n                            if (!date.getTime()) {\n                                continue;\n                            }\n                            break;\n                        } catch (e) {\n                            continue;\n                        }\n                    }\n                }\n\n                // 如果存在格式化\n                value = !(date && date.getTime && date.getTime()) ? value : date;\n                if (format) {\n                    return formatDate(value, format);\n                } else {\n                    return value;\n                }\n            };\n\n            /**\n             * 将目标转为JSON\n             * @param   {Object} o 需要转换的目标\n             * @returns {String} JSON\n             */\n            format.toJSON = function(o) {\n                if (typeof(JSON) == 'object' && JSON.stringify) {\n                    var json = JSON.stringify(o);\n                    return json;\n                }\n                var type = typeof(o);\n\n                if (o === null)\n                    return 'null';\n\n                if (type == 'undefined')\n                    return undefined;\n\n                if (type == 'number' || type == 'boolean')\n                    return o + '';\n\n                if (type == 'string')\n                    return fly.quoteString(o);\n\n                if (type == 'object') {\n                    if (typeof o.toJSON == 'function')\n                        return fly.toJSON(o.toJSON());\n\n                    if (o.constructor === Date) {\n                        return formatDate(o, 'yyyy-MM-ddTHH:mm:ss.SZ');\n                    }\n\n                    if (o.constructor === Array) {\n                        var ret = [];\n                        for (var i = 0; i < o.length; i++)\n                            ret.push(fly.toJSON(o[i]) || '');\n\n                        return '[' + ret.join(',') + ']';\n                    }\n\n                    var pairs = [];\n                    for (var k in o) {\n                        var name;\n                        var type = typeof k;\n\n                        if (type == 'number')\n                            name = '\"' + k + '\"';\n                        else if (type == 'string')\n                            name = fly.quoteString(k);\n                        else\n                            continue; //skip non-string or number keys\n\n                        if (typeof o[k] == 'function')\n                            continue; //skip pairs where the value is a function.\n\n                        var val = fly.toJSON(o[k]);\n\n                        pairs.push(name + ':' + val);\n                    }\n\n                    return '{' + pairs.join(', ') + '}';\n                }\n            };\n\n            /**\n             * 将JSON还原\n             * @param   {String} src JSON字符串\n             * @returns {Object}   [[Description]]\n             */\n            format.evalJSON = function(src) {\n                if (!src) {\n                    return {};\n                }\n                if (typeof(JSON) == 'object' && JSON.parse) {\n                    return JSON.parse(src);\n                }\n                return eval('(' + src + ')');\n            };\n\n            /**\n             * 安全还原JSON\n             * @param   {String} src JSON字符串\n             * @returns {[[Type]]} [[Description]]\n             */\n            format.secureEvalJSON = function(src) {\n                if (typeof(JSON) == 'object' && JSON.parse) {\n                    return JSON.parse(src);\n                }\n\n                var filtered = src;\n                filtered = filtered.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@');\n                filtered = filtered.replace(\n                    /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']');\n                filtered = filtered.replace(/(?:^|:|,)(?:\\s*\\[)+/g, '');\n\n                if (/^[\\],:{}\\s]*$/.test(filtered))\n                    return eval('(' + src + ')');\n                else\n                    throw new SyntaxError('Error parsing JSON, source is not valid.');\n            };\n\n            /**\n             * 处理字符串中的引号\n             * @param   {String} string [[Description]]\n             * @returns {String} [[Description]]\n             */\n            format.quoteString = function(string) {\n                if (string.match(escapeableRegExp)) {\n                    return '\"' + string.replace(escapeableRegExp, function(a) {\n                        var c = _meta[a];\n                        if (typeof c === 'string') return c;\n                        c = a.charCodeAt();\n                        return '\\\\u00' + Math.floor(c / 16).toString(\n                            16) + (c % 16).toString(16);\n                    }) + '\"';\n                }\n                return '\"' + string + '\"';\n            };\n\n            /**\n             * 字符格式化\n             * @param   {String}   source 源字符串\n             * @param   {Array}    params 格式化数据\n             * @returns {String} 格式化后的字符串\n             */\n            format.format = function(source, params) {\n                if (arguments.length == 1)\n                    return function() {\n                        var args = $.makeArray(arguments);\n                        args.unshift(source);\n                        return format.format.apply(this, args);\n                    };\n                if (arguments.length > 2 && params.constructor != Array) {\n                    params = $.makeArray(arguments).slice(1);\n                }\n                if (params.constructor != Array) {\n                    params = [params];\n                }\n                $.each(params, function(i, n) {\n                    source = source.replace(new RegExp('\\\\{' + i + '\\\\}', 'g'), n);\n                });\n                return source;\n            };\n\n            $.extend(fly, format);\n            module.exports = format;\n\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    8: [\n        function(require, module, exports) {\n            /**\n             * 兼容IE7及以下\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-06-01 15:20\n             */\n\n            'use strict';\n\n            // 依赖core\n            var fly = require(\"./fly.core\");\n\n            var colRegExp = /^col-[a-z]{2}-/,\n                colLength = 12;\n\n            $.fn['rowie'] = function() {\n                this.each(function() {\n                    var row = $(this),\n                        sum = row.width(),\n                        col = Math.floor(sum / colLength),\n                        over = sum - col * colLength,\n                        cols = $.map(new Array(colLength), function(v, i) {\n                            return col + ((i + over < colLength) ? 0 : 1);\n                        }),\n                        colsNum = [],\n                        i = 0;\n                    row.children().each(function() {\n                        var td = $(this),\n                            cls = td.attr('class').split(' '),\n                            start = td.data('start') || i,\n                            end = td.data('end') || (parseInt($.map(cls, function(v, i) {\n                                if (colRegExp.test(v)) return v.replace(\n                                    colRegExp, '');\n                            })[0]) + start),\n                            width = 0;\n                        for (; start < end; start++) {\n                            width += cols[start];\n                        }\n                        td.width(width);\n                        i = end;\n                    });\n                });\n            };\n\n            if (fly.browser.ie < 8) {\n                fly.$doc.ready(function() {\n                    $('.row-ie').rowie();\n                });\n\n                fly.$win.resize(fly.utils.throttle(function() {\n                    $('.row-ie').rowie();\n                }, 500));\n            }\n\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    9: [\n        function(require, module, exports) {\n            'use strict';\n\n            var fly = require(\"./fly.core\"),\n                mobile = fly.mobile || {},\n                docEle = document.documentElement;\n\n            // 版本号\n            mobile.version = '1.0.0';\n\n            // 设置字体大小\n            docEle.style.fontSize = (function() {\n                var width = docEle.clientWidth;\n                if (width > 640) {\n                    width = 640;\n                }\n                return (width / 16) + 'px';\n            })();\n\n            fly.mobile = mobile;\n            module.exports = mobile;\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    10: [\n        function(require, module, exports) {\n            /**\n             * 移动平台统一接口\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-11-01\n             */\n\n            'use strict';\n\n            var fly = require(\"./fly.core\"),\n                utils = require(\"./fly.utils\"),\n                noop = function() {};\n\n            var os = (function() {\n                var agent = navigator.userAgent,\n                    os = 'android';\n                if (agent.indexOf('iPhone') != -1 || agent.indexOf('iPad') != -1) {\n                    os = 'ios';\n                }\n                return os;\n            })();\n\n            var sendRequest = {\n                android: function(action, callback, args) {\n                    action = typeof action === 'string' ? action.split('.') : action;\n                    callback && action.push(callback);\n                    return prompt('iflytek:' + JSON.stringify(action), JSON.stringify(args));\n                },\n                ios: function(action, callback, args) {\n                    var iframe = document.createElement('iframe');\n                    action = typeof action === 'string' ? action.split('.') : action;\n                    callback && action.push(callback);\n                    args && action.push(args);\n                    iframe.setAttribute('src', 'iflytek:' + '?' + JSON.stringify(action));\n                    iframe.setAttribute('style', 'display:none;');\n                    iframe.setAttribute('height', '0');\n                    iframe.setAttribute('width', '0');\n                    iframe.setAttribute('frameborder', '0');\n                    document.body.appendChild(iframe);\n                    iframe.parentNode.removeChild(iframe);\n                    iframe = null;\n                }\n            };\n\n            var request = function(options) {\n                var o = {},\n                    options = options || {},\n                    async = options.async !== false ? true : false,\n                    action = options.action.split('.'),\n                    callback = options.callback || (fly.NS + utils.now()),\n                    args = options.args || [''],\n                    timeout = 50000;\n\n                o.done = function(callback) {\n                    this._done = callback || noop;\n                    return this;\n                };\n\n                o.fail = function(callback) {\n                    this._fail = callback || noop;\n                    return this;\n                };\n\n                window[callback] = function(result) {\n                    result = typeof result == 'string' ? (/^({|\\[)/.test(result) ? eval('(' +\n                        result + ')') : {\n                        code: 'OK',\n                        message: result\n                    }) : result;\n                    if (result.code == 'OK') {\n                        o._done && o._done(result.message);\n                    } else {\n                        o._fail && o._fail(result.message);\n                    }\n                    window[callback] = null;\n                };\n\n                if (os == 'android' && !async) {\n                    window[callback](result);\n                }\n\n                sendRequest[os](action, callback, args);\n\n                return o;\n            };\n\n            fly.request = request;\n            module.exports = fly;\n\n        }, {\n            \"./fly.core\": 4,\n            \"./fly.utils\": 16\n        }\n    ],\n    11: [\n        function(require, module, exports) {\n            /**\n             * 数据模型\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-09-06\n             */\n\n            'use strict';\n\n            // 依赖\n            var fly = require('./fly.core'),\n                ob = require('./fly.observable'),\n                format = require('./fly.format'),\n                ObservableObject = fly.ObservableObject,\n                $ = fly.$,\n                extend = $.extend,\n                isArray = $.isArray,\n                isEmptyObject = $.isEmptyObject,\n                isPlainObject = $.isPlainObject;\n\n            // 静态变量\n            var STRING = 'string';\n\n            function getFieldByName(obj, name) {\n                var field,\n                    fieldName;\n\n                for (fieldName in obj) {\n                    field = obj[fieldName];\n                    if (isPlainObject(field) && field.field && field.field === name) {\n                        return field;\n                    } else if (field === name) {\n                        return field;\n                    }\n                }\n                return null;\n            }\n\n            function equal(x, y) {\n                if (x === y) {\n                    return true;\n                }\n\n                var xtype = $.type(x),\n                    ytype = $.type(y),\n                    field;\n\n                if (xtype !== ytype) {\n                    return false;\n                }\n\n                if (xtype === \"date\") {\n                    return x.getTime() === y.getTime();\n                }\n\n                if (xtype !== \"object\" && xtype !== \"array\") {\n                    return false;\n                }\n\n                for (field in x) {\n                    if (!equal(x[field], y[field])) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            var parsers = {\n\n                \"number\": function(value) {\n                    return parseFloat(value);\n                },\n\n                \"date\": function(value) {\n                    return format.parseDate(value);\n                },\n\n                \"boolean\": function(value) {\n                    if (typeof value === STRING) {\n                        return value.toLowerCase() === \"true\";\n                    }\n                    return value != null ? !!value : value;\n                },\n\n                \"string\": function(value) {\n                    return value != null ? (value + \"\") : value;\n                },\n\n                \"default\": function(value) {\n                    return value;\n                }\n            };\n\n            var defaultValues = {\n                \"string\": \"\",\n                \"number\": 0,\n                \"date\": new Date(),\n                \"boolean\": false,\n                \"default\": \"\"\n            };\n\n            var Model = ObservableObject.extend({\n\n                ctor: function(data) {\n                    var that = this,\n                        initializers = that._initializers;\n\n                    if (!data || isEmptyObject(data)) {\n                        data = extend({}, that.defaults, data);\n\n                        if (initializers) {\n                            for (var idx = 0; idx < initializers.length; idx++) {\n                                var name = initializers[idx];\n                                data[name] = that.defaults[name]();\n                            }\n                        }\n                    }\n\n                    that._super(data);\n\n                    that.dirty = false;\n\n                    if (that.idField) {\n                        that.id = that.get(that.idField);\n\n                        if (that.id === undefined) {\n                            that.id = that._defaultId;\n                        }\n                    }\n                },\n\n                shouldSerialize: function(field) {\n                    return this._super.shouldSerialize(field) &&\n                        field !== \"uid\" &&\n                        !(this.idField !== \"id\" && field === \"id\") &&\n                        field !== \"dirty\" &&\n                        field !== \"_accessors\";\n                },\n\n                _parse: function(field, value) {\n                    var that = this,\n                        fieldName = field,\n                        fields = (that.fields || {}),\n                        parse;\n\n                    field = fields[field];\n                    if (!field) {\n                        field = getFieldByName(fields, fieldName);\n                    }\n                    if (field) {\n                        parse = field.parse;\n                        if (!parse && field.type) {\n                            parse = parsers[field.type.toLowerCase()];\n                        }\n                    }\n\n                    return parse ? parse(value) : value;\n                },\n\n                _notifyChange: function(e) {\n                    var action = e.action;\n\n                    if (action == 'add' || action == 'remove') {\n                        this.dirty = true;\n                    }\n                },\n\n                editable: function(field) {\n                    field = (this.fields || {})[field];\n                    return field ? field.editable !== false : true;\n                },\n\n                set: function(field, value, initiator) {\n                    var that = this;\n\n                    if (that.editable(field)) {\n                        value = that._parse(field, value);\n\n                        if (!equal(value, that.get(field))) {\n                            that.dirty = true;\n                            ObservableObject.fn.set.call(this, field, value, initiator);\n                        }\n                    }\n                },\n\n                accept: function(data) {\n                    var that = this,\n                        parent = function() {\n                            return that;\n                        },\n                        field;\n\n                    for (field in data) {\n                        var value = data[field];\n\n                        if (field.charAt(0) != \"_\") {\n                            value = that.wrap(data[field], field, parent);\n                        }\n\n                        that._set(field, value);\n                    }\n\n                    if (that.idField) {\n                        that.id = that.get(that.idField);\n                    }\n\n                    that.dirty = false;\n                },\n\n                isNew: function() {\n                    return this.id === this._defaultId;\n                }\n            });\n\n            Model.define = function(base, options) {\n                if (options === undefined) {\n                    options = base;\n                    base = Model;\n                }\n\n                var model,\n                    proto = extend({\n                        defaults: {}\n                    }, options),\n                    name,\n                    field,\n                    type,\n                    value,\n                    idx,\n                    length,\n                    fields = {},\n                    originalName,\n                    id = proto.id,\n                    functionFields = [];\n\n                if (id) {\n                    proto.idField = id;\n                }\n\n                if (proto.id) {\n                    delete proto.id;\n                }\n\n                if (id) {\n                    proto.defaults[id] = proto._defaultId = \"\";\n                }\n\n                if (isArray(proto.fields)) {\n                    for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                        field = proto.fields[idx];\n                        if (typeof field === STRING) {\n                            fields[field] = {};\n                        } else if (field.field) {\n                            fields[field.field] = field;\n                        }\n                    }\n                    proto.fields = fields;\n                }\n\n                for (name in proto.fields) {\n                    field = proto.fields[name];\n                    type = field.type || \"default\";\n                    value = null;\n                    originalName = name;\n\n                    name = typeof(field.field) === STRING ? field.field : name;\n\n                    if (!field.nullable) {\n                        value = proto.defaults[originalName !== name ? originalName : name] =\n                            field.defaultValue !==\n                            undefined ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                        if (typeof value === \"function\") {\n                            functionFields.push(name);\n                        }\n                    }\n\n                    if (options.id === name) {\n                        proto._defaultId = value;\n                    }\n\n                    proto.defaults[originalName !== name ? originalName : name] = value;\n\n                    field.parse = field.parse || parsers[type];\n                }\n\n                if (functionFields.length > 0) {\n                    proto._initializers = functionFields;\n                }\n\n                model = base.extend(proto);\n                model.define = function(options) {\n                    return Model.define(model, options);\n                };\n\n                if (proto.fields) {\n                    model.fields = proto.fields;\n                    model.idField = proto.idField;\n                }\n\n                return model;\n            };\n\n            fly.Model = Model;\n            module.exports = Model;\n\n        }, {\n            \"./fly.core\": 4,\n            \"./fly.format\": 7,\n            \"./fly.observable\": 12\n        }\n    ],\n    12: [\n        function(require, module, exports) {\n            /**\n             * 观察者对象\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-09-06\n             */\n\n            'use strict';\n\n            // 依赖\n            var fly = require('./fly.core'),\n                Class = require('./fly.class'),\n                $ = fly.$,\n                proxy = $.proxy,\n                noop = $.noop;\n\n            // 数据对象\n            var data = {};\n\n            // 缓存get/set\n            var getterCache = {},\n                setterCache = {};\n\n            // 将类数组的对象转化为数组\n            var slice = [].slice;\n\n            // 强制转化为字符串\n            var objectToString = {}.toString;\n\n            // 静态变量\n            var FUNCTION = 'function',\n                STRING = 'string',\n                CHANGE = 'change',\n                GET = \"get\",\n                OBJ = '[object Object]',\n                ARR = '[object Array]';\n\n            /**\n             * 构建表达式\n             * @param   {String}  [expression=''] 原始表达式\n             * @param   {Boolean} safe            是否安全构建\n             * @param   {String}  paramName       参数名\n             * @returns {String}  [[Description]]\n             */\n            fly.expr = function(expression, safe, paramName) {\n                expression = expression || '';\n\n                if (typeof safe == STRING) {\n                    paramName = safe;\n                    safe = false;\n                }\n\n                paramName = paramName || 'd';\n\n                if (expression && expression.charAt(0) !== '[') {\n                    expression = '.' + expression;\n                }\n\n                if (safe) {\n                    expression = expression.replace(/\"([^.]*)\\.([^\"]*)\"/g,\n                        '\"$1_$DOT$_$2\"');\n                    expression = expression.replace(/'([^.]*)\\.([^']*)'/g,\n                        \"'$1_$DOT$_$2'\");\n                    expression = wrapExpression(expression.split('.'), paramName);\n                    expression = expression.replace(/_\\$DOT\\$_/g, '.');\n                } else {\n                    expression = paramName + expression;\n                }\n\n                return expression;\n            }\n\n            /**\n             * 取值\n             * @param   {String}   expression 表达式\n             * @param   {String}   safe       key\n             * @returns {Function} 解析表达式的函数\n             */\n            fly.getter = function(expression, safe) {\n                var key = expression + safe;\n                return getterCache[key] = getterCache[key] || new Function('d',\n                    'return ' + fly.expr(expression, safe));\n            }\n\n            /**\n             * 赋值\n             * @param   {String}   expression 表达式\n             * @returns {Function} 解析表达式的函数\n             */\n            fly.setter = function(expression) {\n                return setterCache[expression] = setterCache[expression] || new Function(\n                    'd, value', fly.expr(expression) + '=value');\n            }\n\n            /**\n             * 阻止默认动作\n             * @param {Object} e 事件对象\n             */\n            fly.preventDefault = function(e) {\n                e.preventDefault();\n            }\n\n            /**\n             * 包裹表达式\n             * @param   {Array}  members   成员 ['a', 'b'] ==> ((d.a || {}).b)\n             * @param   {String} paramName 参数名\n             * @returns {String} 拼装好的表达式\n             */\n            function wrapExpression(members, paramName) {\n                var result = paramName || 'd',\n                    index,\n                    idx,\n                    length,\n                    member,\n                    count = 1;\n\n                for (idx = 0, length = members.length; idx < length; idx++) {\n                    member = members[idx];\n                    if (member !== '') {\n                        index = member.indexOf('[');\n\n                        if (index !== 0) {\n                            if (index == -1) {\n                                member = '.' + member;\n                            } else {\n                                count++;\n                                member = '.' + member.substring(0, index) + ' || {})' +\n                                    member.substring(index);\n                            }\n                        }\n\n                        count++;\n                        result += member + ((idx < length - 1) ? ' || {})' : ')');\n                    }\n                }\n                return new Array(count).join('(') + result;\n            };\n\n            /**\n             * 事件处理器\n             * @param   {Object}   context 事件上下文\n             * @param   {String}   type    事件名称\n             * @param   {String}   field   字段名\n             * @param   {Boolean}  prefix  是否需要预处理\n             * @returns {Function} [[Description]]\n             */\n            function eventHandler(context, type, field, prefix) {\n                return function(e) {\n                    var event = {},\n                        key;\n\n                    for (key in e) {\n                        event[key] = e[key];\n                    }\n\n                    if (prefix) {\n                        event.field = field + '.' + e.field;\n                    } else {\n                        event.field = field;\n                    }\n\n                    if (type == CHANGE && context._notifyChange) {\n                        context._notifyChange(event);\n                    }\n\n                    context.trigger(type, event);\n                };\n            }\n\n            // 观察者\n            var Observable = Class.extend({\n\n                ctor: function() {\n                    this._events = {};\n                },\n\n                /**\n                 * 注册监听事件\n                 * @param  {String}   eventName 事件名称，可以是字符串或数组\n                 * @param  {Function} handlers  事件，可以是函数或函数map\n                 * @param  {Boolean}  one       是否只执行一次\n                 * @return {Object}   观察者对象\n                 */\n                bind: function(eventName, handlers, one) {\n                    var that = this,\n                        idx = 0,\n                        idt,\n                        events,\n                        original,\n                        handler,\n                        handlersIsFunction = typeof handlers === FUNCTION,\n                        eventNames = typeof eventName === STRING ? [\n                            eventName\n                        ] :\n                        eventName,\n                        length = eventNames.length;\n\n                    if (handlers === undefined) {\n                        for (idt in eventName) {\n                            that.bind(idt, eventName[idt]);\n                        }\n                        return that;\n                    }\n\n                    for (; idx < length; idx++) {\n                        eventName = eventNames[idx];\n\n                        handler = handlersIsFunction ? handlers : handlers[\n                            eventName];\n\n                        if (handler) {\n                            if (one) {\n                                original = handler;\n                                handler = function() {\n                                    that.unbind(eventName, handler);\n                                    original.apply(that, arguments);\n                                };\n                                handler.original = original;\n                            }\n                            events = that._events[eventName] = that._events[\n                                eventName] || [];\n                            events.push(handler);\n                        }\n                    }\n\n                    return that;\n                },\n\n                /**\n                 * 只执行一次的事件\n                 * @param  {String}   eventName 事件名称，可以是字符串或数组\n                 * @param  {Function} handlers  事件，可以是函数或函数map\n                 * @return {Object}   观察者对象\n                 */\n                one: function(eventNames, handlers) {\n                    return this.bind(eventNames, handlers, true);\n                },\n\n                /**\n                 * 将事件注册到最前\n                 * @param  {String}   eventName 事件名称，可以是字符串或数组\n                 * @param  {Function} handlers  事件，可以是函数或函数map\n                 * @return {Object}   观察者对象\n                 */\n                first: function(eventName, handlers) {\n                    var that = this,\n                        idx = 0,\n                        events,\n                        handler,\n                        handlersIsFunction = typeof handlers === FUNCTION,\n                        eventNames = typeof eventName === STRING ? [\n                            eventName\n                        ] :\n                        eventName,\n                        length = eventNames.length;\n\n                    for (; idx < length; idx++) {\n                        eventName = eventNames[idx];\n\n                        handler = handlersIsFunction ? handlers : handlers[\n                            eventName];\n\n                        if (handler) {\n                            events = that._events[eventName] = that._events[\n                                eventName] || [];\n                            events.unshift(handler);\n                        }\n                    }\n\n                    return that;\n                },\n\n                /**\n                 * 触发事件\n                 * @param  {String}  eventName 事件名称\n                 * @param  {Event}   e         Event对象\n                 * @return {Boolean}\n                 */\n                trigger: function(eventName, e) {\n                    var that = this,\n                        events = that._events[eventName],\n                        idx,\n                        length;\n\n                    if (events) {\n                        e = e || {};\n                        e.sender = that;\n                        e._defaultPrevented = false;\n                        e.preventDefault = function() {\n                            this._defaultPrevented = true;\n                        };\n                        e.isDefaultPrevented = function() {\n                            return this._defaultPrevented === true;\n                        };\n                        events = events.slice();\n\n                        for (idx = 0, length = events.length; idx < length; idx++) {\n                            events[idx].call(that, e);\n                        }\n\n                        return e._defaultPrevented === true;\n                    }\n\n                    return false;\n                },\n\n                /**\n                 * 注销事件\n                 * @param  {String}   eventName 事件名称\n                 * @param  {Function} handler   事件 同一个事件名称可能有好几个事件，\n                 *                              这里可以只注销其中一个\n                 * @return {Object}   观察者对象\n                 */\n                unbind: function(eventName, handler) {\n                    var that = this,\n                        events = that._events[eventName],\n                        idx;\n\n                    if (eventName === undefined) {\n                        that._events = {};\n                    } else if (events) {\n                        if (handler) {\n                            for (idx = events.length - 1; idx >= 0; idx--) {\n                                if (events[idx] === handler || events[idx].original ===\n                                    handler) {\n                                    events.splice(idx, 1);\n                                }\n                            }\n                        } else {\n                            that._events[eventName] = [];\n                        }\n                    }\n\n                    return that;\n                }\n            });\n\n            /** 对象监听模型 */\n            var ObservableObject = Observable.extend({\n\n                ctor: function(value) {\n                    var that = this,\n                        member,\n                        field,\n                        parent = function() {\n                            return that;\n                        };\n\n                    if (value === undefined) return;\n\n                    that._super();\n\n                    for (field in value) {\n                        member = value[field];\n\n                        if (typeof member === \"object\" && member && !member.getTime &&\n                            field.charAt(0) != \"_\") {\n                            member = that.wrap(member, field, parent);\n                        }\n\n                        that[field] = member;\n                    }\n\n                    that.uid = fly.guid();\n                },\n\n                /**\n                 * 是否需要序列化\n                 * @param   {String}  field 字段名\n                 * @returns {Boolean}\n                 */\n                shouldSerialize: function(field) {\n                    return this.hasOwnProperty(field) && field !== \"_events\" &&\n                        field !== \"_super\" && typeof this[field] !== FUNCTION &&\n                        field !== \"uid\";\n                },\n\n                /**\n                 * 遍历自身\n                 * @param {Function} f [[Description]]\n                 */\n                forEach: function(f) {\n                    for (var i in this) {\n                        if (this.shouldSerialize(i)) {\n                            f(this[i], i);\n                        }\n                    }\n                },\n\n                toJSON: function() {\n                    var result = {},\n                        value, field;\n\n                    for (field in this) {\n                        if (this.shouldSerialize(field)) {\n                            value = this[field];\n\n                            if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                                value = value.toJSON();\n                            }\n\n                            result[field] = value;\n                        }\n                    }\n\n                    return result;\n                },\n\n                /*toFilter: function() {\n        var filter = [],\n            value, field;\n\n        for (field in this) {\n            if (this.shouldSerialize(field)) {\n                value = this[field];\n\n                if ((typeof value == 'number' ? true : value) && !(value instanceof ObservableObject ||\n                        value instanceof ObservableArray)) {\n                    filter.push({\n                        field: field,\n                        value: value\n                    });\n                }\n            }\n        }\n\n        return filter;\n    },*/\n\n                get: function(field) {\n                    var that = this,\n                        result;\n\n                    that.trigger(GET, {\n                        field: field\n                    });\n\n                    if (field === \"this\") {\n                        result = that;\n                    } else {\n                        result = fly.getter(field, true)(that);\n                    }\n\n                    return result;\n                },\n\n                _set: function(field, value) {\n                    var that = this;\n                    var composite = field.indexOf(\".\") >= 0;\n\n                    if (composite) {\n                        var paths = field.split(\".\"),\n                            path = \"\";\n\n                        while (paths.length > 1) {\n                            path += paths.shift();\n                            var obj = fly.getter(path, true)(that);\n                            if (obj instanceof ObservableObject) {\n                                obj.set(paths.join(\".\"), value);\n                                return composite;\n                            }\n                            path += \".\";\n                        }\n                    }\n\n                    fly.setter(field)(that, value);\n\n                    return composite;\n                },\n\n                set: function(field, value) {\n                    var that = this,\n                        composite = field.indexOf(\".\") >= 0,\n                        current = fly.getter(field, true)(that);\n\n                    if (current !== value) {\n\n                        if (!that.trigger(\"set\", {\n                            field: field,\n                            value: value\n                        })) {\n                            if (!composite) {\n                                value = that.wrap(value, field, function() {\n                                    return that;\n                                });\n                            }\n                            if (!that._set(field, value) || field.indexOf(\"(\") >=\n                                0 || field.indexOf(\"[\") >= 0) {\n                                that.trigger(CHANGE, {\n                                    field: field\n                                });\n                            }\n                        }\n                    }\n                },\n\n                parent: noop,\n\n                wrap: function(object, field, parent) {\n                    var that = this,\n                        type = objectToString.call(object);\n\n                    if (object != null && (type === OBJ || type === ARR)) {\n                        var isObservableArray = object instanceof ObservableArray;\n                        var isDataSource = object instanceof fly.data.DataSource;\n\n                        if (type === OBJ && !isDataSource && !\n                            isObservableArray) {\n\n                            if (!(object instanceof ObservableObject)) {\n                                object = new ObservableObject(object);\n                            }\n\n                            if (object.parent() != parent()) {\n                                object.bind(GET, eventHandler(that, GET, field,\n                                    true));\n                                object.bind(CHANGE, eventHandler(that, CHANGE,\n                                    field, true));\n                            }\n                        } else if (type === ARR || isObservableArray ||\n                            isDataSource) {\n                            if (!isObservableArray && !isDataSource) {\n                                object = new ObservableArray(object);\n                            }\n\n                            if (object.parent() != parent()) {\n                                object.bind(CHANGE, eventHandler(that, CHANGE,\n                                    field, false));\n                            }\n                        }\n\n                        object.parent = parent;\n                    }\n\n                    return object;\n                }\n            });\n\n            var ObservableArray = Observable.extend({\n\n                ctor: function(array, type) {\n                    var that = this;\n                    if (!array) return;\n                    that.type = type || ObservableObject;\n                    that._super();\n                    that.length = array.length;\n                    that.wrapAll(array, that);\n                },\n\n                at: function(index) {\n                    return this[index];\n                },\n\n                toJSON: function() {\n                    var idx, length = this.length,\n                        value, json = new Array(length);\n\n                    for (idx = 0; idx < length; idx++) {\n                        value = this[idx];\n\n                        if (value instanceof ObservableObject) {\n                            value = value.toJSON();\n                        }\n\n                        json[idx] = value;\n                    }\n\n                    return json;\n                },\n\n                parent: noop,\n\n                wrapAll: function(source, target) {\n                    var that = this,\n                        idx,\n                        length,\n                        parent = function() {\n                            return that;\n                        };\n\n                    target = target || [];\n\n                    for (idx = 0, length = source.length; idx < length; idx++) {\n                        target[idx] = that.wrap(source[idx], parent);\n                    }\n\n                    return target;\n                },\n\n                wrap: function(object, parent) {\n                    var that = this,\n                        observable;\n\n                    if (object !== null && objectToString.call(object) === OBJ) {\n                        observable = object instanceof that.type || object instanceof fly\n                            .Model;\n\n                        if (!observable) {\n                            object = object instanceof ObservableObject ?\n                                object.toJSON() : object;\n                            object = new that.type(object);\n                        }\n\n                        object.parent = parent;\n\n                        object.bind(CHANGE, function(e) {\n                            that.trigger(CHANGE, {\n                                field: e.field,\n                                node: e.node,\n                                index: e.index,\n                                items: e.items || [this],\n                                action: e.node ? (e.action ||\n                                    \"itemloaded\") : \"itemchange\"\n                            });\n                        });\n                    }\n\n                    return object;\n                },\n\n                push: function() {\n                    var index = this.length,\n                        items = this.wrapAll(arguments),\n                        result;\n\n                    result = [].push.apply(this, items);\n\n                    this.trigger(CHANGE, {\n                        action: 'add',\n                        index: index,\n                        items: items\n                    });\n\n                    return result;\n                },\n\n                slice: slice,\n\n                sort: [].sort,\n\n                join: [].join,\n\n                pop: function() {\n                    var length = this.length,\n                        result = pop.apply(this);\n\n                    if (length) {\n                        this.trigger(CHANGE, {\n                            action: \"remove\",\n                            index: length - 1,\n                            items: [result]\n                        });\n                    }\n\n                    return result;\n                },\n\n                splice: function(index, howMany, item) {\n                    var items = this.wrapAll(slice.call(arguments, 2)),\n                        result, i, len;\n\n                    result = [].splice.apply(this, [index, howMany].concat(\n                        items));\n\n                    if (result.length) {\n                        this.trigger(CHANGE, {\n                            action: \"remove\",\n                            index: index,\n                            items: result\n                        });\n\n                        for (i = 0, len = result.length; i < len; i++) {\n                            if (result[i] && result[i].children) {\n                                result[i].unbind(CHANGE);\n                            }\n                        }\n                    }\n\n                    if (item) {\n                        this.trigger(CHANGE, {\n                            action: \"add\",\n                            index: index,\n                            items: items\n                        });\n                    }\n                    return result;\n                },\n\n                shift: function() {\n                    var length = this.length,\n                        result = [].shift.apply(this);\n\n                    if (length) {\n                        this.trigger(CHANGE, {\n                            action: \"remove\",\n                            index: 0,\n                            items: [result]\n                        });\n                    }\n\n                    return result;\n                },\n\n                unshift: function() {\n                    var items = this.wrapAll(arguments),\n                        result;\n\n                    result = [].unshift.apply(this, items);\n\n                    this.trigger(CHANGE, {\n                        action: \"add\",\n                        index: 0,\n                        items: items\n                    });\n\n                    return result;\n                },\n\n                indexOf: function(item) {\n                    var that = this,\n                        idx,\n                        length;\n\n                    for (idx = 0, length = that.length; idx < length; idx++) {\n                        if (that[idx] === item) {\n                            return idx;\n                        }\n                    }\n                    return -1;\n                },\n\n                forEach: function(callback) {\n                    var idx = 0,\n                        length = this.length;\n\n                    for (; idx < length; idx++) {\n                        callback(this[idx], idx, this);\n                    }\n                },\n\n                map: function(callback) {\n                    var idx = 0,\n                        result = [],\n                        length = this.length;\n\n                    for (; idx < length; idx++) {\n                        result[idx] = callback(this[idx], idx, this);\n                    }\n\n                    return result;\n                },\n\n                filter: function(callback) {\n                    var idx = 0,\n                        result = [],\n                        item,\n                        length = this.length;\n\n                    for (; idx < length; idx++) {\n                        item = this[idx];\n                        if (callback(item, idx, this)) {\n                            result[result.length] = item;\n                        }\n                    }\n\n                    return result;\n                },\n\n                find: function(callback) {\n                    var idx = 0,\n                        item,\n                        length = this.length;\n\n                    for (; idx < length; idx++) {\n                        item = this[idx];\n                        if (callback(item, idx, this)) {\n                            return item;\n                        }\n                    }\n                },\n\n                every: function(callback) {\n                    var idx = 0,\n                        item,\n                        length = this.length;\n\n                    for (; idx < length; idx++) {\n                        item = this[idx];\n                        if (!callback(item, idx, this)) {\n                            return false;\n                        }\n                    }\n\n                    return true;\n                },\n\n                some: function(callback) {\n                    var idx = 0,\n                        item,\n                        length = this.length;\n\n                    for (; idx < length; idx++) {\n                        item = this[idx];\n                        if (callback(item, idx, this)) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                },\n\n                /**\n                 * 删除\n                 * @param {Any} item 需要删除的项\n                 */\n                remove: function(item) {\n                    var idx = this.indexOf(item);\n\n                    if (idx !== -1) {\n                        this.splice(idx, 1);\n                    }\n                },\n\n                /**\n                 * 置空\n                 */\n                empty: function() {\n                    this.splice(0, this.length);\n                }\n\n            });\n\n            var LazyObservableArray = ObservableArray.extend({\n                ctor: function(data, type) {\n                    this._super();\n\n                    this.type = type || ObservableObject;\n\n                    for (var idx = 0; idx < data.length; idx++) {\n                        this[idx] = data[idx];\n                    }\n\n                    this.length = idx;\n                    this._parent = proxy(function() {\n                        return this;\n                    }, this);\n                },\n                at: function(index) {\n                    var item = this[index];\n\n                    if (!(item instanceof this.type)) {\n                        item = this[index] = this.wrap(item, this._parent);\n                    } else {\n                        item.parent = this._parent;\n                    }\n\n                    return item;\n                }\n            });\n\n            fly.Observable = Observable;\n            fly.ObservableObject = ObservableObject;\n            fly.ObservableArray = ObservableArray;\n            fly.LazyObservableArray = LazyObservableArray;\n\n\n            /**\n             * 隐式实例化VM\n             * @param   {Object} object\n             * @returns {Object} viewmodel\n             */\n            fly.observable = function(object) {\n                if (!(object instanceof ObservableObject)) {\n                    object = new ObservableObject(object);\n                }\n                return object;\n            };\n\n            module.exports = Observable;\n\n        }, {\n            \"./fly.class\": 3,\n            \"./fly.core\": 4\n        }\n    ],\n    13: [\n        function(require, module, exports) {\n            /**\n             * 路由 暂未实现\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update:\n             */\n\n            module.exports = null;\n        }, {}\n    ],\n    14: [\n        function(require, module, exports) {\n            /**\n             * 模板引擎\n             * 来自artTemplate3.0.0\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-07-01\n             */\n\n            'use strict';\n\n            // core\n            var fly = require('./fly.core');\n\n            var escapeMap = {\n                '<': '&#60;',\n                '>': '&#62;',\n                '\"': '&#34;',\n                \"'\": '&#39;',\n                '&': '&#38;'\n            };\n\n            // 静态分析模板变量\n            var KEYWORDS =\n                // 关键字\n                'break,case,catch,continue,debugger,default,delete,do,else,false' +\n                ',finally,for,function,if,in,instanceof,new,null,return,switch,this' +\n                ',throw,true,try,typeof,var,void,while,with'\n\n            // 保留字\n            +',abstract,boolean,byte,char,class,const,double,enum,export,extends' +\n                ',final,float,goto,implements,import,int,interface,long,native' +\n                ',package,private,protected,public,short,static,super,synchronized' +\n                ',throws,transient,volatile'\n\n            // ECMA 5 - use strict\n            + ',arguments,let,yield'\n\n            + ',undefined';\n\n            var REMOVE_RE =\n                /\\/\\*[\\w\\W]*?\\*\\/|\\/\\/[^\\n]*\\n|\\/\\/[^\\n]*$|\"(?:[^\"\\\\]|\\\\[\\w\\W])*\"|'(?:[^'\\\\]|\\\\[\\w\\W])*'|\\s*\\.\\s*[$\\w\\.]+/g;\n            var SPLIT_RE = /[^\\w$]+/g;\n            var KEYWORDS_RE = new RegExp([\"\\\\b\" + KEYWORDS.replace(/,/g, '\\\\b|\\\\b') + \"\\\\b\"]\n                .join('|'), 'g');\n            var NUMBER_RE = /^\\d[^,]*|,\\d[^,]*/g;\n            var BOUNDARY_RE = /^,+|,+$/g;\n            var SPLIT2_RE = /^$|,+/;\n\n            var toString = function(value, type) {\n\n                if (typeof value !== 'string') {\n                    type = typeof value;\n                    if (type === 'number') {\n                        value += '';\n                    } else if (type === 'function') {\n                        value = toString(value.call(value));\n                    } else {\n                        value = '';\n                    }\n                }\n\n                return value;\n\n            };\n\n            var escapeFn = function(s) {\n                return escapeMap[s];\n            };\n\n            var escapeHTML = function(content) {\n                return toString(content)\n                    .replace(/&(?![\\w#]+;)|[<>\"']/g, escapeFn);\n            };\n\n            var isArray = Array.isArray || function(obj) {\n                return ({}).toString.call(obj) === '[object Array]';\n            };\n\n            var each = function(data, callback) {\n                var i, len;\n                if (isArray(data)) {\n                    for (i = 0, len = data.length; i < len; i++) {\n                        callback.call(data, data[i], i, data);\n                    }\n                } else {\n                    for (i in data) {\n                        callback.call(data, data[i], i);\n                    }\n                }\n            };\n\n\n            /**\n             * 模板\n             * @param   {String} filename 模板名\n             * @param   {Object, String} content  数据 如果为字符串则编译并缓存编译结果\n             * @returns {String, Function} 渲染好的HTML字符串或者渲染方法\n             */\n            var template = function(filename, content) {\n                return filename.indexOf('<') != -1 ? compile(filename) : (typeof content ===\n                    'string' ?\n                    compile(content, {\n                        filename: filename\n                    }) : renderFile(filename, content));\n            };\n\n            /**\n             * 设置全局配置\n             * @param {String} name  名称\n             * @param {Any}    value 值\n             */\n            template.config = function(name, value) {\n                defaults[name] = value;\n            };\n\n            // 默认设置\n            var defaults = template.defaults = {\n                openTag: '<%', // 逻辑语法开始标签\n                closeTag: '%>', // 逻辑语法结束标签\n                escape: true, // 是否编码输出变量的 HTML 字符\n                cache: true, // 是否开启缓存（依赖 options 的 filename 字段）\n                compress: false, // 是否压缩输出\n                parser: null // 自定义语法格式器 @see: template-syntax.js\n            };\n\n            // 缓存\n            var cacheStore = template.cache = {};\n\n            /**\n             * 渲染模板\n             * @name    template.render\n             * @param   {String}    模板\n             * @param   {Object}    数据\n             * @return  {String}    渲染好的字符串\n             */\n            template.render = function(source, options) {\n                return compile(source, options);\n            };\n\n            /**\n             * 渲染模板(根据模板名)\n             * @name    template.render\n             * @param   {String}    模板名\n             * @param   {Object}    数据\n             * @return  {String}    渲染好的字符串\n             */\n            var renderFile = template.renderFile = function(filename, data) {\n                var fn = template.get(filename) || showDebugInfo({\n                    filename: filename,\n                    name: 'Render Error',\n                    message: 'Template not found'\n                });\n                return data ? fn(data) : fn;\n            };\n\n            /**\n             * 获取编译缓存（可由外部重写此方法）\n             * @param   {String}    模板名\n             * @param   {Function}  编译好的函数\n             */\n            template.get = function(filename) {\n\n                var cache;\n\n                if (cacheStore[filename]) {\n                    // 使用内存缓存\n                    cache = cacheStore[filename];\n                } else if (typeof document === 'object') {\n                    // 加载模板并编译\n                    var elem = document.getElementById(filename);\n\n                    if (elem) {\n                        var source = (elem.value || elem.innerHTML)\n                            .replace(/^\\s*|\\s*$/g, '');\n                        cache = compile(source, {\n                            filename: filename\n                        });\n                    }\n                }\n\n                return cache;\n            };\n\n            var utils = template.utils = {\n\n                $helpers: {},\n\n                $include: renderFile,\n\n                $string: toString,\n\n                $escape: escapeHTML,\n\n                $each: each\n\n            };\n\n            /**\n             * 添加模板辅助方法\n             * @name    template.helper\n             * @param   {String}    名称\n             * @param   {Function}  方法\n             */\n            template.helper = function(name, helper) {\n                helpers[name] = helper;\n            };\n\n            var helpers = template.helpers = utils.$helpers;\n\n            /**\n             * 模板错误事件（可由外部重写此方法）\n             * @name    template.onerror\n             * @event\n             */\n            template.onerror = function(e) {\n                var message = 'Template Error\\n\\n';\n                for (var name in e) {\n                    message += '<' + name + '>\\n' + e[name] + '\\n\\n';\n                }\n\n                if (typeof console === 'object') {\n                    console.error(message);\n                }\n            };\n\n\n            /**\n             * 模板调试器\n             * @param   {Object} e event\n             * @returns {String}   调试函数\n             */\n            var showDebugInfo = function(e) {\n\n                template.onerror(e);\n\n                return function() {\n                    return '{Template Error}';\n                };\n            };\n\n            /**\n             * 编译模板\n             * @param   {String}    模板字符串\n             * @param   {Object}    编译选项\n             *\n             *      - openTag       {String}\n             *      - closeTag      {String}\n             *      - filename      {String}\n             *      - escape        {Boolean}\n             *      - compress      {Boolean}\n             *      - debug         {Boolean}\n             *      - cache         {Boolean}\n             *      - parser        {Function}\n             *\n             * @return  {Function}  渲染方法\n             */\n            var compile = template.compile = function(source, options) {\n\n                // 合并默认配置\n                options = options || {};\n                for (var name in defaults) {\n                    if (options[name] === undefined) {\n                        options[name] = defaults[name];\n                    }\n                }\n\n                var filename = options.filename;\n\n                try {\n                    var Render = compiler(source, options);\n                } catch (e) {\n                    e.filename = filename || 'anonymous';\n                    e.name = 'Syntax Error';\n                    return showDebugInfo(e);\n                }\n\n                // 对编译结果进行一次包装\n                function render(data) {\n                    try {\n                        return new Render(data, filename) + '';\n                    } catch (e) {\n                        // 运行时出错后自动开启调试模式重新编译\n                        if (!options.debug) {\n                            options.debug = true;\n                            return compile(source, options)(data);\n                        }\n                        return showDebugInfo(e)();\n                    }\n                }\n\n                render.prototype = Render.prototype;\n                render.toString = function() {\n                    return Render.toString();\n                };\n\n                if (filename && options.cache) {\n                    cacheStore[filename] = render;\n                }\n\n                return render;\n            };\n\n            // 数组迭代\n            var forEach = utils.$each;\n\n            // 获取变量\n            function getVariable(code) {\n                return code\n                    .replace(REMOVE_RE, '')\n                    .replace(SPLIT_RE, ',')\n                    .replace(KEYWORDS_RE, '')\n                    .replace(NUMBER_RE, '')\n                    .replace(BOUNDARY_RE, '')\n                    .split(SPLIT2_RE);\n            };\n\n\n            // 字符串转义\n            function stringify(code) {\n                return \"'\" + code\n                    // 单引号与反斜杠转义\n                    .replace(/('|\\\\)/g, '\\\\$1')\n                    // 换行符转义(windows + linux)\n                    .replace(/\\r/g, '\\\\r')\n                    .replace(/\\n/g, '\\\\n') + \"'\";\n            }\n\n\n            function compiler(source, options) {\n\n                var debug = options.debug;\n                var openTag = options.openTag;\n                var closeTag = options.closeTag;\n                var parser = options.parser;\n                var compress = options.compress;\n                var escape = options.escape;\n\n                var line = 1;\n                var uniq = {\n                    $data: 1,\n                    $filename: 1,\n                    $utils: 1,\n                    $helpers: 1,\n                    $out: 1,\n                    $line: 1\n                };\n\n                var isNewEngine = ''.trim; // '__proto__' in {}\n                var replaces = isNewEngine ? [\"$out='';\", \"$out+=\", \";\", \"$out\"] : [\n                    \"$out=[];\", \"$out.push(\", \");\", \"$out.join('')\"\n                ];\n\n                var concat = isNewEngine ? \"$out+=text;return $out;\" :\n                    \"$out.push(text);\";\n\n                var print = \"function(){\" + \"var text=''.concat.apply('',arguments);\" +\n                    concat + \"}\";\n\n                var include = \"function(filename,data){\" + \"data=data||$data;\" +\n                    \"var text=$utils.$include(filename,data,$filename);\" + concat + \"}\";\n\n                var headerCode = \"'use strict';\" +\n                    \"var $utils=this,$helpers=$utils.$helpers,\" + (debug ? \"$line=0,\" :\n                        \"\");\n\n                var mainCode = replaces[0];\n\n                var footerCode = \"return new String(\" + replaces[3] + \");\"\n\n                // html与逻辑语法分离\n                forEach(source.split(openTag), function(code) {\n                    code = code.split(closeTag);\n\n                    var $0 = code[0];\n                    var $1 = code[1];\n\n                    // code: [html]\n                    if (code.length === 1) {\n                        mainCode += html($0);\n\n                        // code: [logic, html]\n                    } else {\n                        mainCode += logic($0);\n                        if ($1) {\n                            mainCode += html($1);\n                        }\n                    }\n                });\n\n                var code = headerCode + mainCode + footerCode;\n\n                // 调试语句\n                if (debug) {\n                    code = \"try{\" + code + \"}catch(e){\" + \"throw {\" +\n                        \"filename:$filename,\" + \"name:'Render Error',\" +\n                        \"message:e.message,\" + \"line:$line,\" + \"source:\" + stringify(\n                            source) + \".split(/\\\\n/)[$line-1].replace(/^\\\\s+/,'')\" +\n                        \"};\" + \"}\";\n                }\n\n                try {\n                    var Render = new Function(\"$data\", \"$filename\", code);\n                    Render.prototype = utils;\n                    return Render;\n                } catch (e) {\n                    e.temp = \"function anonymous($data,$filename) {\" + code + \"}\";\n                    throw e;\n                }\n\n                // 处理 HTML 语句\n                function html(code) {\n\n                    // 记录行号\n                    line += code.split(/\\n/).length - 1;\n\n                    // 压缩多余空白与注释\n                    if (compress) {\n                        code = code\n                            .replace(/\\s+/g, ' ')\n                            .replace(/<!--[\\w\\W]*?-->/g, '');\n                    }\n\n                    if (code) {\n                        code = replaces[1] + stringify(code) + replaces[2] + \"\\n\";\n                    }\n\n                    return code;\n                }\n\n\n                // 处理逻辑语句\n                function logic(code) {\n                    var thisLine = line;\n                    if (parser) {\n                        // 语法转换插件钩子\n                        code = parser(code, options);\n                    } else if (debug) {\n                        // 记录行号\n                        code = code.replace(/\\n/g, function() {\n                            line++;\n                            return \"$line=\" + line + \";\";\n                        });\n                    }\n\n                    // 输出语句. 编码: <%=value%> 不编码:<%=#value%>\n                    // <%=#value%> 等同 v2.0.3 之前的 <%==value%>\n                    if (code.indexOf('=') === 0) {\n                        var escapeSyntax = escape && !/^=[=#]/.test(code);\n                        code = code.replace(/^=[=#]?|[\\s;]*$/g, '');\n                        // 对内容编码\n                        if (escapeSyntax) {\n                            var name = code.replace(/\\s*\\([^\\)]+\\)/, '');\n                            // 排除 utils.* | include | print\n                            if (!utils[name] && !/^(include|print)$/.test(name)) {\n                                code = \"$escape(\" + code + \")\";\n                            }\n\n                            // 不编码\n                        } else {\n                            code = \"$string(\" + code + \")\";\n                        }\n\n                        code = replaces[1] + code + replaces[2];\n                    }\n\n                    if (debug) {\n                        code = \"$line=\" + thisLine + \";\" + code;\n                    }\n\n                    // 提取模板中的变量名\n                    forEach(getVariable(code), function(name) {\n\n                        // name 值可能为空，在安卓低版本浏览器下\n                        if (!name || uniq[name]) {\n                            return;\n                        }\n\n                        var value;\n\n                        // 声明模板变量\n                        // 赋值优先级:\n                        // [include, print] > utils > helpers > data\n                        if (name === 'print') {\n                            value = print;\n                        } else if (name === 'include') {\n                            value = include;\n                        } else if (utils[name]) {\n                            value = \"$utils.\" + name;\n                        } else if (helpers[name]) {\n                            value = \"$helpers.\" + name;\n                        } else {\n                            value = \"$data.\" + name;\n                        }\n\n                        headerCode += name + \"=\" + value + \",\";\n                        uniq[name] = true;\n                    });\n\n                    return code + \"\\n\";\n                }\n            };\n\n            // 定义模板引擎的语法\n            defaults.openTag = '{{';\n            defaults.closeTag = '}}';\n\n\n            var filtered = function(js, filter) {\n                var parts = filter.split(':');\n                var name = parts.shift();\n                var args = parts.join(':') || '';\n\n                if (args) {\n                    args = ', ' + args;\n                }\n\n                return '$helpers.' + name + '(' + js + args + ')';\n            }\n\n            defaults.parser = function(code, options) {\n\n                // var match = code.match(/([\\w\\$]*)(\\b.*)/);\n                // var key = match[1];\n                // var args = match[2];\n                // var split = args.split(' ');\n                // split.shift();\n\n                code = code.replace(/^\\s/, '');\n\n                var split = code.split(' ');\n                var key = split.shift();\n                var args = split.join(' ');\n\n                switch (key) {\n\n                    case 'if':\n                        code = 'if(' + args + '){';\n                        break;\n                    case 'else':\n                        if (split.shift() === 'if') {\n                            split = ' if(' + split.join(' ') + ')';\n                        } else {\n                            split = '';\n                        }\n                        code = '}else' + split + '{';\n                        break;\n                    case '/if':\n                        code = '}';\n                        break;\n                    case 'each':\n                        var object = split[0] || '$data';\n                        var as = split[1] || 'as';\n                        var value = split[2] || '$value';\n                        var index = split[3] || '$index';\n                        var param = value + ',' + index;\n\n                        if (as !== 'as') {\n                            object = '[]';\n                        }\n\n                        code = '$each(' + object + ',function(' + param + '){';\n                        break;\n                    case '/each':\n                        code = '});';\n                        break;\n                    case 'echo':\n                        code = 'print(' + args + ');';\n                        break;\n                    case 'print':\n                    case 'include':\n                        code = key + '(' + split.join(',') + ');';\n                        break;\n                    default:\n                        // 过滤器（辅助方法）\n                        // {{value | filterA:'abcd' | filterB}}\n                        // >>> $helpers.filterB($helpers.filterA(value, 'abcd'))\n                        // TODO: {{ddd||aaa}} 不包含空格\n                        if (/^\\s*\\|\\s*[\\w\\$]/.test(args)) {\n                            var escape = true;\n\n                            // {{#value | link}}\n                            if (code.indexOf('#') === 0) {\n                                code = code.substr(1);\n                                escape = false;\n                            }\n\n                            var i = 0;\n                            var array = code.split('|');\n                            var len = array.length;\n                            var val = array[i++];\n\n                            for (; i < len; i++) {\n                                val = filtered(val, array[i]);\n                            }\n\n                            code = (escape ? '=' : '=#') + val;\n\n                            // 即将弃用 {{helperName value}}\n                        } else if (template.helpers[key]) {\n\n                            code = '=#' + key + '(' + split.join(',') + ');';\n\n                            // 内容直接输出 {{value}}\n                        } else {\n\n                            code = '=' + code;\n                        }\n                        break;\n                }\n\n                return code;\n            };\n\n\n            fly.template = template;\n            module.exports = template;\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    15: [\n        function(require, module, exports) {\n            /**\n             * 组件\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-06-01 15:20\n             */\n\n            'use strict';\n\n            // 依赖模块\n            var fly = require('./fly.core'),\n                Observable = require('./fly.observable'),\n                utils = require('./fly.utils'),\n                $ = fly.$,\n                NS = fly.NS,\n                slice = [].slice;\n\n            var STRING = 'string',\n                FUNCTION = 'function',\n                ROLE = 'role',\n                HANDLER = 'handler';\n\n            var ui = {\n                roles: {},\n                defaults: {}\n            };\n\n            ui.Widget = Observable.extend({\n\n                ctor: function(element, options, cache) {\n                    var that = this,\n                        name = that.name || '',\n                        dataSource;\n\n                    options = options || {};\n\n                    that.element = $(element);\n                    that._super();\n\n                    dataSource = options.dataSource || null;\n\n                    if (dataSource) {\n                        options = $.extend({}, options, {\n                            dataSource: {}\n                        });\n                    }\n\n                    options = that.options = $.extend(true, {}, that.options, options);\n\n                    if (dataSource) {\n                        options.dataSource = dataSource;\n                    }\n\n                    if (cache !== false) {\n                        that.element.data(ROLE, name.toLowerCase());\n                        that.element.data(HANDLER, that);\n                        that.element.data(NS + name, that);\n                    }\n\n                    that.bind(that.events, options);\n                },\n\n                events: [],\n\n                options: {\n                    prefix: ''\n                },\n\n                _hasBindingTarget: function() {\n                    return !!this.element[0].flyBindingTarget;\n                },\n\n                _tabindex: function(target) {\n                    target = target || this.wrapper;\n\n                    var element = this.element,\n                        TABINDEX = 'tabindex',\n                        tabindex = target.attr(TABINDEX) || element.attr(TABINDEX);\n\n                    element.removeAttr(TABINDEX);\n\n                    target.attr(TABINDEX, !isNaN(tabindex) ? tabindex : 0);\n                },\n\n                setOptions: function(options) {\n                    this._setEvents(options);\n                    $.extend(this.options, options);\n                },\n\n                _setEvents: function(options) {\n                    var that = this,\n                        idx = 0,\n                        length = that.events.length,\n                        e;\n\n                    for (; idx < length; idx++) {\n                        e = that.events[idx];\n                        if (that.options[e] && options[e]) {\n                            that.unbind(e, that.options[e]);\n                        }\n                    }\n\n                    that.bind(that.events, options);\n                },\n\n                resize: function(force) {\n                    var size = this.getSize(),\n                        currentSize = this._size;\n\n                    if (force || (size.width > 0 || size.height > 0) && (!currentSize ||\n                        size.width !==\n                        currentSize.width || size.height !== currentSize.height)) {\n                        this._size = size;\n                        this._resize(size, force);\n                        this.trigger('resize', size);\n                    }\n                },\n\n                getSize: function() {\n                    return {\n                        width: this.element.width(),\n                        height: this.element.height()\n                    };\n                },\n\n                size: function(size) {\n                    if (!size) {\n                        return this.getSize();\n                    } else {\n                        this.setSize(size);\n                    }\n                },\n\n                setSize: $.noop,\n                _resize: $.noop,\n\n                destroy: function() {\n                    var that = this;\n\n                    that.element.removeData(that.name);\n                    that.element.removeData(HANDLER);\n                    that.unbind();\n                },\n\n                angular: function() {}\n            });\n\n            ui.DataBoundWidget = ui.Widget.extend({\n\n                dataItems: function() {\n                    return this.dataSource.view();\n                },\n\n                _angularItems: function(cmd) {\n                    var that = this;\n                    that.angular(cmd, function() {\n                        return {\n                            elements: that.items(),\n                            data: $.map(that.dataItems(), function(dataItem) {\n                                return {\n                                    dataItem: dataItem\n                                };\n                            })\n                        };\n                    });\n                }\n            });\n\n            ui.register = function(widget, register) {\n                var name = widget.fn.name,\n                    getter;\n\n                register = register || fly.ui;\n                register[name] = widget;\n                register.roles[name.toLowerCase()] = widget;\n\n                getter = 'getFly' + name;\n                name = NS + name;\n\n                $.fn[name] = function(options) {\n                    var value = this,\n                        args;\n\n                    options = options || {};\n\n                    if (typeof options === STRING) {\n                        args = slice.call(arguments, 1);\n\n                        this.each(function() {\n                            var widget = $.data(this, name),\n                                method,\n                                result;\n\n                            if (!widget) {\n                                throw new Error('Cannot call method \"' + options + '\" of ' +\n                                    name + ' before it is initialized');\n                            }\n\n                            method = widget[options];\n\n                            if (typeof method !== FUNCTION) {\n                                throw new Error('Cannot find method \"' + options + '\" of ' +\n                                    name);\n                            }\n\n                            result = method.apply(widget, args);\n\n                            if (result !== undefined) {\n                                value = result;\n                                return false;\n                            }\n                        });\n                    } else {\n                        this.each(function() {\n                            new widget(this, options);\n                        });\n                    }\n\n                    return value;\n                };\n\n                $.fn[name].widget = widget;\n\n                $.fn[getter] = function() {\n                    return this.data(name);\n                };\n            };\n\n            ui.initWidget = function(element, options, roles) {\n                var result,\n                    option,\n                    widget,\n                    idx,\n                    length,\n                    role,\n                    value,\n                    dataSource,\n                    fullPath,\n                    widgetKeyRegExp;\n\n                if (!roles) {\n                    roles = fly.ui.roles;\n                } else if (roles.roles) {\n                    roles = roles.roles;\n                }\n\n                element = element.nodeType ? element : element[0];\n\n                role = element.getAttribute('data-role');\n\n                if (!role) {\n                    return;\n                }\n\n                widget = roles[role];\n\n                var data = $(element).data(),\n                    name = widget.fn.name,\n                    widgetKey = widget ? 'fly' + name : '';\n\n                widgetKeyRegExp = new RegExp(\"^\" + widgetKey + \"$\", \"i\");\n\n                for (var key in data) {\n                    if (key.match(widgetKeyRegExp)) {\n                        // we have detected a widget of the same kind - save its reference, we will set its options\n                        if (key === widgetKey) {\n                            result = data[key];\n                        } else {\n                            return data[key];\n                        }\n                    }\n                }\n\n                if (!widget) {\n                    return;\n                }\n\n                dataSource = utils.parseOption(element, 'dataSource');\n\n                options = $.extend({}, utils.parseEleOptions(element, widget.fn.options),\n                    options);\n\n                if (dataSource) {\n                    if (typeof dataSource === STRING) {\n                        options.dataSource = fly.getter(dataSource)(window);\n                    } else {\n                        options.dataSource = dataSource;\n                    }\n                }\n\n                for (idx = 0, length = widget.fn.events.length; idx < length; idx++) {\n                    option = widget.fn.events[idx];\n\n                    value = utils.parseOption(element, option);\n\n                    if (value !== undefined) {\n                        options[option] = fly.getter(value)(window);\n                    }\n                }\n\n                if (!result) {\n                    result = new widget(element, options);\n                } else if (!$.isEmptyObject(options)) {\n                    result.setOptions(options);\n                }\n\n                return result;\n            };\n\n            fly.ui = ui;\n            module.exports = ui;\n\n        }, {\n            \"./fly.core\": 4,\n            \"./fly.observable\": 12,\n            \"./fly.utils\": 16\n        }\n    ],\n    16: [\n        function(require, module, exports) {\n            /**\n             * 常用工具集合\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update: 2015-06-01 15:20\n             */\n\n            'use strict';\n\n            // 依赖core\n            var fly = require(\"./fly.core\");\n            var $ = fly.$;\n\n            // 工具类库\n            var utils = fly.utils || {};\n\n            // 用来检测类型，例如 objectToString.call(value) => \"[object Date]\"\n            var objectToString = {}.toString;\n\n            // 不换行空格，例如&nbsp;\n            var nonBreakingSpaceRegExp = /\\u00A0/g;\n\n            // 科学计数法\n            var exponentRegExp = /[eE][\\-+]?[0-9]+/;\n\n            var shortTimeZoneRegExp = /[+|\\-]\\d{1,2}/,\n                longTimeZoneRegExp = /[+|\\-]\\d{1,2}:?\\d{2}/,\n                dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n                dashRegExp = /([A-Z])/g,\n                jsonRegExp = /^\\s*(?:\\{(?:.|\\r\\n|\\n)*\\}|\\[(?:.|\\r\\n|\\n)*\\])\\s*$/,\n                jsonFormatRegExp = /^\\{(\\d+)(:[^\\}]+)?\\}|^\\[[A-Za-z_]*\\]$/,\n                numberRegExp = /^(\\+|-?)\\d+(\\.?)\\d*$/;\n\n            var offsetRegExp = /[+-]\\d*/;\n\n            var formatsSequence = ['G', 'g', 'd', 'F', 'D', 'y', 'm', 'T', 't'];\n\n            /**\n             * 获取URL中的参数值\n             * @param  {String} name 参数名\n             * @return {String} 参数值，若没有该参数，则返回''\n             */\n            utils.getQueryString = function(name) {\n                var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n                var r = window.location.search.substr(1).match(reg);\n                if (r != null) {\n                    return unescape(r[2]);\n                }\n                return '';\n            };\n\n            /**\n             * 获取时间戳\n             */\n            utils.now = Date.now || function() {\n                return new Date().getTime();\n            };\n\n            /**\n             * 函数节流\n             * 创建并返回一个像节流阀一样的函数，当重复调用函数的时候，最多每隔 wait 毫秒调用一次该函数。\n             * 对于想控制一些触发频率较高的事件有帮助。\n             * 如果你想禁用第一次首先执行的话，传递 {leading: false}\n             * 还有如果你想禁用最后一次执行的话，传递 {trailing: false}\n             * 来自underscore\n             * @param   {Function} func    要执行的函数\n             * @param   {Number}   wait    频度时间\n             * @param   {Object}   options 配置参数\n             * @returns {Function} 已节流的函数\n             */\n            utils.throttle = function(func, wait, options) {\n                var context, args, result;\n                var timeout = null;\n                var previous = 0;\n                if (!options) options = {};\n                var later = function() {\n                    previous = options.leading === false ? 0 : utils.now();\n                    timeout = null;\n                    result = func.apply(context, args);\n                    if (!timeout) context = args = null;\n                };\n                return function() {\n                    var now = utils.now();\n                    if (!previous && options.leading === false) previous = now;\n                    var remaining = wait - (now - previous);\n                    context = this;\n                    args = arguments;\n                    if (remaining <= 0 || remaining > wait) {\n                        if (timeout) {\n                            clearTimeout(timeout);\n                            timeout = null;\n                        }\n                        previous = now;\n                        result = func.apply(context, args);\n                        if (!timeout) context = args = null;\n                    } else if (!timeout && options.trailing !== false) {\n                        timeout = setTimeout(later, remaining);\n                    }\n                    return result;\n                };\n            };\n\n            /**\n             * 函数防反跳\n             * 将延迟函数的执行(真正的执行)在函数最后一次调用时刻的 wait 毫秒之后\n             * 来自underscore\n             * @param   {Function} func        要执行的函数\n             * @param   {Number}   wait        等待的时间\n             * @param   {Boolean}  [immediate] 为 true 时会在 wait 时间间隔的开始调用这个函数\n             * @returns {Function} 函数的防反跳版本\n             */\n            utils.debounce = function(func, wait, immediate) {\n                var timeout, args, context, timestamp, result;\n\n                var later = function() {\n                    var last = utils.now() - timestamp;\n                    if (last < wait && last >= 0) {\n                        timeout = setTimeout(later, wait - last);\n                    } else {\n                        timeout = null;\n                        if (!immediate) {\n                            result = func.apply(context, args);\n                            if (!timeout) context = args = null;\n                        }\n                    }\n                };\n\n                return function() {\n                    context = this;\n                    args = arguments;\n                    timestamp = utils.now();\n                    var callNow = immediate && !timeout;\n                    if (!timeout) timeout = setTimeout(later, wait);\n                    if (callNow) {\n                        result = func.apply(context, args);\n                        context = args = null;\n                    }\n\n                    return result;\n                };\n            };\n\n            /**\n             * 检查元素是否在视野中\n             * @param  {Element} element 需要检查的元素\n             * @param  {Object}  options 设置选项，可以设置顶部和左边的偏移量\n             * @return {Boolean} 在当前视野中，返回true；否则返回false\n             */\n            utils.isInView = function(element, options) {\n                var $element = $(element);\n\n                if (!$element.is(':visible')) {\n                    return false;\n                }\n\n                var windowLeft = fly.$win.scrollLeft(),\n                    windowTop = fly.$win.scrollTop(),\n                    windowWidth = fly.$win.width(),\n                    windowHeight = fly.$win.height(),\n                    width = $element.width(),\n                    height = $element.height(),\n                    offset = $element.offset(),\n                    left = offset.left,\n                    top = offset.top;\n\n                options = $.extend({\n                    top: 0,\n                    left: 0\n                }, options);\n\n                // 下边缘在屏幕顶部以下\n                // 上边缘在屏幕底部以上\n                // 右边缘在屏幕左部以右\n                // 左边缘在屏幕右部以左\n                if (top + height >= windowTop &&\n                    top - options.top <= windowTop + windowHeight &&\n                    left + width >= windowLeft &&\n                    left - options.left <= windowLeft + windowWidth) {\n                    return true;\n                } else {\n                    return false;\n                }\n            };\n\n            /**\n             * 处理url\n             * @param   {String} url 原始url\n             * @returns {String} 完整url\n             */\n            utils.url = function(url) {\n                var path = typeof(CONTEXTPATH) == 'undefined' ? '' : CONTEXTPATH;\n\n                if (!url) return '';\n\n                if (url.indexOf('http://') == 0 || url.indexOf('https://') == 0 || url.indexOf(\n                    '//') == 0 || (path && url.indexOf(path) == 0)) {\n                    return url;\n                } else {\n                    return path + url;\n                }\n            };\n\n            /**\n             * 解析元素指定的属性值\n             * @param   {Object} element 元素\n             * @param   {String} option  属性\n             * @returns {Any}    解析后的值\n             */\n            utils.parseOption = function(element, option) {\n                var value;\n\n                if (option.indexOf('data') === 0) {\n                    option = option.substring(4);\n                    option = option.charAt(0).toLowerCase() + option.substring(1);\n                }\n\n                option = option.replace(dashRegExp, \"-$1\").toLowerCase();\n                value = element.getAttribute(\"data-\" + option);\n\n                if (value === null) {\n                    value = undefined;\n                } else if (value === \"null\") {\n                    value = null\n                } else if (value === \"true\") {\n                    value = true;\n                } else if (value === \"false\") {\n                    value = false;\n                } else if (numberRegExp.test(value)) {\n                    value = parseFloat(value);\n                } else if (jsonRegExp.test(value) && !jsonFormatRegExp.test(value)) {\n                    value = new Function(\"return (\" + value + \")\")();\n                }\n\n                return value;\n            };\n\n            /**\n             * 解析元素属性值\n             * @param   {Object} element 元素\n             * @param   {Object} options 需要解析的参数\n             * @returns {Object} 解析后的值\n             */\n            utils.parseEleOptions = function(element, options) {\n                var result = {},\n                    option,\n                    value;\n\n                for (option in options) {\n                    value = utils.parseOption(element, option);\n\n                    if (value !== undefined) {\n                        /*if (templateRegExp.test(option)) {\n                value = fly.template($(\"#\" + value).html());\n            }*/\n                        result[option] = value;\n                    }\n                }\n\n                return result;\n            };\n\n            /**\n             * 计算字符串的字节长度\n             * @param   {String} str 需要计算长度的字符串\n             * @returns {Number} 字节长度\n             */\n            utils.getByteLen = function(str) {\n                var len = 0,\n                    str = str || '',\n                    l = str.length,\n                    i = 0;\n                for (; i < l; i++) {\n                    var code = str.charCodeAt(i);\n                    if (code >= 0 && code <= 128) {\n                        len += 1;\n                    } else {\n                        len += 2;\n                    }\n                }\n                return len;\n            };\n\n            /**\n             * 在输入框中选取字符\n             * @param   {Number} start [[Description]]\n             * @param   {Number} end   [[Description]]\n             * @returns {Object} document\n             */\n            utils.selectRange = function(start, end) {\n                var ele = this[0] || this;\n                if (ele.createTextRange) {\n                    var range = ele.createTextRange();\n                    range.collapse(true);\n                    range.moveEnd('character', end);\n                    range.moveStart('character', start);\n                    range.select();\n                } else {\n                    ele.focus();\n                    ele.setSelectionRange(start, end);\n                }\n                return ele;\n            };\n\n            /**\n             * POST发送数据\n             * @param   {String}   url  数据接口\n             * @param   {Object}   data 需要传输的数据\n             * @param   {String}   type 接收数据的方式\n             * @returns {Function} jQuery Ajax\n             */\n            utils.post = function(url, data, type) {\n                type = type || 'json';\n                return $.ajax({\n                    url: utils.url(url),\n                    data: data || {},\n                    dataType: type || 'json',\n                    type: 'POST'\n                });\n            };\n\n            /**\n             * GET请求数据\n             * @param   {String}   url  数据接口\n             * @param   {Object}   data 需要传输的数据\n             * @param   {String}   type 接收数据的方式\n             * @returns {Function} jQuery Ajax\n             */\n            utils.get = function(url, data, type) {\n                type = type || 'json';\n                return $.ajax({\n                    url: utils.url(url),\n                    cache: false,\n                    data: data || {},\n                    dataType: type || 'json',\n                    type: 'GET'\n                });\n            };\n\n            /**\n             * 获取最高层级的window\n             * @returns {Object} 引用flyui的最高层级的window对象\n             */\n            fly.top = function() {\n                var top = window,\n                    test = function(name) {\n                        try {\n                            var doc = window[name].document; // 跨域|无权限\n                            doc.getElementsByTagName; // chrome 本地安全限制\n                        } catch (e) {\n                            return false;\n                        }\n\n                        return window[name].fly &&\n                            doc.getElementsByTagName('frameset').length === 0;\n                    };\n\n                if (test('top')) {\n                    top = window.top;\n                } else if (test('parent')) {\n                    top = window.parent;\n                }\n\n                return top;\n            }();\n\n            /**\n             * 销毁vm绑定的组件\n             * @param {Object} element\n             */\n            fly.destroy = function(element) {\n                $(element).find('[data-role]').addBack().each(function() {\n                    var data = $(this).data();\n                    for (var key in data) {\n                        if (key.indexOf(fly.NS) === 0 && typeof data[key].destroy ===\n                            FUNCTION) {\n                            data[key].destroy();\n                        }\n                    }\n                });\n            };\n\n            /**\n             * 获取计算后的样式\n             * @param   {Object} element    DOM\n             * @param   {Array}  properties 属性\n             * @returns {Object} 样式对象\n             */\n            fly.getComputedStyles = function(element, properties) {\n                var defaultView = document.defaultView,\n                    styles = {},\n                    computedStyle;\n\n                if (defaultView && defaultView.getComputedStyle) {\n                    computedStyle = defaultView.getComputedStyle(element, \"\");\n\n                    if (properties) {\n                        $.each(properties, function(idx, value) {\n                            styles[value] = computedStyle.getPropertyValue(value);\n                        });\n                    }\n                } else {\n                    computedStyle = element.currentStyle;\n\n                    if (properties) {\n                        $.each(properties, function(idx, value) {\n                            styles[value] = computedStyle[value.replace(/\\-(\\w)/g, function(\n                                strMatch, g1) {\n                                return g1.toUpperCase();\n                            })];\n                        });\n                    }\n                }\n\n                if ($.isEmptyObject(styles)) {\n                    styles = computedStyle;\n                }\n\n                return styles;\n            };\n\n            /**\n             * 是否支持滚动条\n             * @param   {Object}  element DOM\n             * @returns {Boolean} 是则支持，否则不支持\n             */\n            fly.isScrollable = function(element) {\n                return fly.getComputedStyles(element, [\"overflow\"]).overflow != \"visible\";\n            };\n\n            /**\n             * 返回当前获得焦点的元素\n             * @returns {Object} DOM\n             */\n            fly.activeElement = function() {\n                try {\n                    return document.activeElement;\n                } catch (e) {\n                    return document.documentElement.activeElement;\n                }\n            };\n\n            /**\n             * 插入字符\n             * @param   {Object} element DOM\n             * @param   {Number} start   开始位置\n             * @param   {Number} end     结束位置\n             * @returns {Array}  [[Description]]\n             */\n            fly.caret = function(element, start, end) {\n                var rangeElement;\n                var isPosition = start !== undefined;\n\n                if (end === undefined) {\n                    end = start;\n                }\n\n                if (element[0]) {\n                    element = element[0];\n                }\n\n                if (isPosition && element.disabled) {\n                    return;\n                }\n\n                try {\n                    if (element.selectionStart !== undefined) {\n                        if (isPosition) {\n                            element.focus();\n                            element.setSelectionRange(start, end);\n                        } else {\n                            start = [element.selectionStart, element.selectionEnd];\n                        }\n                    } else if (document.selection) {\n                        if ($(element).is(\":visible\")) {\n                            element.focus();\n                        }\n\n                        rangeElement = element.createTextRange();\n\n                        if (isPosition) {\n                            rangeElement.collapse(true);\n                            rangeElement.moveStart(\"character\", start);\n                            rangeElement.moveEnd(\"character\", end - start);\n                            rangeElement.select();\n                        } else {\n                            var rangeDuplicated = rangeElement.duplicate(),\n                                selectionStart, selectionEnd;\n\n                            rangeElement.moveToBookmark(document.selection.createRange().getBookmark());\n                            rangeDuplicated.setEndPoint('EndToStart', rangeElement);\n                            selectionStart = rangeDuplicated.text.length;\n                            selectionEnd = selectionStart + rangeElement.text.length;\n\n                            start = [selectionStart, selectionEnd];\n                        }\n                    }\n                } catch (e) {\n                    start = [];\n                }\n\n                return start;\n            };\n\n            fly.utils = utils;\n            module.exports = utils;\n        }, {\n            \"./fly.core\": 4\n        }\n    ],\n    17: [\n        function(require, module, exports) {\n            /**\n             * 数据校验\n             * @author: huanzhang\n             * @email: huanzhang@iflytek.com\n             * @update:\n             */\n\n            'use strict';\n\n            // 依赖core\n            var fly = require('./fly.core'),\n                utils = require('./fly.utils'),\n                calc = require('./fly.calculate'),\n                format = require('./fly.format'),\n                $ = fly.$;\n\n            // 验证库\n            var REGEXP = {\n                EMAIL: \"^[a-z0-9._%-]+@([a-z0-9-]+\\\\.)+[a-z]{2,4}$\",\n                NUMBER: \"^\\\\-?\\\\d+(\\\\.\\\\d+)?$\",\n                URL: \"^(http|https|ftp)\\\\:\\\\/\\\\/[a-z0-9\\\\-\\\\.]+\\\\.[a-z]{2,3}(:[a-z0-9]*)?\\\\/?([a-z0-9\\\\-\\\\._\\\\?\\\\,\\\\'\\\\/\\\\\\\\\\\\+&amp;%\\\\$#\\\\=~])*$\",\n                TEL: \"^1\\\\d{10}$\",\n                ZIPCODE: \"^\\\\d{6}$\"\n            };\n\n            // 提示语\n            var PROMPT = {\n                radio: '请选择一个选项',\n                checkbox: '如果要继续，请选中此框',\n                select: '请选择列表中的一项',\n                email: '请输入电子邮件地址',\n                url: '请输入网站地址',\n                tel: '请输入手机号码',\n                number: '请输入数值',\n                date: '请输入日期',\n                pattern: '内容格式不符合要求',\n                empty: '请填写此字段',\n                multiple: '多条数据使用逗号分隔'\n            };\n\n            var UNDEFINED = 'undefined',\n                NUMBER = 'number',\n                FUNCTION = 'function',\n                STRING = 'string';\n\n            var specialChars = /\\W+$/;\n\n            var showTooltip = true;\n\n            var isRegExp = function(valid) {\n                var ele = $(this),\n                    value = $.trim(ele.val()),\n                    type = valid.type || ele.attr('type'),\n                    regex = valid.pattern;\n\n                // 获取正则表达式，pattern属性获取优先，然后通过type类型匹配。\n                // 注意，不处理为空的情况\n                regex = regex || (function() {\n                    return ele.attr('pattern');\n                })() || (function() {\n                    // 文本框类型处理，可能有管道符——多类型重叠，如手机或邮箱\n                    return type && $.map(type.split('|'), function(typeSplit) {\n                        var matchRegex = REGEXP[typeSplit.toUpperCase()];\n                        if (matchRegex) return matchRegex;\n                    }).join('|');\n                })();\n\n                // 若值为空或正则为空\n                if (value === '' || !regex) return true;\n\n                // multiple多数据的处理\n                var isMultiple = !!$(ele).attr('multiple'),\n                    newRegExp = new RegExp(regex);\n\n                // number类型下multiple无效\n                if (isMultiple && !/^number|range$/i.test(type)) {\n                    var isAllPass = true;\n                    $.each(value.split(','), function(i, partValue) {\n                        partValue = $.trim(partValue);\n                        if (isAllPass && !newRegExp.test(partValue)) {\n                            isAllPass = false;\n                        }\n                    });\n                    return isAllPass;\n                } else {\n                    return newRegExp.test(value);\n                }\n                return true;\n            };\n\n            var tooltip = function(ele, content) {\n                if (!showTooltip) return;\n\n                if (fly.validateTip) {\n                    fly.validateTip(content);\n                    return;\n                }\n\n                var widget = ele.closest('.widget');\n                ele = widget.length ? widget : ele;\n                ele.flyTooltip && ele.flyTooltip({\n                    content: content\n                });\n            };\n\n            var isEmpty = function(value) {\n                var ele = $(this),\n                    trimValue = ele.val();\n\n                value = value || ele.attr('placeholder');\n\n                if (ele.attr('type') !== 'password') {\n                    trimValue = $.trim(trimValue);\n                }\n\n                if (trimValue === '' || trimValue === value) {\n                    return true;\n                }\n\n                return false;\n            };\n\n            var isOverflow = function(valid) {\n                var ele = $(this);\n                if (!ele) return false;\n\n                var value = ele.val(),\n                    step = ele.attr('step'),\n                    type = ele.data('type') || ele.attr('type'),\n                    min = ele.attr('min'),\n                    max = ele.attr('max');\n\n                valid = valid || {};\n\n                if (typeof(valid.min) !== UNDEFINED) min = valid.min;\n                if (typeof(valid.max) !== UNDEFINED) max = valid.max;\n                if (typeof(valid.step) !== UNDEFINED) step = valid.step;\n                if (typeof(valid.type) !== UNDEFINED) type = valid.type;\n\n                if (type === NUMBER) {\n                    if (typeof(min) !== UNDEFINED && value < min) {\n                        tooltip(ele, '值必须大于或等于' + min);\n                    } else if (typeof(max) !== UNDEFINED && value > max) {\n                        tooltip(ele, '值必须小于或等于' + max);\n                    } else if (typeof(step) !== UNDEFINED && !\n                        /^\\d+$/.test(calc.div(Math.abs(calc.sub(value, min || 0)), step))) {\n                        tooltip(ele, '值无效');\n                    } else {\n                        return false;\n                    }\n                    ele.focus();\n                    ele.select();\n                } else {\n                    if (typeof(min) !== UNDEFINED && value.length < min) {\n                        tooltip(ele, '至少输入' + min + '个字符');\n                        ele.focus();\n                    } else if (typeof(max) !== UNDEFINED && value.length > max) {\n                        tooltip(ele, '最多输入' + max + '个字符');\n                        utils.selectRange.call(ele, max, value.length);\n                    } else {\n                        return false;\n                    }\n                }\n\n                return true;\n            };\n\n            var customValid = function(valid) {\n                var ele = $(this),\n                    value = ele.val(),\n                    check = valid.check;\n\n                if (typeof(check) === FUNCTION) {\n                    return check.call(ele);\n                }\n\n                return true;\n            };\n\n            var remind = function(valid, tag) {\n\n                var control = $(this),\n                    type = valid.type,\n                    key = valid.key || control.data('key'),\n                    text = valid.title || $.trim(control.closest('.widget').children(\n                        '.label').text()).replace(\n                        /\\*/ig, '').replace(/＊/ig, '').replace(/：/ig, '').replace(/:/ig, ''),\n                    placeholder;\n\n                // 如果元素完全显示\n                if ($(control).is(':visible')) {\n                    if (type == 'radio' || type == 'checkbox') {\n                        tooltip(control, PROMPT[type]);\n                        control.focus();\n                    } else if (tag == 'select' || tag == 'empty') {\n                        // 下拉值为空或文本框文本域等为空\n                        tooltip(control, (tag == 'empty' && text) ? '您尚未输入' + text : PROMPT[\n                            tag]);\n                        control.focus();\n                    } else if (/^range|number$/i.test(type) && Number(control.val())) {\n                        // 整数值与数值的特殊提示\n                        tooltip(control, '值无效');\n                        control.focus();\n                        control.select();\n                    } else {\n                        // 文本框文本域格式不准确\n                        // 提示文字的获取\t\n                        var finalText = PROMPT[type] || PROMPT['pattern'];\n                        if (text) {\n                            finalText = '您输入的' + text + '格式不准确';\n                        }\n                        if (type != 'number' && !!control.attr('multiple')) {\n                            finalText += \"，\" + PROMPT[\"multiple\"];\n                        }\n\n                        tooltip(control, finalText);\n                        control.focus();\n                        control.select();\n                    }\n                } else {\n                    // 元素隐藏，寻找关联提示元素, 并走label提示流(radio, checkbox除外)\n                    var selector = control.data('target'),\n                        target = typeof selector == STRING ? $((document.getElementById(\n                            selector) ? '#' : '.') + selector) : selector,\n                        customTxt = '您尚未' + (key || (tag == 'empty' ? '输入' : '选择')) + ((!\n                            /^radio|checkbox$/i.test(type) && text) || '该项内容'),\n                        offset;\n                    if (target && target.length) {\n                        tooltip(target, customTxt);\n                    } else {\n                        // alert\n                        //fly.tip(customTxt);\n                    }\n                }\n                return false;\n            };\n\n            var validate = function(ele, valid, hasTooltip) {\n                ele = $(ele);\n                if (ele.length === 0) {\n                    return true;\n                }\n\n                valid = valid || {};\n                showTooltip = hasTooltip === false ? false : true;\n\n                var type = valid.type || ele.data('type') || ele.attr('type'),\n                    tag = ele[0].tagName,\n                    required = valid.required || !!ele.attr('required'),\n                    target = valid.target || ele.attr('mind-target'),\n                    accept = target ? $('[mind-accept=\"' + target + '\"]') : null,\n                    name = ele.attr('name'),\n                    isPass = true;\n\n                // 禁用字段不验证\n                // 或target是禁用状态也不验证\n                if (ele.is(':disabled') || (accept && accept.is(':disabled'))) {\n                    return true;\n                }\n\n                // 无需验证的状态\n                if (type == 'submit' || type == 'reset' || type == 'file' || type ==\n                    'image') {\n                    return true;\n                }\n\n                // 需要验证的有\n                // input文本框, type, required, pattern, max, min\n                // radio, checkbox\n                // select\n                // textarea\n                if ((type == 'radio' || type == 'checkbox') && required) {\n                    // 单选框和复选框，只需验证是否必选\n                    var eles = name ? $('input[type=\"' + type + '\"][name=\"' + name + '\"]') :\n                        ele,\n                        pass = false;\n\n                    eles.each(function() {\n                        if (pass == false && $(this).is(':checked')) {\n                            pass = true;\n                            return;\n                        }\n                    });\n\n                    if (pass == false) {\n                        isPass = remind.call(eles.get(0), type, tag);\n                    }\n                } else if (tag == 'select' && required && !ele.val()) {\n                    // 下拉框只要关心值\n                    isPass = remind.call(ele, valid, tag);\n                } else if (required && isEmpty.call(ele)) {\n                    // 空值\n                    // 需要判断当前控件的类型\n                    remind.call(ele, valid, 'empty');\n                    isPass = false;\n                } else if (!isRegExp.call(ele, valid)) {\n                    // 各种类型文本框以及文本域\n                    // allpass为true表示是为空，为false表示验证不通过\n                    remind.call(ele, valid, tag);\n                    isPass = false;\n                } else if (isOverflow.call(ele, valid)) {\n                    // 最大值最小值, 个数是否超出的验证\n                    isPass = false;\n                } else if (!customValid.call(ele, valid)) {\n                    // 最后校验 自定义校验\n                    isPass = false;\n                    ele.focus();\n                }\n\n                ele.toggleClass('error', !isPass);\n\n                return isPass;\n            };\n\n            fly.validate = validate;\n            module.exports = validate;\n\n        }, {\n            \"./fly.calculate\": 2,\n            \"./fly.core\": 4,\n            \"./fly.format\": 7,\n            \"./fly.utils\": 16\n        }\n    ],\n    18: [\n        function(require, module, exports) {\n            'use strict';\n\n            var fly = {};\n\n            fly = require('./fly.core');\n            require('./fly.binder');\n            require('./fly.calculate');\n            require('./fly.class');\n            require('./fly.data');\n            require('./fly.drag');\n            require('./fly.format');\n            require('./fly.legacy');\n            require('./fly.model');\n            require('./fly.observable');\n            require('./fly.router');\n            require('./fly.template');\n            require('./fly.ui');\n            require('./fly.utils');\n            require('./fly.validate');\n            require('./fly.mobile.core');\n            require('./fly.mobile.request');\n\n            module.exports = fly;\n\n        }, {\n            \"./fly.binder\": 1,\n            \"./fly.calculate\": 2,\n            \"./fly.class\": 3,\n            \"./fly.core\": 4,\n            \"./fly.data\": 5,\n            \"./fly.drag\": 6,\n            \"./fly.format\": 7,\n            \"./fly.legacy\": 8,\n            \"./fly.mobile.core\": 9,\n            \"./fly.mobile.request\": 10,\n            \"./fly.model\": 11,\n            \"./fly.observable\": 12,\n            \"./fly.router\": 13,\n            \"./fly.template\": 14,\n            \"./fly.ui\": 15,\n            \"./fly.utils\": 16,\n            \"./fly.validate\": 17\n        }\n    ]\n}, {}, [18]);\n"]}